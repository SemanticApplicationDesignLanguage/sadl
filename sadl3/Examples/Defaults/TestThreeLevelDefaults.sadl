uri "http://sadl.imp/TestThreeLevelDefaults".
// In this test case we are trying to construct a model which
//  will only give the value Black to MyThingy1 and only give the value Green to op of Thingy2
//  We do so successfully and all test cases pass.

Thingy is a top-level class.
Color is a top-level class, must be one of {Black, White, Green}.
dp describes Thingy has values of type float.
op describes Thingy has values of type Color. 
ready describes Thingy has a single value of type boolean.

dp of Thingy has level 0 default 2.3  . 
ready of Thingy has level 1 default true.   
op of Thingy has level 2 default White.

Rule StageOneRule
	given
		x is a Thingy
	if
		dp of x > 2
	then
		op of x is Black.
		
Rule StageTwoRule
	given
		x is a Thingy
	if
		ready of x is true
		op of x is not Black
	then
		op of x is Green.		

MyThing1 is a Thingy.
MyThing2 is a Thingy, has dp 1.5 . 

// dp of MyThing1 is 2.3 from level 0 default
Test: MyThing1 has dp 2.3 .
		
// op of MyThing1 should be Black by StageOneRule and shouldn't get any other values	
Test: "select ?c where {<MyThing1> <op> ?c}" is only Black.

// op of MyThing2 is Green by StageTwoRule (after level 1 default of ready) and shouldn't get any other values						    
Test: "select ?c where {<MyThing2> <op> ?c}" is only Green. 

