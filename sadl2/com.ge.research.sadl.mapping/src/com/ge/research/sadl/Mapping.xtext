grammar com.ge.research.sadl.Mapping hidden(WS, ML_COMMENT, SL_COMMENT) //with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ge.com/research/sadl/Sadl" as sadl

generate mapping "http://www.ge.com/research/sadl/Mapping"

Model:
	uri=NewModelNS
	imports+=Import* 
	triples+=(Triple | Group)*
;

NewModelNS:
	'uri' baseUri=STRING ('alias' prefix=ID)? EOS
;	

Import :
    'import' importURI=STRING ('as' alias=ID)?  EOS
;
    
Group:
	'{' groupLines+=(Triple | Group)+ '}' 
;

Triple :
	(subjRef=Ref|subjRsrc=[sadl::ResourceName]) ('has')? pred=[sadl::ResourceName] (=>objvalRef=Ref|=>objvalRsrc=[sadl::ResourceName]|objvalLit=LiteralValue) EOS
;

LiteralValue :
        literalNumber=NUMBER
    |   literalString=STRING
    |   literalBoolean=('true'|'false')
;

// NUMBER matches both integral and floating point numbers.
NUMBER hidden() :
       '-'? UNSIGNED_NUMBER
;

Ref:
	ref=ColumnName ('_'? addlcols+=ColumnName)* (row?='row()')?
;
// Ref example: <A>_<B><Temp>row()

ColumnName:
	'<' ColumnID '>'
;

ColumnID:
	ID|DIGITS
;

terminal DIGITS:
	('0'..'9')+
;

terminal UNSIGNED_NUMBER:
     DIGITS
   | DIGITS '.' ('0'..'9')* (('e'|'E') ('+'|'-')? DIGITS)?
   |             '.' DIGITS (('e'|'E') ('+'|'-')? DIGITS)?
   | DIGITS                  ('e'|'E') ('+'|'-')? DIGITS
;

// EOS matches one whitespace character or EOF after the period in order to
// disambiguate the end of sentence period from periods in names.
terminal EOS :
//    '.' (WS|EOF);
    '.' (' '|'\t'|'\r'|'\n'|EOF);
    
terminal WS	: ('\u00A0'|' '|'\t'|'\r'|'\n')+;

terminal ID :
    '^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9' | '-' | '%' | '~')*;

//terminal IDEXT :
//	('^')?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-'|'.'|'('|')'|'/'|':'|'%'|'#')*;    
	
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
		; 
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal ANY_OTHER: .;
	