/*
* generated by Xtext
*/
grammar InternalSadl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	 memoize=true;
	
}

@lexer::header {
package com.ge.research.sadl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.ge.research.sadl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ge.research.sadl.services.SadlGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private SadlGrammarAccess grammarAccess;
 	
    public InternalSadlParser(TokenStream input, SadlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SadlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getModelNameModelNameParserRuleCall_0_0()); 
	    }
		lv_modelName_0_0=ruleModelName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"modelName",
        		lv_modelName_0_0, 
        		"ModelName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); 
	    }
		lv_imports_1_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_1_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleModelElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"ModelElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleModelName
entryRuleModelName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelNameRule()); }
	 iv_ruleModelName=ruleModelName 
	 { $current=$iv_ruleModelName.current; } 
	 EOF 
;

// Rule ModelName
ruleModelName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='uri' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelNameAccess().getUriKeyword_0());
    }
(
(
		lv_baseUri_1_0=RULE_STRING
		{
			newLeafNode(lv_baseUri_1_0, grammarAccess.getModelNameAccess().getBaseUriSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"baseUri",
        		lv_baseUri_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='alias' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelNameAccess().getAliasKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelNameAccess().getAliasNAMEParserRuleCall_2_1_0()); 
	    }
		lv_alias_3_0=ruleNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelNameRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_3_0, 
        		"NAME");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='version' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelNameAccess().getVersionKeyword_3_0());
    }
(
(
		lv_version_5_0=RULE_STRING
		{
			newLeafNode(lv_version_5_0, grammarAccess.getModelNameAccess().getVersionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelNameAccess().getLeftParenthesisKeyword_4_0());
    }
(
(
(
		lv_annType_7_1=	'alias' 
    {
        newLeafNode(lv_annType_7_1, grammarAccess.getModelNameAccess().getAnnTypeAliasKeyword_4_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelNameRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_7_1, null);
	    }

    |		lv_annType_7_2=	'note' 
    {
        newLeafNode(lv_annType_7_2, grammarAccess.getModelNameAccess().getAnnTypeNoteKeyword_4_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelNameRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_7_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelNameAccess().getAnnContentContentListParserRuleCall_4_2_0()); 
	    }
		lv_annContent_8_0=ruleContentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelNameRule());
	        }
       		add(
       			$current, 
       			"annContent",
        		lv_annContent_8_0, 
        		"ContentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModelNameAccess().getRightParenthesisKeyword_4_3());
    }
)*this_EOS_10=RULE_EOS
    { 
    newLeafNode(this_EOS_10, grammarAccess.getModelNameAccess().getEOSTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportAccess().getAsKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getAliasNAMEParserRuleCall_2_1_0()); 
	    }
		lv_alias_3_0=ruleNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_3_0, 
        		"NAME");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_EOS_4=RULE_EOS
    { 
    newLeafNode(this_EOS_4, grammarAccess.getImportAccess().getEOSTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	 iv_ruleModelElement=ruleModelElement 
	 { $current=$iv_ruleModelElement.current; } 
	 EOF 
;

// Rule ModelElement
ruleModelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getStatementParserRuleCall_0()); 
    }
    this_Statement_0=ruleStatement
    { 
        $current = $this_Statement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getRuleParserRuleCall_1()); 
    }
    this_Rule_1=ruleRule
    { 
        $current = $this_Rule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getQueryParserRuleCall_2()); 
    }
    this_Query_2=ruleQuery
    { 
        $current = $this_Query_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getTestParserRuleCall_3()); 
    }
    this_Test_3=ruleTest
    { 
        $current = $this_Test_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getExprParserRuleCall_4()); 
    }
    this_Expr_4=ruleExpr
    { 
        $current = $this_Expr_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getDisplayParserRuleCall_5()); 
    }
    this_Display_5=ruleDisplay
    { 
        $current = $this_Display_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getExplanationParserRuleCall_6()); 
    }
    this_Explanation_6=ruleExplanation
    { 
        $current = $this_Explanation_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getClassDeclarationParserRuleCall_0()); 
    }
    this_ClassDeclaration_0=ruleClassDeclaration
    { 
        $current = $this_ClassDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getComplementOfClassParserRuleCall_1()); 
    }
    this_ComplementOfClass_1=ruleComplementOfClass
    { 
        $current = $this_ComplementOfClass_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getDisjointClassesParserRuleCall_2()); 
    }
    this_DisjointClasses_2=ruleDisjointClasses
    { 
        $current = $this_DisjointClasses_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getEquivalentConceptsParserRuleCall_3()); 
    }
    this_EquivalentConcepts_3=ruleEquivalentConcepts
    { 
        $current = $this_EquivalentConcepts_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getAllValuesFromParserRuleCall_4()); 
    }
    this_AllValuesFrom_4=ruleAllValuesFrom
    { 
        $current = $this_AllValuesFrom_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getCardinalityParserRuleCall_5()); 
    }
    this_Cardinality_5=ruleCardinality
    { 
        $current = $this_Cardinality_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getHasValueParserRuleCall_6()); 
    }
    this_HasValue_6=ruleHasValue
    { 
        $current = $this_HasValue_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getMaxCardinalityParserRuleCall_7()); 
    }
    this_MaxCardinality_7=ruleMaxCardinality
    { 
        $current = $this_MaxCardinality_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getMinCardinalityParserRuleCall_8()); 
    }
    this_MinCardinality_8=ruleMinCardinality
    { 
        $current = $this_MinCardinality_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getSomeValuesFromParserRuleCall_9()); 
    }
    this_SomeValuesFrom_9=ruleSomeValuesFrom
    { 
        $current = $this_SomeValuesFrom_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getEnumeratedAllAndSomeValuesFromParserRuleCall_10()); 
    }
    this_EnumeratedAllAndSomeValuesFrom_10=ruleEnumeratedAllAndSomeValuesFrom
    { 
        $current = $this_EnumeratedAllAndSomeValuesFrom_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getEnumeratedAllValuesFromParserRuleCall_11()); 
    }
    this_EnumeratedAllValuesFrom_11=ruleEnumeratedAllValuesFrom
    { 
        $current = $this_EnumeratedAllValuesFrom_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getDefaultValueParserRuleCall_12()); 
    }
    this_DefaultValue_12=ruleDefaultValue
    { 
        $current = $this_DefaultValue_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getNecessaryAndSufficientParserRuleCall_13()); 
    }
    this_NecessaryAndSufficient_13=ruleNecessaryAndSufficient
    { 
        $current = $this_NecessaryAndSufficient_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getPropertyDeclarationParserRuleCall_14()); 
    }
    this_PropertyDeclaration_14=rulePropertyDeclaration
    { 
        $current = $this_PropertyDeclaration_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getFunctionalPropertyParserRuleCall_15()); 
    }
    this_FunctionalProperty_15=ruleFunctionalProperty
    { 
        $current = $this_FunctionalProperty_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getInverseFunctionalPropertyParserRuleCall_16()); 
    }
    this_InverseFunctionalProperty_16=ruleInverseFunctionalProperty
    { 
        $current = $this_InverseFunctionalProperty_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getInversePropertyParserRuleCall_17()); 
    }
    this_InverseProperty_17=ruleInverseProperty
    { 
        $current = $this_InverseProperty_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getSymmetricalPropertyParserRuleCall_18()); 
    }
    this_SymmetricalProperty_18=ruleSymmetricalProperty
    { 
        $current = $this_SymmetricalProperty_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getTransitivePropertyParserRuleCall_19()); 
    }
    this_TransitiveProperty_19=ruleTransitiveProperty
    { 
        $current = $this_TransitiveProperty_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getInstanceDeclarationStatementParserRuleCall_20()); 
    }
    this_InstanceDeclarationStatement_20=ruleInstanceDeclarationStatement
    { 
        $current = $this_InstanceDeclarationStatement_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getExistingInstanceAttributionParserRuleCall_21()); 
    }
    this_ExistingInstanceAttribution_21=ruleExistingInstanceAttribution
    { 
        $current = $this_ExistingInstanceAttribution_21.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getInstanceDifferentFromParserRuleCall_22()); 
    }
    this_InstanceDifferentFrom_22=ruleInstanceDifferentFrom
    { 
        $current = $this_InstanceDifferentFrom_22.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getInstancesAllDifferentParserRuleCall_23()); 
    }
    this_InstancesAllDifferent_23=ruleInstancesAllDifferent
    { 
        $current = $this_InstancesAllDifferent_23.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getUserDefinedDataTypeParserRuleCall_24()); 
    }
    this_UserDefinedDataType_24=ruleUserDefinedDataType
    { 
        $current = $this_UserDefinedDataType_24.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleResourceName
entryRuleResourceName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceNameRule()); }
	 iv_ruleResourceName=ruleResourceName 
	 { $current=$iv_ruleResourceName.current; } 
	 EOF 
;

// Rule ResourceName
ruleResourceName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getResourceNameAccess().getNameNAMEParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"NAME");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceNameAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
(
		lv_annType_2_1=	'alias' 
    {
        newLeafNode(lv_annType_2_1, grammarAccess.getResourceNameAccess().getAnnTypeAliasKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceNameRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_2_1, null);
	    }

    |		lv_annType_2_2=	'note' 
    {
        newLeafNode(lv_annType_2_2, grammarAccess.getResourceNameAccess().getAnnTypeNoteKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceNameRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceNameAccess().getAnnContentContentListParserRuleCall_1_2_0()); 
	    }
		lv_annContent_3_0=ruleContentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceNameRule());
	        }
       		add(
       			$current, 
       			"annContent",
        		lv_annContent_3_0, 
        		"ContentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceNameAccess().getRightParenthesisKeyword_1_3());
    }
)*)
;





// Entry rule entryRuleContentList
entryRuleContentList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentListRule()); }
	 iv_ruleContentList=ruleContentList 
	 { $current=$iv_ruleContentList.current; } 
	 EOF 
;

// Rule ContentList
ruleContentList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_annContent_0_0=RULE_STRING
		{
			newLeafNode(lv_annContent_0_0, grammarAccess.getContentListAccess().getAnnContentSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"annContent",
        		lv_annContent_0_0, 
        		"STRING");
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContentListAccess().getCommaKeyword_1_0());
    }
(
(
		lv_annContent_2_0=RULE_STRING
		{
			newLeafNode(lv_annContent_2_0, grammarAccess.getContentListAccess().getAnnContentSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"annContent",
        		lv_annContent_2_0, 
        		"STRING");
	    }

)
))*)
;





// Entry rule entryRuleResourceList
entryRuleResourceList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceListRule()); }
	 iv_ruleResourceList=ruleResourceList 
	 { $current=$iv_ruleResourceList.current; } 
	 EOF 
;

// Rule ResourceList
ruleResourceList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceListAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceListAccess().getNamesResourceNameParserRuleCall_1_0()); 
	    }
		lv_names_1_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_1_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceListAccess().getNamesResourceNameParserRuleCall_2_1_0()); 
	    }
		lv_names_3_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceListAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleLiteralList
entryRuleLiteralList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralListRule()); }
	 iv_ruleLiteralList=ruleLiteralList 
	 { $current=$iv_ruleLiteralList.current; } 
	 EOF 
;

// Rule LiteralList
ruleLiteralList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLiteralListAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralListAccess().getLiteralsLiteralValueParserRuleCall_1_0()); 
	    }
		lv_literals_1_0=ruleLiteralValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralListRule());
	        }
       		add(
       			$current, 
       			"literals",
        		lv_literals_1_0, 
        		"LiteralValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLiteralListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralListAccess().getLiteralsLiteralValueParserRuleCall_2_1_0()); 
	    }
		lv_literals_3_0=ruleLiteralValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralListRule());
	        }
       		add(
       			$current, 
       			"literals",
        		lv_literals_3_0, 
        		"LiteralValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLiteralListAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleResourceByName
entryRuleResourceByName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceByNameRule()); }
	 iv_ruleResourceByName=ruleResourceByName 
	 { $current=$iv_ruleResourceByName.current; } 
	 EOF 
;

// Rule ResourceByName
ruleResourceByName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceByNameRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResourceByNameAccess().getNameResourceNameCrossReference_0()); 
	    }
		ruleNAME		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleExistingResourceList
entryRuleExistingResourceList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistingResourceListRule()); }
	 iv_ruleExistingResourceList=ruleExistingResourceList 
	 { $current=$iv_ruleExistingResourceList.current; } 
	 EOF 
;

// Rule ExistingResourceList
ruleExistingResourceList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExistingResourceListAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistingResourceListAccess().getNamesResourceByNameParserRuleCall_1_0_0()); 
	    }
		lv_names_1_1=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingResourceListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_1_1, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getExistingResourceListAccess().getNamesResourceBySetOpParserRuleCall_1_0_1()); 
	    }
		lv_names_1_2=ruleResourceBySetOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingResourceListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_1_2, 
        		"ResourceBySetOp");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExistingResourceListAccess().getCommaKeyword_2_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistingResourceListAccess().getNamesResourceByNameParserRuleCall_2_1_0_0()); 
	    }
		lv_names_3_1=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingResourceListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_3_1, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getExistingResourceListAccess().getNamesResourceBySetOpParserRuleCall_2_1_0_1()); 
	    }
		lv_names_3_2=ruleResourceBySetOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingResourceListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_3_2, 
        		"ResourceBySetOp");
	        afterParserOrEnumRuleCall();
	    }

)

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExistingResourceListAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleResourceIdentifier
entryRuleResourceIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceIdentifierRule()); }
	 iv_ruleResourceIdentifier=ruleResourceIdentifier 
	 { $current=$iv_ruleResourceIdentifier.current; } 
	 EOF 
;

// Rule ResourceIdentifier
ruleResourceIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceIdentifierAccess().getResourceByNameParserRuleCall_0()); 
    }
    this_ResourceByName_0=ruleResourceByName
    { 
        $current = $this_ResourceByName_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceIdentifierAccess().getResourceBySetOpParserRuleCall_1_0()); 
    }
    this_ResourceBySetOp_1=ruleResourceBySetOp
    { 
        $current = $this_ResourceBySetOp_1.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceIdentifierAccess().getLeftParenthesisKeyword_1_1_0());
    }
(
(
(
		lv_annType_3_1=	'alias' 
    {
        newLeafNode(lv_annType_3_1, grammarAccess.getResourceIdentifierAccess().getAnnTypeAliasKeyword_1_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceIdentifierRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_3_1, null);
	    }

    |		lv_annType_3_2=	'note' 
    {
        newLeafNode(lv_annType_3_2, grammarAccess.getResourceIdentifierAccess().getAnnTypeNoteKeyword_1_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceIdentifierRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_3_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceIdentifierAccess().getAnnContentContentListParserRuleCall_1_1_2_0()); 
	    }
		lv_annContent_4_0=ruleContentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceIdentifierRule());
	        }
       		add(
       			$current, 
       			"annContent",
        		lv_annContent_4_0, 
        		"ContentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getResourceIdentifierAccess().getRightParenthesisKeyword_1_1_3());
    }
)*)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceIdentifierAccess().getResourceByRestrictionParserRuleCall_2_0()); 
    }
    this_ResourceByRestriction_6=ruleResourceByRestriction
    { 
        $current = $this_ResourceByRestriction_6.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getResourceIdentifierAccess().getLeftParenthesisKeyword_2_1_0());
    }
(
(
(
		lv_annType_8_1=	'alias' 
    {
        newLeafNode(lv_annType_8_1, grammarAccess.getResourceIdentifierAccess().getAnnTypeAliasKeyword_2_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceIdentifierRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_8_1, null);
	    }

    |		lv_annType_8_2=	'note' 
    {
        newLeafNode(lv_annType_8_2, grammarAccess.getResourceIdentifierAccess().getAnnTypeNoteKeyword_2_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceIdentifierRule());
	        }
       		addWithLastConsumed($current, "annType", lv_annType_8_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceIdentifierAccess().getAnnContentContentListParserRuleCall_2_1_2_0()); 
	    }
		lv_annContent_9_0=ruleContentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceIdentifierRule());
	        }
       		add(
       			$current, 
       			"annContent",
        		lv_annContent_9_0, 
        		"ContentList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getResourceIdentifierAccess().getRightParenthesisKeyword_2_1_3());
    }
)*))
;





// Entry rule entryRuleResourceBySetOp
entryRuleResourceBySetOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceBySetOpRule()); }
	 iv_ruleResourceBySetOp=ruleResourceBySetOp 
	 { $current=$iv_ruleResourceBySetOp.current; } 
	 EOF 
;

// Rule ResourceBySetOp
ruleResourceBySetOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceBySetOpAccess().getUnionResourceParserRuleCall_0()); 
    }
    this_UnionResource_0=ruleUnionResource
    { 
        $current = $this_UnionResource_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceBySetOpAccess().getIntersectionResourceParserRuleCall_1()); 
    }
    this_IntersectionResource_1=ruleIntersectionResource
    { 
        $current = $this_IntersectionResource_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleResourceByRestriction
entryRuleResourceByRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceByRestrictionRule()); }
	 iv_ruleResourceByRestriction=ruleResourceByRestriction 
	 { $current=$iv_ruleResourceByRestriction.current; } 
	 EOF 
;

// Rule ResourceByRestriction
ruleResourceByRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceByRestrictionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceByRestrictionAccess().getPropNameResourceByNameParserRuleCall_1_0()); 
	    }
		lv_propName_1_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceByRestrictionRule());
	        }
       		set(
       			$current, 
       			"propName",
        		lv_propName_1_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceByRestrictionAccess().getCondConditionParserRuleCall_2_0()); 
	    }
		lv_cond_2_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceByRestrictionRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_2_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getResourceByRestrictionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleUnionResource
entryRuleUnionResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionResourceRule()); }
	 iv_ruleUnionResource=ruleUnionResource 
	 { $current=$iv_ruleUnionResource.current; } 
	 EOF 
;

// Rule UnionResource
ruleUnionResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnionResourceAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionResourceAccess().getNamesResourceIdentifierParserRuleCall_1_0()); 
	    }
		lv_names_1_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionResourceRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_1_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
(
		lv_op_2_1=	',' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getUnionResourceAccess().getOpCommaKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnionResourceRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'or' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getUnionResourceAccess().getOpOrKeyword_2_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnionResourceRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionResourceAccess().getNamesResourceIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_names_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionResourceRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnionResourceAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIntersectionResource
entryRuleIntersectionResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntersectionResourceRule()); }
	 iv_ruleIntersectionResource=ruleIntersectionResource 
	 { $current=$iv_ruleIntersectionResource.current; } 
	 EOF 
;

// Rule IntersectionResource
ruleIntersectionResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntersectionResourceAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntersectionResourceAccess().getNamesResourceIdentifierParserRuleCall_1_0()); 
	    }
		lv_names_1_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntersectionResourceRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_1_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_op_2_0=	'and' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getIntersectionResourceAccess().getOpAndKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntersectionResourceRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_0, "and");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntersectionResourceAccess().getNamesResourceIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_names_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntersectionResourceRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntersectionResourceAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	 iv_ruleClassDeclaration=ruleClassDeclaration 
	 { $current=$iv_ruleClassDeclaration.current; } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassNameResourceNameParserRuleCall_0_0_0()); 
	    }
		lv_className_0_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_0_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassDeclarationAccess().getIsKeyword_0_1());
    }
	otherlv_2='a' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassDeclarationAccess().getAKeyword_0_2());
    }
(	otherlv_3='top-level' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassDeclarationAccess().getTopLevelKeyword_0_3());
    }
)?	otherlv_4='class' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassDeclarationAccess().getClassKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getMustBeOneOfEnumeratedInstancesParserRuleCall_0_5_0()); 
	    }
		lv_mustBeOneOf_5_0=ruleEnumeratedInstances		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"mustBeOneOf",
        		lv_mustBeOneOf_5_0, 
        		"EnumeratedInstances");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_0_6_0()); 
	    }
		lv_describedBy_6_0=ruleAddlClassInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"describedBy",
        		lv_describedBy_6_0, 
        		"AddlClassInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_EOS_7=RULE_EOS
    { 
    newLeafNode(this_EOS_7, grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_0_7()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassListResourceListParserRuleCall_1_0_0()); 
	    }
		lv_classList_8_0=ruleResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"classList",
        		lv_classList_8_0, 
        		"ResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='are' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getClassDeclarationAccess().getAreKeyword_1_1());
    }
(	otherlv_10='top-level' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getClassDeclarationAccess().getTopLevelKeyword_1_2());
    }
)?	otherlv_11='classes' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getClassesKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_1_4_0()); 
	    }
		lv_describedBy_12_0=ruleAddlClassInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"describedBy",
        		lv_describedBy_12_0, 
        		"AddlClassInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_EOS_13=RULE_EOS
    { 
    newLeafNode(this_EOS_13, grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_1_5()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassNameResourceNameParserRuleCall_2_0_0()); 
	    }
		lv_className_14_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_14_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='is' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getClassDeclarationAccess().getIsKeyword_2_1());
    }
	otherlv_16='a' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getClassDeclarationAccess().getAKeyword_2_2());
    }
	otherlv_17='type' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getClassDeclarationAccess().getTypeKeyword_2_3());
    }
	otherlv_18='of' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getClassDeclarationAccess().getOfKeyword_2_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassIdentifierResourceIdentifierParserRuleCall_2_5_0()); 
	    }
		lv_classIdentifier_19_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"classIdentifier",
        		lv_classIdentifier_19_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getMustBeOneOfEnumeratedInstancesParserRuleCall_2_6_0()); 
	    }
		lv_mustBeOneOf_20_0=ruleEnumeratedInstances		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"mustBeOneOf",
        		lv_mustBeOneOf_20_0, 
        		"EnumeratedInstances");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_2_7_0()); 
	    }
		lv_describedBy_21_0=ruleAddlClassInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"describedBy",
        		lv_describedBy_21_0, 
        		"AddlClassInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_EOS_22=RULE_EOS
    { 
    newLeafNode(this_EOS_22, grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_2_8()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassListResourceListParserRuleCall_3_0_0()); 
	    }
		lv_classList_23_0=ruleResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"classList",
        		lv_classList_23_0, 
        		"ResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24='are' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getClassDeclarationAccess().getAreKeyword_3_1());
    }
	otherlv_25='types' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getClassDeclarationAccess().getTypesKeyword_3_2());
    }
	otherlv_26='of' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getClassDeclarationAccess().getOfKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassIdentifierResourceIdentifierParserRuleCall_3_4_0()); 
	    }
		lv_classIdentifier_27_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"classIdentifier",
        		lv_classIdentifier_27_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_3_5_0()); 
	    }
		lv_describedBy_28_0=ruleAddlClassInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"describedBy",
        		lv_describedBy_28_0, 
        		"AddlClassInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_EOS_29=RULE_EOS
    { 
    newLeafNode(this_EOS_29, grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_3_6()); 
    }
))
;





// Entry rule entryRuleEnumeratedInstances
entryRuleEnumeratedInstances returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeratedInstancesRule()); }
	 iv_ruleEnumeratedInstances=ruleEnumeratedInstances 
	 { $current=$iv_ruleEnumeratedInstances.current; } 
	 EOF 
;

// Rule EnumeratedInstances
ruleEnumeratedInstances returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumeratedInstancesAccess().getCommaKeyword_0());
    }
)?	otherlv_1='must' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumeratedInstancesAccess().getMustKeyword_1());
    }
	otherlv_2='be' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumeratedInstancesAccess().getBeKeyword_2());
    }
	otherlv_3='one' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumeratedInstancesAccess().getOneKeyword_3());
    }
	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumeratedInstancesAccess().getOfKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedInstancesAccess().getInstanceListResourceListParserRuleCall_5_0()); 
	    }
		lv_instanceList_5_0=ruleResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedInstancesRule());
	        }
       		set(
       			$current, 
       			"instanceList",
        		lv_instanceList_5_0, 
        		"ResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAddlClassInfo
entryRuleAddlClassInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddlClassInfoRule()); }
	 iv_ruleAddlClassInfo=ruleAddlClassInfo 
	 { $current=$iv_ruleAddlClassInfo.current; } 
	 EOF 
;

// Rule AddlClassInfo
ruleAddlClassInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddlClassInfoAccess().getCommaKeyword_0_0());
    }
)?	otherlv_1='described' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddlClassInfoAccess().getDescribedKeyword_0_1());
    }
	otherlv_2='by' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddlClassInfoAccess().getByKeyword_0_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAddlClassInfoAccess().getPropertyByNameResourceByNameParserRuleCall_0_3_0_0()); 
	    }
		lv_propertyByName_3_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddlClassInfoRule());
	        }
       		set(
       			$current, 
       			"propertyByName",
        		lv_propertyByName_3_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAddlClassInfoAccess().getPropertyNameResourceNameParserRuleCall_0_3_1_0_0()); 
	    }
		lv_propertyName_4_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddlClassInfoRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAddlClassInfoAccess().getRangeRangeParserRuleCall_0_3_1_1_0()); 
	    }
		lv_range_5_0=ruleRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddlClassInfoRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_5_0, 
        		"Range");
	        afterParserOrEnumRuleCall();
	    }

)
))))
    |((	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAddlClassInfoAccess().getCommaKeyword_1_0());
    }
)?	otherlv_7='described' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAddlClassInfoAccess().getDescribedKeyword_1_1());
    }
	otherlv_8='by' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAddlClassInfoAccess().getByKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAddlClassInfoAccess().getPropertyByNameResourceByNameParserRuleCall_1_3_0()); 
	    }
		lv_propertyByName_9_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddlClassInfoRule());
	        }
       		set(
       			$current, 
       			"propertyByName",
        		lv_propertyByName_9_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAddlClassInfoAccess().getRestrictionConditionParserRuleCall_1_4_0()); 
	    }
		lv_restriction_10_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddlClassInfoRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_10_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	 iv_ruleRange=ruleRange 
	 { $current=$iv_ruleRange.current; } 
	 EOF 
;

// Rule Range
ruleRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='has' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeAccess().getHasKeyword_0_0());
    }

    |	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRangeAccess().getWithKeyword_0_1());
    }
)((	otherlv_2='a' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeAccess().getAKeyword_1_0_0());
    }
(
(
		lv_single_3_0=	'single' 
    {
        newLeafNode(lv_single_3_0, grammarAccess.getRangeAccess().getSingleSingleKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "single", lv_single_3_0, "single");
	    }

)
)	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRangeAccess().getValueKeyword_1_0_2());
    }
)
    |(((	otherlv_5='a' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRangeAccess().getAKeyword_1_1_0_0_0());
    }
(
(
		lv_list_6_0=	'List' 
    {
        newLeafNode(lv_list_6_0, grammarAccess.getRangeAccess().getListListKeyword_1_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "list", lv_list_6_0, "List");
	    }

)
))
    |(
(
		lv_lists_7_0=	'Lists' 
    {
        newLeafNode(lv_lists_7_0, grammarAccess.getRangeAccess().getListsListsKeyword_1_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed($current, "lists", lv_lists_7_0, "Lists");
	    }

)
))	otherlv_8='of' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRangeAccess().getOfKeyword_1_1_1());
    }
	otherlv_9='values' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRangeAccess().getValuesKeyword_1_1_2());
    }
)
    |	otherlv_10='values' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRangeAccess().getValuesKeyword_1_2());
    }
)	otherlv_11='of' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRangeAccess().getOfKeyword_2());
    }
	otherlv_12='type' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRangeAccess().getTypeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeAccess().getTypeRangeTypeParserRuleCall_4_0()); 
	    }
		lv_type_13_0=ruleRangeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_13_0, 
        		"RangeType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRangeType
entryRuleRangeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeTypeRule()); }
	 iv_ruleRangeType=ruleRangeType 
	 { $current=$iv_ruleRangeType.current; } 
	 EOF 
;

// Rule RangeType
ruleRangeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRangeTypeAccess().getClassIdentifierResourceIdentifierParserRuleCall_0_0()); 
	    }
		lv_classIdentifier_0_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeTypeRule());
	        }
       		set(
       			$current, 
       			"classIdentifier",
        		lv_classIdentifier_0_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeTypeAccess().getDataTypeDataTypeEnumRuleCall_1_0()); 
	    }
		lv_dataType_1_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeTypeRule());
	        }
       		set(
       			$current, 
       			"dataType",
        		lv_dataType_1_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUserDefinedDataType
entryRuleUserDefinedDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserDefinedDataTypeRule()); }
	 iv_ruleUserDefinedDataType=ruleUserDefinedDataType 
	 { $current=$iv_ruleUserDefinedDataType.current; } 
	 EOF 
;

// Rule UserDefinedDataType
ruleUserDefinedDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='data' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserDefinedDataTypeAccess().getDataKeyword_0());
    }
	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUserDefinedDataTypeAccess().getTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserDefinedDataTypeAccess().getUserDefinedDataTypeResourceNameParserRuleCall_2_0()); 
	    }
		lv_userDefinedDataType_2_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserDefinedDataTypeRule());
	        }
       		set(
       			$current, 
       			"userDefinedDataType",
        		lv_userDefinedDataType_2_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='is' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUserDefinedDataTypeAccess().getIsKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserDefinedDataTypeAccess().getRestrictionDataTypeRestrictionParserRuleCall_4_0()); 
	    }
		lv_restriction_4_0=ruleDataTypeRestriction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserDefinedDataTypeRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_4_0, 
        		"DataTypeRestriction");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_5=RULE_EOS
    { 
    newLeafNode(this_EOS_5, grammarAccess.getUserDefinedDataTypeAccess().getEOSTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleDataTypeRestriction
entryRuleDataTypeRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRestrictionRule()); }
	 iv_ruleDataTypeRestriction=ruleDataTypeRestriction 
	 { $current=$iv_ruleDataTypeRestriction.current; } 
	 EOF 
;

// Rule DataTypeRestriction
ruleDataTypeRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='a' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataTypeRestrictionAccess().getAKeyword_0_0_0());
    }

    |	otherlv_1='an' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeRestrictionAccess().getAnKeyword_0_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeRestrictionAccess().getBasetypeDataTypeEnumRuleCall_0_1_0()); 
	    }
		lv_basetype_2_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRestrictionRule());
	        }
       		set(
       			$current, 
       			"basetype",
        		lv_basetype_2_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeRestrictionAccess().getFacetsFacetsParserRuleCall_0_2_0()); 
	    }
		lv_facets_3_0=ruleFacets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRestrictionRule());
	        }
       		set(
       			$current, 
       			"facets",
        		lv_facets_3_0, 
        		"Facets");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataTypeRestrictionAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeRestrictionAccess().getBasetypesDataTypeEnumRuleCall_1_1_0()); 
	    }
		lv_basetypes_5_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRestrictionRule());
	        }
       		add(
       			$current, 
       			"basetypes",
        		lv_basetypes_5_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataTypeRestrictionAccess().getCommaKeyword_1_2_0_0());
    }

    |	otherlv_7='or' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataTypeRestrictionAccess().getOrKeyword_1_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeRestrictionAccess().getBasetypesDataTypeEnumRuleCall_1_2_1_0()); 
	    }
		lv_basetypes_8_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRestrictionRule());
	        }
       		add(
       			$current, 
       			"basetypes",
        		lv_basetypes_8_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataTypeRestrictionAccess().getRightCurlyBracketKeyword_1_3());
    }
))
;





// Entry rule entryRuleFacets
entryRuleFacets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetsRule()); }
	 iv_ruleFacets=ruleFacets 
	 { $current=$iv_ruleFacets.current; } 
	 EOF 
;

// Rule Facets
ruleFacets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_minexin_0_1=	'(' 
    {
        newLeafNode(lv_minexin_0_1, grammarAccess.getFacetsAccess().getMinexinLeftParenthesisKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		setWithLastConsumed($current, "minexin", lv_minexin_0_1, null);
	    }

    |		lv_minexin_0_2=	'[' 
    {
        newLeafNode(lv_minexin_0_2, grammarAccess.getFacetsAccess().getMinexinLeftSquareBracketKeyword_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		setWithLastConsumed($current, "minexin", lv_minexin_0_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getMinNUMBERParserRuleCall_0_1_0()); 
	    }
		lv_min_1_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_1_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFacetsAccess().getCommaKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getMaxNUMBERParserRuleCall_0_3_0()); 
	    }
		lv_max_3_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_3_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
(
		lv_maxexin_4_1=	']' 
    {
        newLeafNode(lv_maxexin_4_1, grammarAccess.getFacetsAccess().getMaxexinRightSquareBracketKeyword_0_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		setWithLastConsumed($current, "maxexin", lv_maxexin_4_1, null);
	    }

    |		lv_maxexin_4_2=	')' 
    {
        newLeafNode(lv_maxexin_4_2, grammarAccess.getFacetsAccess().getMaxexinRightParenthesisKeyword_0_4_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		setWithLastConsumed($current, "maxexin", lv_maxexin_4_2, null);
	    }

)

)
))
    |(
(
		lv_regex_5_0=RULE_STRING
		{
			newLeafNode(lv_regex_5_0, grammarAccess.getFacetsAccess().getRegexSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regex",
        		lv_regex_5_0, 
        		"STRING");
	    }

)
)
    |(	otherlv_6='length' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFacetsAccess().getLengthKeyword_2_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getLenNUMBERParserRuleCall_2_1_0_0()); 
	    }
		lv_len_7_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		set(
       			$current, 
       			"len",
        		lv_len_7_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getMinlenNUMBERParserRuleCall_2_1_1_0_0()); 
	    }
		lv_minlen_8_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		set(
       			$current, 
       			"minlen",
        		lv_minlen_8_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='-' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFacetsAccess().getHyphenMinusKeyword_2_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getMaxlenNUMBERParserRuleCall_2_1_1_2_0()); 
	    }
		lv_maxlen_10_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		set(
       			$current, 
       			"maxlen",
        		lv_maxlen_10_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))))
    |(	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFacetsAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
(
		lv_values_12_1=RULE_STRING
		{
			newLeafNode(lv_values_12_1, grammarAccess.getFacetsAccess().getValuesSTRINGTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_12_1, 
        		"STRING");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getValuesNUMBERParserRuleCall_3_1_0_1()); 
	    }
		lv_values_12_2=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_12_2, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)

)
)((	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFacetsAccess().getCommaKeyword_3_2_0());
    }
)?(
(
(
		lv_values_14_1=RULE_STRING
		{
			newLeafNode(lv_values_14_1, grammarAccess.getFacetsAccess().getValuesSTRINGTerminalRuleCall_3_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_14_1, 
        		"STRING");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFacetsAccess().getValuesNUMBERParserRuleCall_3_2_1_0_1()); 
	    }
		lv_values_14_2=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_14_2, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFacetsAccess().getRightCurlyBracketKeyword_3_3());
    }
))
;





// Entry rule entryRuleAnArticle
entryRuleAnArticle returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnArticleRule()); } 
	 iv_ruleAnArticle=ruleAnArticle 
	 { $current=$iv_ruleAnArticle.current.getText(); }  
	 EOF 
;

// Rule AnArticle
ruleAnArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0()); 
    }
    this_IndefiniteArticle_0=ruleIndefiniteArticle    {
		$current.merge(this_IndefiniteArticle_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1()); 
    }
    this_DefiniteArticle_1=ruleDefiniteArticle    {
		$current.merge(this_DefiniteArticle_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleIndefiniteArticle
entryRuleIndefiniteArticle returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndefiniteArticleRule()); } 
	 iv_ruleIndefiniteArticle=ruleIndefiniteArticle 
	 { $current=$iv_ruleIndefiniteArticle.current.getText(); }  
	 EOF 
;

// Rule IndefiniteArticle
ruleIndefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='A' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_0()); 
    }

    |
	kw='a' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_1()); 
    }

    |
	kw='An' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2()); 
    }

    |
	kw='an' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleDefiniteArticle
entryRuleDefiniteArticle returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefiniteArticleRule()); } 
	 iv_ruleDefiniteArticle=ruleDefiniteArticle 
	 { $current=$iv_ruleDefiniteArticle.current.getText(); }  
	 EOF 
;

// Rule DefiniteArticle
ruleDefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='The' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_0()); 
    }

    |
	kw='the' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleEquivalentConcepts
entryRuleEquivalentConcepts returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEquivalentConceptsRule()); }
	 iv_ruleEquivalentConcepts=ruleEquivalentConcepts 
	 { $current=$iv_ruleEquivalentConcepts.current; } 
	 EOF 
;

// Rule EquivalentConcepts
ruleEquivalentConcepts returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEquivalentConceptsAccess().getClass1ResourceByNameParserRuleCall_0_0()); 
	    }
		lv_class1_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEquivalentConceptsRule());
	        }
       		set(
       			$current, 
       			"class1",
        		lv_class1_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEquivalentConceptsAccess().getIsKeyword_1());
    }
	otherlv_2='the' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEquivalentConceptsAccess().getTheKeyword_2());
    }
	otherlv_3='same' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEquivalentConceptsAccess().getSameKeyword_3());
    }
	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEquivalentConceptsAccess().getAsKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEquivalentConceptsAccess().getClass2ResourceIdentifierParserRuleCall_5_0()); 
	    }
		lv_class2_5_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEquivalentConceptsRule());
	        }
       		set(
       			$current, 
       			"class2",
        		lv_class2_5_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getEquivalentConceptsAccess().getEOSTerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRuleDisjointClasses
entryRuleDisjointClasses returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisjointClassesRule()); }
	 iv_ruleDisjointClasses=ruleDisjointClasses 
	 { $current=$iv_ruleDisjointClasses.current; } 
	 EOF 
;

// Rule DisjointClasses
ruleDisjointClasses returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getDisjointClassesAccess().getClass1ResourceByNameParserRuleCall_0_0_0()); 
	    }
		lv_class1_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisjointClassesRule());
	        }
       		set(
       			$current, 
       			"class1",
        		lv_class1_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='and' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDisjointClassesAccess().getAndKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDisjointClassesAccess().getClass2ResourceIdentifierParserRuleCall_0_2_0()); 
	    }
		lv_class2_2_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisjointClassesRule());
	        }
       		set(
       			$current, 
       			"class2",
        		lv_class2_2_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='are' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDisjointClassesAccess().getAreKeyword_0_3());
    }
	otherlv_4='disjoint' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDisjointClassesAccess().getDisjointKeyword_0_4());
    }
this_EOS_5=RULE_EOS
    { 
    newLeafNode(this_EOS_5, grammarAccess.getDisjointClassesAccess().getEOSTerminalRuleCall_0_5()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getDisjointClassesAccess().getClassesExistingResourceListParserRuleCall_1_0_0()); 
	    }
		lv_classes_6_0=ruleExistingResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisjointClassesRule());
	        }
       		set(
       			$current, 
       			"classes",
        		lv_classes_6_0, 
        		"ExistingResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='are' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDisjointClassesAccess().getAreKeyword_1_1());
    }
	otherlv_8='disjoint' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDisjointClassesAccess().getDisjointKeyword_1_2());
    }
this_EOS_9=RULE_EOS
    { 
    newLeafNode(this_EOS_9, grammarAccess.getDisjointClassesAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRuleComplementOfClass
entryRuleComplementOfClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplementOfClassRule()); }
	 iv_ruleComplementOfClass=ruleComplementOfClass 
	 { $current=$iv_ruleComplementOfClass.current; } 
	 EOF 
;

// Rule ComplementOfClass
ruleComplementOfClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getComplementOfClassAccess().getClass1ResourceByNameParserRuleCall_0_0()); 
	    }
		lv_class1_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplementOfClassRule());
	        }
       		set(
       			$current, 
       			"class1",
        		lv_class1_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComplementOfClassAccess().getIsKeyword_1());
    }
	otherlv_2='the' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getComplementOfClassAccess().getTheKeyword_2());
    }
	otherlv_3='same' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComplementOfClassAccess().getSameKeyword_3());
    }
	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComplementOfClassAccess().getAsKeyword_4());
    }
	otherlv_5='not' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getComplementOfClassAccess().getNotKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComplementOfClassAccess().getClass2ResourceIdentifierParserRuleCall_6_0()); 
	    }
		lv_class2_6_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplementOfClassRule());
	        }
       		set(
       			$current, 
       			"class2",
        		lv_class2_6_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_7=RULE_EOS
    { 
    newLeafNode(this_EOS_7, grammarAccess.getComplementOfClassAccess().getEOSTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleAllValuesFrom
entryRuleAllValuesFrom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllValuesFromRule()); }
	 iv_ruleAllValuesFrom=ruleAllValuesFrom 
	 { $current=$iv_ruleAllValuesFrom.current; } 
	 EOF 
;

// Rule AllValuesFrom
ruleAllValuesFrom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getAllValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAllValuesFromAccess().getCondAllValuesConditionParserRuleCall_0_1_0()); 
	    }
		lv_cond_1_0=ruleAllValuesCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"AllValuesCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getAllValuesFromAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAllValuesFromAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_className_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAllValuesFromAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_propertyName_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAllValuesFromAccess().getCondAllValuesConditionParserRuleCall_1_2_0()); 
	    }
		lv_cond_5_0=ruleAllValuesCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"AllValuesCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getAllValuesFromAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRuleSomeValuesFrom
entryRuleSomeValuesFrom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSomeValuesFromRule()); }
	 iv_ruleSomeValuesFrom=ruleSomeValuesFrom 
	 { $current=$iv_ruleSomeValuesFrom.current; } 
	 EOF 
;

// Rule SomeValuesFrom
ruleSomeValuesFrom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesFromAccess().getCondSomeValuesConditionParserRuleCall_0_1_0()); 
	    }
		lv_cond_1_0=ruleSomeValuesCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"SomeValuesCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getSomeValuesFromAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesFromAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_className_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesFromAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_propertyName_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesFromAccess().getCondSomeValuesConditionParserRuleCall_1_2_0()); 
	    }
		lv_cond_5_0=ruleSomeValuesCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"SomeValuesCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getSomeValuesFromAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRuleHasValue
entryRuleHasValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasValueRule()); }
	 iv_ruleHasValue=ruleHasValue 
	 { $current=$iv_ruleHasValue.current; } 
	 EOF 
;

// Rule HasValue
ruleHasValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getHasValueAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasValueRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHasValueAccess().getCondHasValueConditionParserRuleCall_0_1_0()); 
	    }
		lv_cond_1_0=ruleHasValueCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasValueRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"HasValueCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getHasValueAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getHasValueAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_className_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasValueRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHasValueAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_propertyName_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasValueRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHasValueAccess().getCondHasValueConditionParserRuleCall_1_2_0()); 
	    }
		lv_cond_5_0=ruleHasValueCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasValueRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"HasValueCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getHasValueAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRuleCardinality
entryRuleCardinality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardinalityRule()); }
	 iv_ruleCardinality=ruleCardinality 
	 { $current=$iv_ruleCardinality.current; } 
	 EOF 
;

// Rule Cardinality
ruleCardinality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getCondCardConditionParserRuleCall_0_1_0()); 
	    }
		lv_cond_1_0=ruleCardCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"CardCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getCardinalityAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_className_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_propertyName_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getCondCardConditionParserRuleCall_1_2_0()); 
	    }
		lv_cond_5_0=ruleCardCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"CardCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getCardinalityAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRuleMinCardinality
entryRuleMinCardinality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinCardinalityRule()); }
	 iv_ruleMinCardinality=ruleMinCardinality 
	 { $current=$iv_ruleMinCardinality.current; } 
	 EOF 
;

// Rule MinCardinality
ruleMinCardinality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardinalityRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardinalityAccess().getCondMinCardConditionParserRuleCall_0_1_0()); 
	    }
		lv_cond_1_0=ruleMinCardCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardinalityRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"MinCardCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getMinCardinalityAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_className_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardinalityRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_propertyName_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardinalityRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardinalityAccess().getCondMinCardConditionParserRuleCall_1_2_0()); 
	    }
		lv_cond_5_0=ruleMinCardCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardinalityRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"MinCardCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getMinCardinalityAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRuleMaxCardinality
entryRuleMaxCardinality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxCardinalityRule()); }
	 iv_ruleMaxCardinality=ruleMaxCardinality 
	 { $current=$iv_ruleMaxCardinality.current; } 
	 EOF 
;

// Rule MaxCardinality
ruleMaxCardinality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardinalityRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardinalityAccess().getCondMaxCardConditionParserRuleCall_0_1_0()); 
	    }
		lv_cond_1_0=ruleMaxCardCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardinalityRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"MaxCardCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getMaxCardinalityAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_className_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardinalityRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_propertyName_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardinalityRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardinalityAccess().getCondMaxCardConditionParserRuleCall_1_2_0()); 
	    }
		lv_cond_5_0=ruleMaxCardCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardinalityRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"MaxCardCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getMaxCardinalityAccess().getEOSTerminalRuleCall_1_3()); 
    }
))
;





// Entry rule entryRulePropertyOfClass
entryRulePropertyOfClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyOfClassRule()); }
	 iv_rulePropertyOfClass=rulePropertyOfClass 
	 { $current=$iv_rulePropertyOfClass.current; } 
	 EOF 
;

// Rule PropertyOfClass
rulePropertyOfClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyOfClassAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); 
	    }
		lv_propertyName_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyOfClassRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyOfClassAccess().getOfKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyOfClassAccess().getClassNameResourceIdentifierParserRuleCall_2_0()); 
	    }
		lv_className_2_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyOfClassRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_2_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAllValuesCondition
entryRuleAllValuesCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllValuesConditionRule()); }
	 iv_ruleAllValuesCondition=ruleAllValuesCondition 
	 { $current=$iv_ruleAllValuesCondition.current; } 
	 EOF 
;

// Rule AllValuesCondition
ruleAllValuesCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='only' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAllValuesConditionAccess().getOnlyKeyword_0());
    }
	otherlv_1='has' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAllValuesConditionAccess().getHasKeyword_1());
    }
	otherlv_2='values' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAllValuesConditionAccess().getValuesKeyword_2());
    }
	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAllValuesConditionAccess().getOfKeyword_3());
    }
	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAllValuesConditionAccess().getTypeKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAllValuesConditionAccess().getRestrictionResourceIdentifierParserRuleCall_5_0()); 
	    }
		lv_restriction_5_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllValuesConditionRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_5_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumeratedAllValuesFrom
entryRuleEnumeratedAllValuesFrom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeratedAllValuesFromRule()); }
	 iv_ruleEnumeratedAllValuesFrom=ruleEnumeratedAllValuesFrom 
	 { $current=$iv_ruleEnumeratedAllValuesFrom.current; } 
	 EOF 
;

// Rule EnumeratedAllValuesFrom
ruleEnumeratedAllValuesFrom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedAllValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='can' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumeratedAllValuesFromAccess().getCanKeyword_1());
    }
	otherlv_2='only' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumeratedAllValuesFromAccess().getOnlyKeyword_2());
    }
	otherlv_3='be' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumeratedAllValuesFromAccess().getBeKeyword_3());
    }
	otherlv_4='one' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumeratedAllValuesFromAccess().getOneKeyword_4());
    }
	otherlv_5='of' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumeratedAllValuesFromAccess().getOfKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationExistingResourceListParserRuleCall_6_0_0()); 
	    }
		lv_enumeration_6_0=ruleExistingResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"enumeration",
        		lv_enumeration_6_0, 
        		"ExistingResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationLiteralListParserRuleCall_6_1_0()); 
	    }
		lv_enumeration_7_0=ruleLiteralList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedAllValuesFromRule());
	        }
       		set(
       			$current, 
       			"enumeration",
        		lv_enumeration_7_0, 
        		"LiteralList");
	        afterParserOrEnumRuleCall();
	    }

)
))this_EOS_8=RULE_EOS
    { 
    newLeafNode(this_EOS_8, grammarAccess.getEnumeratedAllValuesFromAccess().getEOSTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleEnumeratedAllAndSomeValuesFrom
entryRuleEnumeratedAllAndSomeValuesFrom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeratedAllAndSomeValuesFromRule()); }
	 iv_ruleEnumeratedAllAndSomeValuesFrom=ruleEnumeratedAllAndSomeValuesFrom 
	 { $current=$iv_ruleEnumeratedAllAndSomeValuesFrom.current; } 
	 EOF 
;

// Rule EnumeratedAllAndSomeValuesFrom
ruleEnumeratedAllAndSomeValuesFrom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0()); 
	    }
		lv_restricted_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedAllAndSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"restricted",
        		lv_restricted_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='must' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getMustKeyword_1());
    }
	otherlv_2='be' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getBeKeyword_2());
    }
	otherlv_3='one' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getOneKeyword_3());
    }
	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getOfKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationExistingResourceListParserRuleCall_5_0_0()); 
	    }
		lv_enumeration_5_0=ruleExistingResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedAllAndSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"enumeration",
        		lv_enumeration_5_0, 
        		"ExistingResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationLiteralListParserRuleCall_5_1_0()); 
	    }
		lv_enumeration_6_0=ruleLiteralList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratedAllAndSomeValuesFromRule());
	        }
       		set(
       			$current, 
       			"enumeration",
        		lv_enumeration_6_0, 
        		"LiteralList");
	        afterParserOrEnumRuleCall();
	    }

)
))this_EOS_7=RULE_EOS
    { 
    newLeafNode(this_EOS_7, grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEOSTerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRuleDefaultValue
entryRuleDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultValueRule()); }
	 iv_ruleDefaultValue=ruleDefaultValue 
	 { $current=$iv_ruleDefaultValue.current; } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefaultValueAccess().getDefValueClassPropertyOfClassParserRuleCall_0_0()); 
	    }
		lv_defValueClass_0_0=rulePropertyOfClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefaultValueRule());
	        }
       		set(
       			$current, 
       			"defValueClass",
        		lv_defValueClass_0_0, 
        		"PropertyOfClass");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='has' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefaultValueAccess().getHasKeyword_1());
    }
(	otherlv_2='level' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDefaultValueAccess().getLevelKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefaultValueAccess().getLevelNUMBERParserRuleCall_2_1_0()); 
	    }
		lv_level_3_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefaultValueRule());
	        }
       		set(
       			$current, 
       			"level",
        		lv_level_3_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='default' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDefaultValueAccess().getDefaultKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefaultValueAccess().getDefValueExplicitValueParserRuleCall_4_0()); 
	    }
		lv_defValue_5_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefaultValueRule());
	        }
       		set(
       			$current, 
       			"defValue",
        		lv_defValue_5_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getDefaultValueAccess().getEOSTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleSomeValuesCondition
entryRuleSomeValuesCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSomeValuesConditionRule()); }
	 iv_ruleSomeValuesCondition=ruleSomeValuesCondition 
	 { $current=$iv_ruleSomeValuesCondition.current; } 
	 EOF 
;

// Rule SomeValuesCondition
ruleSomeValuesCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='has' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSomeValuesConditionAccess().getHasKeyword_0_0());
    }

    |	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSomeValuesConditionAccess().getWithKeyword_0_1());
    }
)	otherlv_2='at' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSomeValuesConditionAccess().getAtKeyword_1());
    }
	otherlv_3='least' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSomeValuesConditionAccess().getLeastKeyword_2());
    }
	otherlv_4='one' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSomeValuesConditionAccess().getOneKeyword_3());
    }
	otherlv_5='value' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSomeValuesConditionAccess().getValueKeyword_4());
    }
((	otherlv_6='of' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSomeValuesConditionAccess().getOfKeyword_5_0_0());
    }
	otherlv_7='type' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSomeValuesConditionAccess().getTypeKeyword_5_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesConditionAccess().getRestrictionResourceIdentifierParserRuleCall_5_0_2_0()); 
	    }
		lv_restriction_8_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesConditionRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_8_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_9='each' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSomeValuesConditionAccess().getEachKeyword_5_1_0());
    }
	otherlv_10='of' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSomeValuesConditionAccess().getOfKeyword_5_1_1());
    }
	otherlv_11='types' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSomeValuesConditionAccess().getTypesKeyword_5_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeValuesConditionAccess().getRestrictionExistingResourceListParserRuleCall_5_1_3_0()); 
	    }
		lv_restriction_12_0=ruleExistingResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeValuesConditionRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_12_0, 
        		"ExistingResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleHasValueCondition
entryRuleHasValueCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasValueConditionRule()); }
	 iv_ruleHasValueCondition=ruleHasValueCondition 
	 { $current=$iv_ruleHasValueCondition.current; } 
	 EOF 
;

// Rule HasValueCondition
ruleHasValueCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='always' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasValueConditionAccess().getAlwaysKeyword_0());
    }
(	otherlv_1='has' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasValueConditionAccess().getHasKeyword_1_0());
    }

    |	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHasValueConditionAccess().getWithKeyword_1_1());
    }
)	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHasValueConditionAccess().getValueKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHasValueConditionAccess().getRestrictionExplicitValueParserRuleCall_3_0()); 
	    }
		lv_restriction_4_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasValueConditionRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_4_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMinCardCondition
entryRuleMinCardCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinCardConditionRule()); }
	 iv_ruleMinCardCondition=ruleMinCardCondition 
	 { $current=$iv_ruleMinCardCondition.current; } 
	 EOF 
;

// Rule MinCardCondition
ruleMinCardCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='has' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMinCardConditionAccess().getHasKeyword_0_0());
    }

    |	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMinCardConditionAccess().getWithKeyword_0_1());
    }
)	otherlv_2='at' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMinCardConditionAccess().getAtKeyword_1());
    }
	otherlv_3='least' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMinCardConditionAccess().getLeastKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardConditionAccess().getCardNUMBERParserRuleCall_3_0()); 
	    }
		lv_card_4_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardConditionRule());
	        }
       		set(
       			$current, 
       			"card",
        		lv_card_4_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='value' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMinCardConditionAccess().getValueKeyword_4_0());
    }

    |	otherlv_6='values' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMinCardConditionAccess().getValuesKeyword_4_1());
    }
)(	otherlv_7='of' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMinCardConditionAccess().getOfKeyword_5_0());
    }
	otherlv_8='type' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMinCardConditionAccess().getTypeKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMinCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_5_2_0()); 
	    }
		lv_classQualifier_9_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinCardConditionRule());
	        }
       		set(
       			$current, 
       			"classQualifier",
        		lv_classQualifier_9_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMaxCardCondition
entryRuleMaxCardCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxCardConditionRule()); }
	 iv_ruleMaxCardCondition=ruleMaxCardCondition 
	 { $current=$iv_ruleMaxCardCondition.current; } 
	 EOF 
;

// Rule MaxCardCondition
ruleMaxCardCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='has' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMaxCardConditionAccess().getHasKeyword_0_0());
    }

    |	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMaxCardConditionAccess().getWithKeyword_0_1());
    }
)	otherlv_2='at' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMaxCardConditionAccess().getAtKeyword_1());
    }
	otherlv_3='most' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMaxCardConditionAccess().getMostKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardConditionAccess().getCardNUMBERParserRuleCall_3_0()); 
	    }
		lv_card_4_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardConditionRule());
	        }
       		set(
       			$current, 
       			"card",
        		lv_card_4_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='value' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMaxCardConditionAccess().getValueKeyword_4_0());
    }

    |	otherlv_6='values' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMaxCardConditionAccess().getValuesKeyword_4_1());
    }
)(	otherlv_7='of' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMaxCardConditionAccess().getOfKeyword_5_0());
    }
	otherlv_8='type' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMaxCardConditionAccess().getTypeKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_5_2_0()); 
	    }
		lv_classQualifier_9_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxCardConditionRule());
	        }
       		set(
       			$current, 
       			"classQualifier",
        		lv_classQualifier_9_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCardCondition
entryRuleCardCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardConditionRule()); }
	 iv_ruleCardCondition=ruleCardCondition 
	 { $current=$iv_ruleCardCondition.current; } 
	 EOF 
;

// Rule CardCondition
ruleCardCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='has' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCardConditionAccess().getHasKeyword_0_0());
    }

    |	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCardConditionAccess().getWithKeyword_0_1());
    }
)	otherlv_2='exactly' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCardConditionAccess().getExactlyKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardConditionAccess().getCardNUMBERParserRuleCall_2_0()); 
	    }
		lv_card_3_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardConditionRule());
	        }
       		set(
       			$current, 
       			"card",
        		lv_card_3_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCardConditionAccess().getValueKeyword_3_0());
    }

    |	otherlv_5='values' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCardConditionAccess().getValuesKeyword_3_1());
    }
)(	otherlv_6='of' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCardConditionAccess().getOfKeyword_4_0());
    }
	otherlv_7='type' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCardConditionAccess().getTypeKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_4_2_0()); 
	    }
		lv_classQualifier_8_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardConditionRule());
	        }
       		set(
       			$current, 
       			"classQualifier",
        		lv_classQualifier_8_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleNecessaryAndSufficient
entryRuleNecessaryAndSufficient returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNecessaryAndSufficientRule()); }
	 iv_ruleNecessaryAndSufficient=ruleNecessaryAndSufficient 
	 { $current=$iv_ruleNecessaryAndSufficient.current; } 
	 EOF 
;

// Rule NecessaryAndSufficient
ruleNecessaryAndSufficient returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getSuperClassTypedBNodeParserRuleCall_0_0()); 
	    }
		lv_superClass_0_0=ruleTypedBNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		set(
       			$current, 
       			"superClass",
        		lv_superClass_0_0, 
        		"TypedBNode");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNecessaryAndSufficientAccess().getIsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getArticleIndefiniteArticleParserRuleCall_2_0()); 
	    }
		lv_article_2_0=ruleIndefiniteArticle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		set(
       			$current, 
       			"article",
        		lv_article_2_0, 
        		"IndefiniteArticle");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getSubClassResourceNameParserRuleCall_3_0()); 
	    }
		lv_subClass_3_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		set(
       			$current, 
       			"subClass",
        		lv_subClass_3_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='only' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNecessaryAndSufficientAccess().getOnlyKeyword_4());
    }
	otherlv_5='if' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNecessaryAndSufficientAccess().getIfKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameResourceByNameParserRuleCall_6_0()); 
	    }
		lv_propertyName_6_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		add(
       			$current, 
       			"propertyName",
        		lv_propertyName_6_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getCondConditionParserRuleCall_7_0()); 
	    }
		lv_cond_7_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		add(
       			$current, 
       			"cond",
        		lv_cond_7_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='and' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNecessaryAndSufficientAccess().getAndKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameResourceByNameParserRuleCall_8_1_0()); 
	    }
		lv_propertyName_9_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		add(
       			$current, 
       			"propertyName",
        		lv_propertyName_9_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNecessaryAndSufficientAccess().getCondConditionParserRuleCall_8_2_0()); 
	    }
		lv_cond_10_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNecessaryAndSufficientRule());
	        }
       		add(
       			$current, 
       			"cond",
        		lv_cond_10_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_EOS_11=RULE_EOS
    { 
    newLeafNode(this_EOS_11, grammarAccess.getNecessaryAndSufficientAccess().getEOSTerminalRuleCall_9()); 
    }
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionAccess().getAllValuesConditionParserRuleCall_0()); 
    }
    this_AllValuesCondition_0=ruleAllValuesCondition
    { 
        $current = $this_AllValuesCondition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionAccess().getSomeValuesConditionParserRuleCall_1()); 
    }
    this_SomeValuesCondition_1=ruleSomeValuesCondition
    { 
        $current = $this_SomeValuesCondition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionAccess().getHasValueConditionParserRuleCall_2()); 
    }
    this_HasValueCondition_2=ruleHasValueCondition
    { 
        $current = $this_HasValueCondition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionAccess().getMinCardConditionParserRuleCall_3()); 
    }
    this_MinCardCondition_3=ruleMinCardCondition
    { 
        $current = $this_MinCardCondition_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionAccess().getMaxCardConditionParserRuleCall_4()); 
    }
    this_MaxCardCondition_4=ruleMaxCardCondition
    { 
        $current = $this_MaxCardCondition_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionAccess().getCardConditionParserRuleCall_5()); 
    }
    this_CardCondition_5=ruleCardCondition
    { 
        $current = $this_CardCondition_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyDeclarationRule()); }
	 iv_rulePropertyDeclaration=rulePropertyDeclaration 
	 { $current=$iv_rulePropertyDeclaration.current; } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getPropertyNameResourceNameParserRuleCall_0_0_0()); 
	    }
		lv_propertyName_0_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyDeclarationAccess().getIsKeyword_0_1_0());
    }
	otherlv_2='a' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyDeclarationAccess().getAKeyword_0_1_1());
    }
	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyDeclarationAccess().getTypeKeyword_0_1_2());
    }
	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropertyDeclarationAccess().getOfKeyword_0_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getSuperPropNameResourceByNameParserRuleCall_0_1_4_0()); 
	    }
		lv_superPropName_5_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"superPropName",
        		lv_superPropName_5_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAdditionalPropertyInfoParserRuleCall_0_2_0()); 
	    }
		lv_addlPropInfo_6_0=ruleAdditionalPropertyInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		add(
       			$current, 
       			"addlPropInfo",
        		lv_addlPropInfo_6_0, 
        		"AdditionalPropertyInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)+this_EOS_7=RULE_EOS
    { 
    newLeafNode(this_EOS_7, grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_0_3()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getArticleAnArticleParserRuleCall_1_0_0()); 
	    }
		lv_article_8_0=ruleAnArticle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"article",
        		lv_article_8_0, 
        		"AnArticle");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_9='relationship' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPropertyDeclarationAccess().getRelationshipKeyword_1_1());
    }
	otherlv_10='of' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPropertyDeclarationAccess().getOfKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getDomainResourceIdentifierParserRuleCall_1_3_0()); 
	    }
		lv_domain_11_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"domain",
        		lv_domain_11_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='to' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPropertyDeclarationAccess().getToKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getRangeResourceResourceIdentifierParserRuleCall_1_5_0()); 
	    }
		lv_rangeResource_13_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"rangeResource",
        		lv_rangeResource_13_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14='is' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getPropertyDeclarationAccess().getIsKeyword_1_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getPropertyNameResourceNameParserRuleCall_1_7_0()); 
	    }
		lv_propertyName_15_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_15_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_16=RULE_EOS
    { 
    newLeafNode(this_EOS_16, grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_1_8()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getAnnotationPropertyResourceNameParserRuleCall_2_0_0()); 
	    }
		lv_annotationProperty_17_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"annotationProperty",
        		lv_annotationProperty_17_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18='is' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getPropertyDeclarationAccess().getIsKeyword_2_1());
    }
	otherlv_19='a' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPropertyDeclarationAccess().getAKeyword_2_2());
    }
	otherlv_20='type' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getPropertyDeclarationAccess().getTypeKeyword_2_3());
    }
	otherlv_21='of' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getPropertyDeclarationAccess().getOfKeyword_2_4());
    }
	otherlv_22='annotation' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPropertyDeclarationAccess().getAnnotationKeyword_2_5());
    }
this_EOS_23=RULE_EOS
    { 
    newLeafNode(this_EOS_23, grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_2_6()); 
    }
))
;





// Entry rule entryRuleAdditionalPropertyInfo
entryRuleAdditionalPropertyInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditionalPropertyInfoRule()); }
	 iv_ruleAdditionalPropertyInfo=ruleAdditionalPropertyInfo 
	 { $current=$iv_ruleAdditionalPropertyInfo.current; } 
	 EOF 
;

// Rule AdditionalPropertyInfo
ruleAdditionalPropertyInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_0_0());
    }
)?	otherlv_1='describes' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAdditionalPropertyInfoAccess().getDescribesKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getDomainResourceIdentifierParserRuleCall_0_2_0()); 
	    }
		lv_domain_2_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"domain",
        		lv_domain_2_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_1_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getCondConditionParserRuleCall_1_1_0()); 
	    }
		lv_cond_4_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_4_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_2_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getRangeRangeParserRuleCall_2_1_0()); 
	    }
		lv_range_6_0=ruleRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_6_0, 
        		"Range");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_3_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getIsfuncIsFunctionalParserRuleCall_3_1_0()); 
	    }
		lv_isfunc_8_0=ruleIsFunctional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"isfunc",
        		lv_isfunc_8_0, 
        		"IsFunctional");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_4_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getIsinvfuncIsInverseFunctionalParserRuleCall_4_1_0()); 
	    }
		lv_isinvfunc_10_0=ruleIsInverseFunctional		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"isinvfunc",
        		lv_isinvfunc_10_0, 
        		"IsInverseFunctional");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_5_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getIsSymIsSymmetricalParserRuleCall_5_1_0()); 
	    }
		lv_isSym_12_0=ruleIsSymmetrical		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"isSym",
        		lv_isSym_12_0, 
        		"IsSymmetrical");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_6_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getIsTransIsTransitiveParserRuleCall_6_1_0()); 
	    }
		lv_isTrans_14_0=ruleIsTransitive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"isTrans",
        		lv_isTrans_14_0, 
        		"IsTransitive");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_7_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionalPropertyInfoAccess().getIsInvOfIsInverseOfParserRuleCall_7_1_0()); 
	    }
		lv_isInvOf_16_0=ruleIsInverseOf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionalPropertyInfoRule());
	        }
       		set(
       			$current, 
       			"isInvOf",
        		lv_isInvOf_16_0, 
        		"IsInverseOf");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleFunctionalProperty
entryRuleFunctionalProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionalPropertyRule()); }
	 iv_ruleFunctionalProperty=ruleFunctionalProperty 
	 { $current=$iv_ruleFunctionalProperty.current; } 
	 EOF 
;

// Rule FunctionalProperty
ruleFunctionalProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); 
	    }
		lv_propertyName_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionalPropertyRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionalPropertyAccess().getIsFunctionalParserRuleCall_1()); 
    }
ruleIsFunctional
    { 
        afterParserOrEnumRuleCall();
    }
this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getFunctionalPropertyAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIsFunctional
entryRuleIsFunctional returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsFunctionalRule()); } 
	 iv_ruleIsFunctional=ruleIsFunctional 
	 { $current=$iv_ruleIsFunctional.current.getText(); }  
	 EOF 
;

// Rule IsFunctional
ruleIsFunctional returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='has' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsFunctionalAccess().getHasKeyword_0()); 
    }

	kw='a' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsFunctionalAccess().getAKeyword_1()); 
    }

	kw='single' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsFunctionalAccess().getSingleKeyword_2()); 
    }

	kw='value' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsFunctionalAccess().getValueKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleInverseFunctionalProperty
entryRuleInverseFunctionalProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInverseFunctionalPropertyRule()); }
	 iv_ruleInverseFunctionalProperty=ruleInverseFunctionalProperty 
	 { $current=$iv_ruleInverseFunctionalProperty.current; } 
	 EOF 
;

// Rule InverseFunctionalProperty
ruleInverseFunctionalProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInverseFunctionalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); 
	    }
		lv_propertyName_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInverseFunctionalPropertyRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInverseFunctionalPropertyAccess().getIsInverseFunctionalParserRuleCall_1()); 
    }
ruleIsInverseFunctional
    { 
        afterParserOrEnumRuleCall();
    }
this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getInverseFunctionalPropertyAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIsInverseFunctional
entryRuleIsInverseFunctional returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsInverseFunctionalRule()); } 
	 iv_ruleIsInverseFunctional=ruleIsInverseFunctional 
	 { $current=$iv_ruleIsInverseFunctional.current.getText(); }  
	 EOF 
;

// Rule IsInverseFunctional
ruleIsInverseFunctional returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='has' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsInverseFunctionalAccess().getHasKeyword_0()); 
    }

	kw='a' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsInverseFunctionalAccess().getAKeyword_1()); 
    }

	kw='single' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsInverseFunctionalAccess().getSingleKeyword_2()); 
    }

	kw='subject' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsInverseFunctionalAccess().getSubjectKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleSymmetricalProperty
entryRuleSymmetricalProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymmetricalPropertyRule()); }
	 iv_ruleSymmetricalProperty=ruleSymmetricalProperty 
	 { $current=$iv_ruleSymmetricalProperty.current; } 
	 EOF 
;

// Rule SymmetricalProperty
ruleSymmetricalProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSymmetricalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); 
	    }
		lv_propertyName_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymmetricalPropertyRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSymmetricalPropertyAccess().getIsSymmetricalParserRuleCall_1()); 
    }
ruleIsSymmetrical
    { 
        afterParserOrEnumRuleCall();
    }
this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getSymmetricalPropertyAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIsSymmetrical
entryRuleIsSymmetrical returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsSymmetricalRule()); } 
	 iv_ruleIsSymmetrical=ruleIsSymmetrical 
	 { $current=$iv_ruleIsSymmetrical.current.getText(); }  
	 EOF 
;

// Rule IsSymmetrical
ruleIsSymmetrical returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsSymmetricalAccess().getIsKeyword_0()); 
    }

	kw='symmetrical' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsSymmetricalAccess().getSymmetricalKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleTransitiveProperty
entryRuleTransitiveProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitivePropertyRule()); }
	 iv_ruleTransitiveProperty=ruleTransitiveProperty 
	 { $current=$iv_ruleTransitiveProperty.current; } 
	 EOF 
;

// Rule TransitiveProperty
ruleTransitiveProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTransitivePropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); 
	    }
		lv_propertyName_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitivePropertyRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTransitivePropertyAccess().getIsTransitiveParserRuleCall_1()); 
    }
ruleIsTransitive
    { 
        afterParserOrEnumRuleCall();
    }
this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getTransitivePropertyAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIsTransitive
entryRuleIsTransitive returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsTransitiveRule()); } 
	 iv_ruleIsTransitive=ruleIsTransitive 
	 { $current=$iv_ruleIsTransitive.current.getText(); }  
	 EOF 
;

// Rule IsTransitive
ruleIsTransitive returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsTransitiveAccess().getIsKeyword_0()); 
    }

	kw='transitive' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIsTransitiveAccess().getTransitiveKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInverseProperty
entryRuleInverseProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInversePropertyRule()); }
	 iv_ruleInverseProperty=ruleInverseProperty 
	 { $current=$iv_ruleInverseProperty.current; } 
	 EOF 
;

// Rule InverseProperty
ruleInverseProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInversePropertyAccess().getPropertyName1ResourceByNameParserRuleCall_0_0()); 
	    }
		lv_propertyName1_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInversePropertyRule());
	        }
       		set(
       			$current, 
       			"propertyName1",
        		lv_propertyName1_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInversePropertyAccess().getInvOfIsInverseOfParserRuleCall_1_0()); 
	    }
		lv_invOf_1_0=ruleIsInverseOf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInversePropertyRule());
	        }
       		set(
       			$current, 
       			"invOf",
        		lv_invOf_1_0, 
        		"IsInverseOf");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getInversePropertyAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIsInverseOf
entryRuleIsInverseOf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsInverseOfRule()); }
	 iv_ruleIsInverseOf=ruleIsInverseOf 
	 { $current=$iv_ruleIsInverseOf.current; } 
	 EOF 
;

// Rule IsInverseOf
ruleIsInverseOf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIsInverseOfAccess().getIsKeyword_0());
    }
	otherlv_1='the' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIsInverseOfAccess().getTheKeyword_1());
    }
	otherlv_2='inverse' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIsInverseOfAccess().getInverseKeyword_2());
    }
	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIsInverseOfAccess().getOfKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIsInverseOfAccess().getPropertyName2ResourceByNameParserRuleCall_4_0()); 
	    }
		lv_propertyName2_4_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIsInverseOfRule());
	        }
       		set(
       			$current, 
       			"propertyName2",
        		lv_propertyName2_4_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTypedBNode
entryRuleTypedBNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedBNodeRule()); }
	 iv_ruleTypedBNode=ruleTypedBNode 
	 { $current=$iv_ruleTypedBNode.current; } 
	 EOF 
;

// Rule TypedBNode
ruleTypedBNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedBNodeAccess().getArticleIndefiniteArticleParserRuleCall_0_0_0()); 
	    }
		lv_article_0_0=ruleIndefiniteArticle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedBNodeRule());
	        }
       		set(
       			$current, 
       			"article",
        		lv_article_0_0, 
        		"IndefiniteArticle");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedBNodeAccess().getClassIdentifierResourceIdentifierParserRuleCall_0_1_0()); 
	    }
		lv_classIdentifier_1_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedBNodeRule());
	        }
       		set(
       			$current, 
       			"classIdentifier",
        		lv_classIdentifier_1_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_article_2_0=	'any' 
    {
        newLeafNode(lv_article_2_0, grammarAccess.getTypedBNodeAccess().getArticleAnyKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedBNodeRule());
	        }
       		setWithLastConsumed($current, "article", lv_article_2_0, "any");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedBNodeAccess().getClassIdentifierResourceIdentifierParserRuleCall_1_1_0()); 
	    }
		lv_classIdentifier_3_0=ruleResourceIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedBNodeRule());
	        }
       		set(
       			$current, 
       			"classIdentifier",
        		lv_classIdentifier_3_0, 
        		"ResourceIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleInstanceDeclarationStatement
entryRuleInstanceDeclarationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceDeclarationStatementRule()); }
	 iv_ruleInstanceDeclarationStatement=ruleInstanceDeclarationStatement 
	 { $current=$iv_ruleInstanceDeclarationStatement.current; } 
	 EOF 
;

// Rule InstanceDeclarationStatement
ruleInstanceDeclarationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInstanceDeclarationStatementAccess().getInstanceDeclarationParserRuleCall_0()); 
    }
    this_InstanceDeclaration_0=ruleInstanceDeclaration
    { 
        $current = $this_InstanceDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
this_EOS_1=RULE_EOS
    { 
    newLeafNode(this_EOS_1, grammarAccess.getInstanceDeclarationStatementAccess().getEOSTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleInstanceDeclaration
entryRuleInstanceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceDeclarationRule()); }
	 iv_ruleInstanceDeclaration=ruleInstanceDeclaration 
	 { $current=$iv_ruleInstanceDeclaration.current; } 
	 EOF 
;

// Rule InstanceDeclaration
ruleInstanceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDeclarationAccess().getTypeDeclTypeDeclarationParserRuleCall_0_0_0()); 
	    }
		lv_typeDecl_0_0=ruleTypeDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDeclarationRule());
	        }
       		set(
       			$current, 
       			"typeDecl",
        		lv_typeDecl_0_0, 
        		"TypeDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_0_1_0()); 
	    }
		lv_addlInfoItems_1_0=rulePropValPartialTriple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDeclarationRule());
	        }
       		add(
       			$current, 
       			"addlInfoItems",
        		lv_addlInfoItems_1_0, 
        		"PropValPartialTriple");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDeclarationAccess().getArticleIndefiniteArticleParserRuleCall_1_0_0()); 
	    }
		lv_article_2_0=ruleIndefiniteArticle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDeclarationRule());
	        }
       		set(
       			$current, 
       			"article",
        		lv_article_2_0, 
        		"IndefiniteArticle");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDeclarationAccess().getClassNameResourceByNameParserRuleCall_1_1_0()); 
	    }
		lv_className_3_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDeclarationRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_3_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDeclarationAccess().getInstanceNameResourceNameParserRuleCall_1_2_0()); 
	    }
		lv_instanceName_4_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDeclarationRule());
	        }
       		set(
       			$current, 
       			"instanceName",
        		lv_instanceName_4_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_1_3_0()); 
	    }
		lv_addlInfoItems_5_0=rulePropValPartialTriple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDeclarationRule());
	        }
       		add(
       			$current, 
       			"addlInfoItems",
        		lv_addlInfoItems_5_0, 
        		"PropValPartialTriple");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
;





// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDeclarationRule()); }
	 iv_ruleTypeDeclaration=ruleTypeDeclaration 
	 { $current=$iv_ruleTypeDeclaration.current; } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getInstNameResourceNameParserRuleCall_0_0()); 
	    }
		lv_instName_0_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"instName",
        		lv_instName_0_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeDeclarationAccess().getIsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeTypedBNodeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleTypedBNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"TypedBNode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstanceDifferentFrom
entryRuleInstanceDifferentFrom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceDifferentFromRule()); }
	 iv_ruleInstanceDifferentFrom=ruleInstanceDifferentFrom 
	 { $current=$iv_ruleInstanceDifferentFrom.current; } 
	 EOF 
;

// Rule InstanceDifferentFrom
ruleInstanceDifferentFrom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDifferentFromAccess().getInstName1ResourceByNameParserRuleCall_0_0()); 
	    }
		lv_instName1_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDifferentFromRule());
	        }
       		set(
       			$current, 
       			"instName1",
        		lv_instName1_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceDifferentFromAccess().getIsKeyword_1());
    }
	otherlv_2='not' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstanceDifferentFromAccess().getNotKeyword_2());
    }
	otherlv_3='the' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstanceDifferentFromAccess().getTheKeyword_3());
    }
	otherlv_4='same' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstanceDifferentFromAccess().getSameKeyword_4());
    }
	otherlv_5='as' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstanceDifferentFromAccess().getAsKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceDifferentFromAccess().getInstName2ResourceByNameParserRuleCall_6_0()); 
	    }
		lv_instName2_6_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceDifferentFromRule());
	        }
       		set(
       			$current, 
       			"instName2",
        		lv_instName2_6_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_7=RULE_EOS
    { 
    newLeafNode(this_EOS_7, grammarAccess.getInstanceDifferentFromAccess().getEOSTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleInstancesAllDifferent
entryRuleInstancesAllDifferent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstancesAllDifferentRule()); }
	 iv_ruleInstancesAllDifferent=ruleInstancesAllDifferent 
	 { $current=$iv_ruleInstancesAllDifferent.current; } 
	 EOF 
;

// Rule InstancesAllDifferent
ruleInstancesAllDifferent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstancesAllDifferentAccess().getInstancesExistingResourceListParserRuleCall_0_0()); 
	    }
		lv_instances_0_0=ruleExistingResourceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstancesAllDifferentRule());
	        }
       		set(
       			$current, 
       			"instances",
        		lv_instances_0_0, 
        		"ExistingResourceList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='are' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstancesAllDifferentAccess().getAreKeyword_1());
    }
	otherlv_2='not' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstancesAllDifferentAccess().getNotKeyword_2());
    }
	otherlv_3='the' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstancesAllDifferentAccess().getTheKeyword_3());
    }
	otherlv_4='same' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstancesAllDifferentAccess().getSameKeyword_4());
    }
this_EOS_5=RULE_EOS
    { 
    newLeafNode(this_EOS_5, grammarAccess.getInstancesAllDifferentAccess().getEOSTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleExistingInstanceAttribution
entryRuleExistingInstanceAttribution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistingInstanceAttributionRule()); }
	 iv_ruleExistingInstanceAttribution=ruleExistingInstanceAttribution 
	 { $current=$iv_ruleExistingInstanceAttribution.current; } 
	 EOF 
;

// Rule ExistingInstanceAttribution
ruleExistingInstanceAttribution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getExistingInstanceAttributionAccess().getSubjResourceByNameParserRuleCall_0_0_0()); 
	    }
		lv_subj_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingInstanceAttributionRule());
	        }
       		set(
       			$current, 
       			"subj",
        		lv_subj_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_0_1_0()); 
	    }
		lv_addlInfoItems_1_0=rulePropValPartialTriple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingInstanceAttributionRule());
	        }
       		add(
       			$current, 
       			"addlInfoItems",
        		lv_addlInfoItems_1_0, 
        		"PropValPartialTriple");
	        afterParserOrEnumRuleCall();
	    }

)
)+this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_0_2()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExistingInstanceAttributionAccess().getPOfSOfPatternReturningValuesParserRuleCall_1_0_0()); 
	    }
		lv_pOfS_3_0=ruleOfPatternReturningValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingInstanceAttributionRule());
	        }
       		set(
       			$current, 
       			"pOfS",
        		lv_pOfS_3_0, 
        		"OfPatternReturningValues");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='is' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExistingInstanceAttributionAccess().getIsKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistingInstanceAttributionAccess().getObjObjectParserRuleCall_1_2_0()); 
	    }
		lv_obj_5_0=ruleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingInstanceAttributionRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_5_0, 
        		"Object");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_1_3()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExistingInstanceAttributionAccess().getObjExplicitValueParserRuleCall_2_0_0()); 
	    }
		lv_obj_7_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingInstanceAttributionRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_7_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='is' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExistingInstanceAttributionAccess().getIsKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistingInstanceAttributionAccess().getPOfSOfPatternReturningValuesParserRuleCall_2_2_0()); 
	    }
		lv_pOfS_9_0=ruleOfPatternReturningValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistingInstanceAttributionRule());
	        }
       		set(
       			$current, 
       			"pOfS",
        		lv_pOfS_9_0, 
        		"OfPatternReturningValues");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_10=RULE_EOS
    { 
    newLeafNode(this_EOS_10, grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_2_3()); 
    }
))
;





// Entry rule entryRuleObject
entryRuleObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectRule()); }
	 iv_ruleObject=ruleObject 
	 { $current=$iv_ruleObject.current; } 
	 EOF 
;

// Rule Object
ruleObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectAccess().getValLiteralValueParserRuleCall_0_0()); 
	    }
		lv_val_0_1=ruleLiteralValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_0_1, 
        		"LiteralValue");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getObjectAccess().getValResourceByNameParserRuleCall_0_1()); 
	    }
		lv_val_0_2=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_0_2, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getObjectAccess().getValInstanceDeclarationParserRuleCall_0_2()); 
	    }
		lv_val_0_3=ruleInstanceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_0_3, 
        		"InstanceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRulePropValPartialTriple
entryRulePropValPartialTriple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropValPartialTripleRule()); }
	 iv_rulePropValPartialTriple=rulePropValPartialTriple 
	 { $current=$iv_rulePropValPartialTriple.current; } 
	 EOF 
;

// Rule PropValPartialTriple
rulePropValPartialTriple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropValPartialTripleAccess().getCommaKeyword_0());
    }
)?(	otherlv_1='has' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropValPartialTripleAccess().getHasKeyword_1_0());
    }

    |	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropValPartialTripleAccess().getWithKeyword_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPropValPartialTripleAccess().getPropertyNameResourceByNameParserRuleCall_2_0()); 
	    }
		lv_propertyName_3_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropValPartialTripleRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_3_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPropValPartialTripleAccess().getObjectValueExplicitValueParserRuleCall_3_0_0()); 
	    }
		lv_objectValue_4_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropValPartialTripleRule());
	        }
       		set(
       			$current, 
       			"objectValue",
        		lv_objectValue_4_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPropValPartialTripleAccess().getLeftParenthesisKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropValPartialTripleAccess().getObjectValueBNodeInstanceDeclarationParserRuleCall_3_1_1_0()); 
	    }
		lv_objectValueBNode_6_0=ruleInstanceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropValPartialTripleRule());
	        }
       		set(
       			$current, 
       			"objectValueBNode",
        		lv_objectValueBNode_6_0, 
        		"InstanceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPropValPartialTripleAccess().getRightParenthesisKeyword_3_1_2());
    }
)))
;





// Entry rule entryRuleOfPatternReturningValues
entryRuleOfPatternReturningValues returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOfPatternReturningValuesRule()); }
	 iv_ruleOfPatternReturningValues=ruleOfPatternReturningValues 
	 { $current=$iv_ruleOfPatternReturningValues.current; } 
	 EOF 
;

// Rule OfPatternReturningValues
ruleOfPatternReturningValues returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsOfPhraseParserRuleCall_0_0_0()); 
	    }
		lv_ofphrs_0_0=ruleOfPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOfPatternReturningValuesRule());
	        }
       		add(
       			$current, 
       			"ofphrs",
        		lv_ofphrs_0_0, 
        		"OfPhrase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getOfPatternReturningValuesAccess().getSubjectResourceByNameParserRuleCall_0_1_0()); 
	    }
		lv_subject_1_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOfPatternReturningValuesRule());
	        }
       		set(
       			$current, 
       			"subject",
        		lv_subject_1_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOfPatternReturningValuesAccess().getTypeTypedBNodeParserRuleCall_1_0()); 
	    }
		lv_type_2_0=ruleTypedBNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOfPatternReturningValuesRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"TypedBNode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleWithChain
entryRuleWithChain returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWithChainRule()); }
	 iv_ruleWithChain=ruleWithChain 
	 { $current=$iv_ruleWithChain.current; } 
	 EOF 
;

// Rule WithChain
ruleWithChain returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWithChainAccess().getWpsWithPhraseParserRuleCall_0_0()); 
	    }
		lv_wps_0_0=ruleWithPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithChainRule());
	        }
       		add(
       			$current, 
       			"wps",
        		lv_wps_0_0, 
        		"WithPhrase");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWithChainAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithChainAccess().getWpsWithPhraseParserRuleCall_1_1_0()); 
	    }
		lv_wps_2_0=ruleWithPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithChainRule());
	        }
       		add(
       			$current, 
       			"wps",
        		lv_wps_2_0, 
        		"WithPhrase");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWithChainAccess().getRightParenthesisKeyword_1_2());
    }
))
;





// Entry rule entryRuleWithPhrase
entryRuleWithPhrase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWithPhraseRule()); }
	 iv_ruleWithPhrase=ruleWithPhrase 
	 { $current=$iv_ruleWithPhrase.current; } 
	 EOF 
;

// Rule WithPhrase
ruleWithPhrase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWithPhraseAccess().getCommaKeyword_0_0());
    }
)?(	otherlv_1='has' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWithPhraseAccess().getHasKeyword_0_1_0());
    }

    |	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWithPhraseAccess().getWithKeyword_0_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_0_2_0()); 
	    }
		lv_propertyName_3_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_3_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getValueExplicitValueParserRuleCall_0_3_0()); 
	    }
		lv_value_4_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWithPhraseAccess().getCommaKeyword_1_0());
    }
)?(	otherlv_6='has' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWithPhraseAccess().getHasKeyword_1_1_0());
    }

    |	otherlv_7='with' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWithPhraseAccess().getWithKeyword_1_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_1_2_0()); 
	    }
		lv_propertyName_8_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_8_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getValueIntervalValueParserRuleCall_1_3_0()); 
	    }
		lv_value_9_0=ruleIntervalValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"IntervalValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getWithPhraseAccess().getCommaKeyword_2_0());
    }
)?(	otherlv_11='has' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getWithPhraseAccess().getHasKeyword_2_1_0());
    }

    |	otherlv_12='with' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getWithPhraseAccess().getWithKeyword_2_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_2_2_0()); 
	    }
		lv_propertyName_13_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_13_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getValueEmbeddedInstanceDeclarationParserRuleCall_2_3_0_0()); 
	    }
		lv_value_14_1=ruleEmbeddedInstanceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_14_1, 
        		"EmbeddedInstanceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getValueWithPhraseParserRuleCall_2_3_0_1()); 
	    }
		lv_value_14_2=ruleWithPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_14_2, 
        		"WithPhrase");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getWithPhraseAccess().getValueLimitedExpressionParserRuleCall_2_3_0_2()); 
	    }
		lv_value_14_3=ruleLimitedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPhraseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_14_3, 
        		"LimitedExpression");
	        afterParserOrEnumRuleCall();
	    }

)

)
)))
;





// Entry rule entryRuleEmbeddedInstanceDeclaration
entryRuleEmbeddedInstanceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmbeddedInstanceDeclarationRule()); }
	 iv_ruleEmbeddedInstanceDeclaration=ruleEmbeddedInstanceDeclaration 
	 { $current=$iv_ruleEmbeddedInstanceDeclaration.current; } 
	 EOF 
;

// Rule EmbeddedInstanceDeclaration
ruleEmbeddedInstanceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmbeddedInstanceDeclarationAccess().getLeftParenthesisKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEmbeddedInstanceDeclarationAccess().getInstanceDeclarationParserRuleCall_1()); 
    }
    this_InstanceDeclaration_1=ruleInstanceDeclaration
    { 
        $current = $this_InstanceDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEmbeddedInstanceDeclarationAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleMergedTriples
entryRuleMergedTriples returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMergedTriplesRule()); }
	 iv_ruleMergedTriples=ruleMergedTriples 
	 { $current=$iv_ruleMergedTriples.current; } 
	 EOF 
;

// Rule MergedTriples
ruleMergedTriples returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMergedTriplesAccess().getOpsOfPhraseParserRuleCall_0_0()); 
	    }
		lv_ops_0_0=ruleOfPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMergedTriplesRule());
	        }
       		add(
       			$current, 
       			"ops",
        		lv_ops_0_0, 
        		"OfPhrase");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMergedTriplesAccess().getPivotTypedBNodeParserRuleCall_1_0()); 
	    }
		lv_pivot_1_0=ruleTypedBNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMergedTriplesRule());
	        }
       		set(
       			$current, 
       			"pivot",
        		lv_pivot_1_0, 
        		"TypedBNode");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMergedTriplesAccess().getWcsWithChainParserRuleCall_2_0()); 
	    }
		lv_wcs_2_0=ruleWithChain		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMergedTriplesRule());
	        }
       		add(
       			$current, 
       			"wcs",
        		lv_wcs_2_0, 
        		"WithChain");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleOfPhrase
entryRuleOfPhrase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOfPhraseRule()); }
	 iv_ruleOfPhrase=ruleOfPhrase 
	 { $current=$iv_ruleOfPhrase.current; } 
	 EOF 
;

// Rule OfPhrase
ruleOfPhrase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOfPhraseAccess().getArticleAnArticleParserRuleCall_0_0()); 
	    }
		lv_article_0_0=ruleAnArticle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOfPhraseRule());
	        }
       		set(
       			$current, 
       			"article",
        		lv_article_0_0, 
        		"AnArticle");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOfPhraseAccess().getPropertyNameResourceByNameParserRuleCall_1_0()); 
	    }
		lv_propertyName_1_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOfPhraseRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_1_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOfPhraseAccess().getOfKeyword_2());
    }
)
;





// Entry rule entryRuleVariableList
entryRuleVariableList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableListRule()); }
	 iv_ruleVariableList=ruleVariableList 
	 { $current=$iv_ruleVariableList.current; } 
	 EOF 
;

// Rule VariableList
ruleVariableList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableListAccess().getNamesResourceNameParserRuleCall_0_0()); 
	    }
		lv_names_0_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_0_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariableListAccess().getCommaKeyword_1_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableListAccess().getNamesResourceNameParserRuleCall_1_1_0()); 
	    }
		lv_names_2_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableListRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_2_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getNameNAMEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"NAME");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getColonKeyword_2());
    }
)?(	otherlv_3='given' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getGivenKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getGivensElementSetParserRuleCall_3_1_0()); 
	    }
		lv_givens_4_0=ruleElementSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"givens",
        		lv_givens_4_0, 
        		"ElementSet");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?(	otherlv_5='if' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getIfKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getIfsElementSetParserRuleCall_4_1_0()); 
	    }
		lv_ifs_6_0=ruleElementSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"ifs",
        		lv_ifs_6_0, 
        		"ElementSet");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?	otherlv_7='then' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getThenKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getThensElementSetParserRuleCall_6_0()); 
	    }
		lv_thens_8_0=ruleElementSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"thens",
        		lv_thens_8_0, 
        		"ElementSet");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_9=RULE_EOS
    { 
    newLeafNode(this_EOS_9, grammarAccess.getRuleAccess().getEOSTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	 iv_ruleQuery=ruleQuery 
	 { $current=$iv_ruleQuery.current; } 
	 EOF 
;

// Rule Query
ruleQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Ask:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQueryAccess().getAskKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getQueryAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleTest
entryRuleTest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestRule()); }
	 iv_ruleTest=ruleTest 
	 { $current=$iv_ruleTest.current; } 
	 EOF 
;

// Rule Test
ruleTest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Test:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTestAccess().getTestKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTestAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getTestAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	 iv_ruleExpr=ruleExpr 
	 { $current=$iv_ruleExpr.current; } 
	 EOF 
;

// Rule Expr
ruleExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Expr:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExprAccess().getExprKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getExprAccess().getEOSTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleDisplay
entryRuleDisplay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisplayRule()); }
	 iv_ruleDisplay=ruleDisplay 
	 { $current=$iv_ruleDisplay.current; } 
	 EOF 
;

// Rule Display
ruleDisplay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Print:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDisplayAccess().getPrintKeyword_0());
    }
(((
(
		lv_displayString_1_0=RULE_STRING
		{
			newLeafNode(lv_displayString_1_0, grammarAccess.getDisplayAccess().getDisplayStringSTRINGTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDisplayRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayString",
        		lv_displayString_1_0, 
        		"STRING");
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_0_1()); 
    }
)
    |((
(
		lv_model_3_0=	'Deductions' 
    {
        newLeafNode(lv_model_3_0, grammarAccess.getDisplayAccess().getModelDeductionsKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDisplayRule());
	        }
       		setWithLastConsumed($current, "model", lv_model_3_0, "Deductions");
	    }

)
)this_EOS_4=RULE_EOS
    { 
    newLeafNode(this_EOS_4, grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_1_1()); 
    }
)
    |((
(
		lv_model_5_0=	'Model' 
    {
        newLeafNode(lv_model_5_0, grammarAccess.getDisplayAccess().getModelModelKeyword_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDisplayRule());
	        }
       		setWithLastConsumed($current, "model", lv_model_5_0, "Model");
	    }

)
)this_EOS_6=RULE_EOS
    { 
    newLeafNode(this_EOS_6, grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_2_1()); 
    }
)))
;





// Entry rule entryRuleExplanation
entryRuleExplanation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExplanationRule()); }
	 iv_ruleExplanation=ruleExplanation 
	 { $current=$iv_ruleExplanation.current; } 
	 EOF 
;

// Rule Explanation
ruleExplanation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Explain:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExplanationAccess().getExplainKeyword_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getExplanationAccess().getExprInstanceDeclarationParserRuleCall_1_0_0_0()); 
	    }
		lv_expr_1_0=ruleInstanceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplanationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"InstanceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_2=RULE_EOS
    { 
    newLeafNode(this_EOS_2, grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_0_1()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExplanationAccess().getExprExistingInstanceAttributionParserRuleCall_1_1_0()); 
	    }
		lv_expr_3_0=ruleExistingInstanceAttribution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplanationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"ExistingInstanceAttribution");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExplanationAccess().getExprExpressionParserRuleCall_1_2_0_0()); 
	    }
		lv_expr_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplanationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_5=RULE_EOS
    { 
    newLeafNode(this_EOS_5, grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_2_1()); 
    }
)
    |(	otherlv_6='Rule' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExplanationAccess().getRuleKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExplanationAccess().getRulenameNAMEParserRuleCall_1_3_1_0()); 
	    }
		lv_rulename_7_0=ruleNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplanationRule());
	        }
       		set(
       			$current, 
       			"rulename",
        		lv_rulename_7_0, 
        		"NAME");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EOS_8=RULE_EOS
    { 
    newLeafNode(this_EOS_8, grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_3_2()); 
    }
)))
;





// Entry rule entryRuleElementSet
entryRuleElementSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementSetRule()); }
	 iv_ruleElementSet=ruleElementSet 
	 { $current=$iv_ruleElementSet.current; } 
	 EOF 
;

// Rule ElementSet
ruleElementSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getElementSetAccess().getElementsExpressionParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementSetRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElementSetAccess().getCommaKeyword_1_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getElementSetAccess().getElementsExpressionParserRuleCall_1_1_0()); 
	    }
		lv_elements_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementSetRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSelectExpression
entryRuleSelectExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectExpressionRule()); }
	 iv_ruleSelectExpression=ruleSelectExpression 
	 { $current=$iv_ruleSelectExpression.current; } 
	 EOF 
;

// Rule SelectExpression
ruleSelectExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='select' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0());
    }
(
(
		lv_distinct_1_0=	'distinct' 
    {
        newLeafNode(lv_distinct_1_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectExpressionRule());
	        }
       		setWithLastConsumed($current, "distinct", lv_distinct_1_0, "distinct");
	    }

)
)?((
(
		lv_allVars_2_0=	'*' 
    {
        newLeafNode(lv_allVars_2_0, grammarAccess.getSelectExpressionAccess().getAllVarsAsteriskKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectExpressionRule());
	        }
       		setWithLastConsumed($current, "allVars", lv_allVars_2_0, "*");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectExpressionAccess().getVarListVariableListParserRuleCall_2_1_0()); 
	    }
		lv_varList_3_0=ruleVariableList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
	        }
       		set(
       			$current, 
       			"varList",
        		lv_varList_3_0, 
        		"VariableList");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSelectExpressionAccess().getWhereKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectExpressionAccess().getExprOrExpressionParserRuleCall_4_0()); 
	    }
		lv_expr_5_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_orderby_6_0=	'order by' 
    {
        newLeafNode(lv_orderby_6_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderByKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectExpressionRule());
	        }
       		setWithLastConsumed($current, "orderby", lv_orderby_6_0, "order by");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderListParserRuleCall_5_1_0()); 
	    }
		lv_orderList_7_0=ruleOrderList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
	        }
       		set(
       			$current, 
       			"orderList",
        		lv_orderList_7_0, 
        		"OrderList");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConstructExpression
entryRuleConstructExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructExpressionRule()); }
	 iv_ruleConstructExpression=ruleConstructExpression 
	 { $current=$iv_ruleConstructExpression.current; } 
	 EOF 
;

// Rule ConstructExpression
ruleConstructExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='construct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstructExpressionAccess().getConstructKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructExpressionAccess().getSubjResourceNameParserRuleCall_1_0()); 
	    }
		lv_subj_1_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
	        }
       		set(
       			$current, 
       			"subj",
        		lv_subj_1_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructExpressionAccess().getPredResourceNameParserRuleCall_2_0()); 
	    }
		lv_pred_2_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
	        }
       		set(
       			$current, 
       			"pred",
        		lv_pred_2_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructExpressionAccess().getObjResourceNameParserRuleCall_3_0()); 
	    }
		lv_obj_3_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_3_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructExpressionAccess().getWhereKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructExpressionAccess().getExprOrExpressionParserRuleCall_5_0()); 
	    }
		lv_expr_5_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAskQueryExpression
entryRuleAskQueryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAskQueryExpressionRule()); }
	 iv_ruleAskQueryExpression=ruleAskQueryExpression 
	 { $current=$iv_ruleAskQueryExpression.current; } 
	 EOF 
;

// Rule AskQueryExpression
ruleAskQueryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ask' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAskQueryExpressionAccess().getAskKeyword_0());
    }
	otherlv_1='where' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAskQueryExpressionAccess().getWhereKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAskQueryExpressionAccess().getExprOrExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAskQueryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOrderList
entryRuleOrderList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderListRule()); }
	 iv_ruleOrderList=ruleOrderList 
	 { $current=$iv_ruleOrderList.current; } 
	 EOF 
;

// Rule OrderList
ruleOrderList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrderListAccess().getOrderListOrderElementParserRuleCall_0_0()); 
	    }
		lv_orderList_0_0=ruleOrderElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderListRule());
	        }
       		add(
       			$current, 
       			"orderList",
        		lv_orderList_0_0, 
        		"OrderElement");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrderListAccess().getCommaKeyword_1_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderListAccess().getOrderListOrderElementParserRuleCall_1_1_0()); 
	    }
		lv_orderList_2_0=ruleOrderElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderListRule());
	        }
       		add(
       			$current, 
       			"orderList",
        		lv_orderList_2_0, 
        		"OrderElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOrderElement
entryRuleOrderElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderElementRule()); }
	 iv_ruleOrderElement=ruleOrderElement 
	 { $current=$iv_ruleOrderElement.current; } 
	 EOF 
;

// Rule OrderElement
ruleOrderElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_order_0_1=	'asc' 
    {
        newLeafNode(lv_order_0_1, grammarAccess.getOrderElementAccess().getOrderAscKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderElementRule());
	        }
       		setWithLastConsumed($current, "order", lv_order_0_1, null);
	    }

    |		lv_order_0_2=	'desc' 
    {
        newLeafNode(lv_order_0_2, grammarAccess.getOrderElementAccess().getOrderDescKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderElementRule());
	        }
       		setWithLastConsumed($current, "order", lv_order_0_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderElementAccess().getNameResourceNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleResourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ResourceName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall_0()); 
    }
    this_SelectExpression_0=ruleSelectExpression
    { 
        $current = $this_SelectExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getConstructExpressionParserRuleCall_1()); 
    }
    this_ConstructExpression_1=ruleConstructExpression
    { 
        $current = $this_ConstructExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getAskQueryExpressionParserRuleCall_2()); 
    }
    this_AskQueryExpression_2=ruleAskQueryExpression
    { 
        $current = $this_AskQueryExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall_3()); 
    }
    this_OrExpression_3=ruleOrExpression
    { 
        $current = $this_OrExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	 iv_ruleOrExpression=ruleOrExpression 
	 { $current=$iv_ruleOrExpression.current; } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
    }
    this_AndExpression_0=ruleAndExpression
    { 
        $current = $this_AndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrExpressionAccess().getJunctionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'||' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'or' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
    }
    this_RelationalExpression_0=ruleRelationalExpression
    { 
        $current = $this_RelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndExpressionAccess().getJunctionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'&&' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'and' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
    }
    this_AdditiveExpression_0=ruleAdditiveExpression
    { 
        $current = $this_AdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'=' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getRelationalExpressionAccess().getOpEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'==' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getRelationalExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'is' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getRelationalExpressionAccess().getOpIsKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'!=' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getRelationalExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'<' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=	'<=' 
    {
        newLeafNode(lv_op_2_6, grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

    |		lv_op_2_7=	'>' 
    {
        newLeafNode(lv_op_2_7, grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_7, null);
	    }

    |		lv_op_2_8=	'>=' 
    {
        newLeafNode(lv_op_2_8, grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_8, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_MultiplicativeExpression_0=ruleMultiplicativeExpression
    { 
        $current = $this_MultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'+' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'-' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrPrimaryExpressionParserRuleCall_0()); 
    }
    this_UnaryOrPrimaryExpression_0=ruleUnaryOrPrimaryExpression
    { 
        $current = $this_UnaryOrPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'*' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'^' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getMultiplicativeExpressionAccess().getOpCircumflexAccentKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'%' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleUnaryOrPrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UnaryOrPrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNotOnly
entryRuleNotOnly returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotOnlyRule()); } 
	 iv_ruleNotOnly=ruleNotOnly 
	 { $current=$iv_ruleNotOnly.current.getText(); }  
	 EOF 
;

// Rule NotOnly
ruleNotOnly returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='not' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNotOnlyAccess().getNotKeyword_0()); 
    }

	kw='only' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNotOnlyAccess().getOnlyKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleUnaryOrPrimaryExpression
entryRuleUnaryOrPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOrPrimaryExpressionRule()); }
	 iv_ruleUnaryOrPrimaryExpression=ruleUnaryOrPrimaryExpression 
	 { $current=$iv_ruleUnaryOrPrimaryExpression.current; } 
	 EOF 
;

// Rule UnaryOrPrimaryExpression
ruleUnaryOrPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryOrPrimaryExpressionAccess().getUnaryOpExpressionAction_0_0(),
            $current);
    }
)(
(
(
		lv_op_1_1=	'!' 
    {
        newLeafNode(lv_op_1_1, grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpExclamationMarkKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOrPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_1, null);
	    }

    |		lv_op_1_2=	'not' 
    {
        newLeafNode(lv_op_1_2, grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpNotKeyword_0_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOrPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_2, null);
	    }

    |		lv_op_1_3=	'only' 
    {
        newLeafNode(lv_op_1_3, grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpOnlyKeyword_0_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOrPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_3, null);
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpNotOnlyParserRuleCall_0_1_0_3()); 
	    }
		lv_op_1_4=ruleNotOnly		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryOrPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_1_4, 
        		"NotOnly");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_op_1_5=	'-' 
    {
        newLeafNode(lv_op_1_5, grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpHyphenMinusKeyword_0_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOrPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_5, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryOrPrimaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_0_2_0()); 
	    }
		lv_expr_2_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryOrPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryOrPrimaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); 
    }
    this_PrimaryExpression_3=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
    }
)
    |((
(
		lv_func_3_0=RULE_ID
		{
			newLeafNode(lv_func_3_0, grammarAccess.getPrimaryExpressionAccess().getFuncIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"func",
        		lv_func_3_0, 
        		"ID");
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_0_0()); 
	    }
		lv_args_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_1_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_1_1_0()); 
	    }
		lv_args_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getGpGraphPatternParserRuleCall_2_0()); 
	    }
		lv_gp_9_0=ruleGraphPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"gp",
        		lv_gp_9_0, 
        		"GraphPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIvalueIntervalValueParserRuleCall_3_0()); 
	    }
		lv_ivalue_10_0=ruleIntervalValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"ivalue",
        		lv_ivalue_10_0, 
        		"IntervalValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueExplicitValueParserRuleCall_4_0()); 
	    }
		lv_value_11_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_11_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_5_0()); 
	    }
		lv_valueTable_12_0=ruleValueTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"valueTable",
        		lv_valueTable_12_0, 
        		"ValueTable");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLimitedExpression
entryRuleLimitedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedExpressionRule()); }
	 iv_ruleLimitedExpression=ruleLimitedExpression 
	 { $current=$iv_ruleLimitedExpression.current; } 
	 EOF 
;

// Rule LimitedExpression
ruleLimitedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedExpressionAccess().getLimitedOrExpressionParserRuleCall()); 
    }
    this_LimitedOrExpression_0=ruleLimitedOrExpression
    { 
        $current = $this_LimitedOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleLimitedOrExpression
entryRuleLimitedOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedOrExpressionRule()); }
	 iv_ruleLimitedOrExpression=ruleLimitedOrExpression 
	 { $current=$iv_ruleLimitedOrExpression.current; } 
	 EOF 
;

// Rule LimitedOrExpression
ruleLimitedOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedOrExpressionAccess().getLimitedAndExpressionParserRuleCall_0()); 
    }
    this_LimitedAndExpression_0=ruleLimitedAndExpression
    { 
        $current = $this_LimitedAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLimitedOrExpressionAccess().getJunctionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'||' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLimitedOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedOrExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'or' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLimitedOrExpressionAccess().getOpOrKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedOrExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedOrExpressionAccess().getRightLimitedAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleLimitedAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"LimitedAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLimitedAndExpression
entryRuleLimitedAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedAndExpressionRule()); }
	 iv_ruleLimitedAndExpression=ruleLimitedAndExpression 
	 { $current=$iv_ruleLimitedAndExpression.current; } 
	 EOF 
;

// Rule LimitedAndExpression
ruleLimitedAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedAndExpressionAccess().getLimitedRelationalExpressionParserRuleCall_0()); 
    }
    this_LimitedRelationalExpression_0=ruleLimitedRelationalExpression
    { 
        $current = $this_LimitedRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLimitedAndExpressionAccess().getJunctionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'&&' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLimitedAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedAndExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'and' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLimitedAndExpressionAccess().getOpAndKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedAndExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedAndExpressionAccess().getRightLimitedRelationalExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleLimitedRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"LimitedRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLimitedRelationalExpression
entryRuleLimitedRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedRelationalExpressionRule()); }
	 iv_ruleLimitedRelationalExpression=ruleLimitedRelationalExpression 
	 { $current=$iv_ruleLimitedRelationalExpression.current; } 
	 EOF 
;

// Rule LimitedRelationalExpression
ruleLimitedRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedRelationalExpressionAccess().getLimitedAdditiveExpressionParserRuleCall_0()); 
    }
    this_LimitedAdditiveExpression_0=ruleLimitedAdditiveExpression
    { 
        $current = $this_LimitedAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLimitedRelationalExpressionAccess().getBinaryOpExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'=' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLimitedRelationalExpressionAccess().getOpEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'==' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLimitedRelationalExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'is' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getLimitedRelationalExpressionAccess().getOpIsKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'!=' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getLimitedRelationalExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'<' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getLimitedRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=	'<=' 
    {
        newLeafNode(lv_op_2_6, grammarAccess.getLimitedRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

    |		lv_op_2_7=	'>' 
    {
        newLeafNode(lv_op_2_7, grammarAccess.getLimitedRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_7, null);
	    }

    |		lv_op_2_8=	'>=' 
    {
        newLeafNode(lv_op_2_8, grammarAccess.getLimitedRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_8, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedRelationalExpressionAccess().getRightLimitedAdditiveExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleLimitedAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"LimitedAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLimitedAdditiveExpression
entryRuleLimitedAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedAdditiveExpressionRule()); }
	 iv_ruleLimitedAdditiveExpression=ruleLimitedAdditiveExpression 
	 { $current=$iv_ruleLimitedAdditiveExpression.current; } 
	 EOF 
;

// Rule LimitedAdditiveExpression
ruleLimitedAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedAdditiveExpressionAccess().getLimitedMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_LimitedMultiplicativeExpression_0=ruleLimitedMultiplicativeExpression
    { 
        $current = $this_LimitedMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLimitedAdditiveExpressionAccess().getBinaryOpExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'+' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLimitedAdditiveExpressionAccess().getOpPlusSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedAdditiveExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'-' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLimitedAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedAdditiveExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedAdditiveExpressionAccess().getRightLimitedMultiplicativeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleLimitedMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"LimitedMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLimitedMultiplicativeExpression
entryRuleLimitedMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedMultiplicativeExpressionRule()); }
	 iv_ruleLimitedMultiplicativeExpression=ruleLimitedMultiplicativeExpression 
	 { $current=$iv_ruleLimitedMultiplicativeExpression.current; } 
	 EOF 
;

// Rule LimitedMultiplicativeExpression
ruleLimitedMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedMultiplicativeExpressionAccess().getLimitedUnaryOrPrimaryExpressionParserRuleCall_0()); 
    }
    this_LimitedUnaryOrPrimaryExpression_0=ruleLimitedUnaryOrPrimaryExpression
    { 
        $current = $this_LimitedUnaryOrPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLimitedMultiplicativeExpressionAccess().getBinaryOpExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'*' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpSolidusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'^' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpCircumflexAccentKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'%' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedMultiplicativeExpressionAccess().getRightLimitedUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleLimitedUnaryOrPrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"LimitedUnaryOrPrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLimitedUnaryOrPrimaryExpression
entryRuleLimitedUnaryOrPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedUnaryOrPrimaryExpressionRule()); }
	 iv_ruleLimitedUnaryOrPrimaryExpression=ruleLimitedUnaryOrPrimaryExpression 
	 { $current=$iv_ruleLimitedUnaryOrPrimaryExpression.current; } 
	 EOF 
;

// Rule LimitedUnaryOrPrimaryExpression
ruleLimitedUnaryOrPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getUnaryOpExpressionAction_0_0(),
            $current);
    }
)(
(
(
		lv_op_1_1=	'!' 
    {
        newLeafNode(lv_op_1_1, grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpExclamationMarkKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedUnaryOrPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_1, null);
	    }

    |		lv_op_1_2=	'-' 
    {
        newLeafNode(lv_op_1_2, grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpHyphenMinusKeyword_0_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedUnaryOrPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getExprLimitedPrimaryExpressionParserRuleCall_0_2_0()); 
	    }
		lv_expr_2_0=ruleLimitedPrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedUnaryOrPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"LimitedPrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getLimitedPrimaryExpressionParserRuleCall_1()); 
    }
    this_LimitedPrimaryExpression_3=ruleLimitedPrimaryExpression
    { 
        $current = $this_LimitedPrimaryExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLimitedPrimaryExpression
entryRuleLimitedPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitedPrimaryExpressionRule()); }
	 iv_ruleLimitedPrimaryExpression=ruleLimitedPrimaryExpression 
	 { $current=$iv_ruleLimitedPrimaryExpression.current; } 
	 EOF 
;

// Rule LimitedPrimaryExpression
ruleLimitedPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLimitedPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedPrimaryExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLimitedPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
    }
)
    |((
(
		lv_func_3_0=RULE_ID
		{
			newLeafNode(lv_func_3_0, grammarAccess.getLimitedPrimaryExpressionAccess().getFuncIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"func",
        		lv_func_3_0, 
        		"ID");
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLimitedPrimaryExpressionAccess().getLeftParenthesisKeyword_1_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_0_0()); 
	    }
		lv_args_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLimitedPrimaryExpressionAccess().getCommaKeyword_1_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_1_1_0()); 
	    }
		lv_args_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLimitedPrimaryExpressionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedPrimaryExpressionAccess().getIvalueIntervalValueParserRuleCall_2_0()); 
	    }
		lv_ivalue_9_0=ruleIntervalValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"ivalue",
        		lv_ivalue_9_0, 
        		"IntervalValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedPrimaryExpressionAccess().getValueExplicitValueParserRuleCall_3_0()); 
	    }
		lv_value_10_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_10_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLimitedPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_4_0()); 
	    }
		lv_valueTable_11_0=ruleValueTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLimitedPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"valueTable",
        		lv_valueTable_11_0, 
        		"ValueTable");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleGraphPattern
entryRuleGraphPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGraphPatternRule()); }
	 iv_ruleGraphPattern=ruleGraphPattern 
	 { $current=$iv_ruleGraphPattern.current; } 
	 EOF 
;

// Rule GraphPattern
ruleGraphPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getPropOfSubjParserRuleCall_0()); 
    }
    this_PropOfSubj_0=rulePropOfSubj
    { 
        $current = $this_PropOfSubj_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getSubjPropParserRuleCall_1()); 
    }
    this_SubjProp_1=ruleSubjProp
    { 
        $current = $this_SubjProp_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getInstAttrSPVParserRuleCall_2()); 
    }
    this_InstAttrSPV_2=ruleInstAttrSPV
    { 
        $current = $this_InstAttrSPV_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getInstAttrPSVParserRuleCall_3()); 
    }
    this_InstAttrPSV_3=ruleInstAttrPSV
    { 
        $current = $this_InstAttrPSV_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getMergedTriplesParserRuleCall_4()); 
    }
    this_MergedTriples_4=ruleMergedTriples
    { 
        $current = $this_MergedTriples_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getSubTypeOfParserRuleCall_5()); 
    }
    this_SubTypeOf_5=ruleSubTypeOf
    { 
        $current = $this_SubTypeOf_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGraphPatternAccess().getExistentialNegationParserRuleCall_6()); 
    }
    this_ExistentialNegation_6=ruleExistentialNegation
    { 
        $current = $this_ExistentialNegation_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropOfSubj
entryRulePropOfSubj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropOfSubjRule()); }
	 iv_rulePropOfSubj=rulePropOfSubj 
	 { $current=$iv_rulePropOfSubj.current; } 
	 EOF 
;

// Rule PropOfSubj
rulePropOfSubj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropOfSubjAccess().getOfPhrOfPhraseParserRuleCall_0_0()); 
	    }
		lv_ofPhr_0_0=ruleOfPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropOfSubjRule());
	        }
       		add(
       			$current, 
       			"ofPhr",
        		lv_ofPhr_0_0, 
        		"OfPhrase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropOfSubjAccess().getSubjResourceByNameParserRuleCall_1_0()); 
	    }
		lv_subj_1_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropOfSubjRule());
	        }
       		set(
       			$current, 
       			"subj",
        		lv_subj_1_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubjProp
entryRuleSubjProp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubjPropRule()); }
	 iv_ruleSubjProp=ruleSubjProp 
	 { $current=$iv_ruleSubjProp.current; } 
	 EOF 
;

// Rule SubjProp
ruleSubjProp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubjPropAccess().getSubjResourceByNameParserRuleCall_0_0()); 
	    }
		lv_subj_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubjPropRule());
	        }
       		set(
       			$current, 
       			"subj",
        		lv_subj_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubjPropAccess().getHwPhrWithPhraseParserRuleCall_1_0()); 
	    }
		lv_hwPhr_1_0=ruleWithPhrase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubjPropRule());
	        }
       		add(
       			$current, 
       			"hwPhr",
        		lv_hwPhr_1_0, 
        		"WithPhrase");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleInstAttrSPV
entryRuleInstAttrSPV returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstAttrSPVRule()); }
	 iv_ruleInstAttrSPV=ruleInstAttrSPV 
	 { $current=$iv_ruleInstAttrSPV.current; } 
	 EOF 
;

// Rule InstAttrSPV
ruleInstAttrSPV returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrSPVAccess().getSubjResourceByNameParserRuleCall_0_0()); 
	    }
		lv_subj_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrSPVRule());
	        }
       		set(
       			$current, 
       			"subj",
        		lv_subj_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='has' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstAttrSPVAccess().getHasKeyword_1_0());
    }

    |	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstAttrSPVAccess().getWithKeyword_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrSPVAccess().getPropsResourceByNameParserRuleCall_2_0()); 
	    }
		lv_props_3_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrSPVRule());
	        }
       		add(
       			$current, 
       			"props",
        		lv_props_3_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrSPVAccess().getValsAdditiveExpressionParserRuleCall_3_0()); 
	    }
		lv_vals_4_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrSPVRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_4_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstAttrSPVAccess().getCommaKeyword_4_0());
    }
)?(	otherlv_6='has' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstAttrSPVAccess().getHasKeyword_4_1_0());
    }

    |	otherlv_7='with' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstAttrSPVAccess().getWithKeyword_4_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrSPVAccess().getPropsResourceByNameParserRuleCall_4_2_0()); 
	    }
		lv_props_8_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrSPVRule());
	        }
       		add(
       			$current, 
       			"props",
        		lv_props_8_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrSPVAccess().getValsAdditiveExpressionParserRuleCall_4_3_0()); 
	    }
		lv_vals_9_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrSPVRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_9_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInstAttrPSV
entryRuleInstAttrPSV returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstAttrPSVRule()); }
	 iv_ruleInstAttrPSV=ruleInstAttrPSV 
	 { $current=$iv_ruleInstAttrPSV.current; } 
	 EOF 
;

// Rule InstAttrPSV
ruleInstAttrPSV returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrPSVAccess().getPropPropOfSubjParserRuleCall_0_0()); 
	    }
		lv_prop_0_0=rulePropOfSubj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrPSVRule());
	        }
       		set(
       			$current, 
       			"prop",
        		lv_prop_0_0, 
        		"PropOfSubj");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstAttrPSVAccess().getIsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAttrPSVAccess().getValExplicitValueParserRuleCall_2_0()); 
	    }
		lv_val_2_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstAttrPSVRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_2_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubTypeOf
entryRuleSubTypeOf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubTypeOfRule()); }
	 iv_ruleSubTypeOf=ruleSubTypeOf 
	 { $current=$iv_ruleSubTypeOf.current; } 
	 EOF 
;

// Rule SubTypeOf
ruleSubTypeOf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubTypeOfAccess().getSubclassResourceByNameParserRuleCall_0_0()); 
	    }
		lv_subclass_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubTypeOfRule());
	        }
       		set(
       			$current, 
       			"subclass",
        		lv_subclass_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubTypeOfAccess().getIsKeyword_1());
    }
	otherlv_2='a' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubTypeOfAccess().getAKeyword_2());
    }
	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubTypeOfAccess().getTypeKeyword_3());
    }
	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubTypeOfAccess().getOfKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubTypeOfAccess().getSuperclassResourceByNameParserRuleCall_5_0()); 
	    }
		lv_superclass_5_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubTypeOfRule());
	        }
       		set(
       			$current, 
       			"superclass",
        		lv_superclass_5_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExistentialNegation
entryRuleExistentialNegation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistentialNegationRule()); }
	 iv_ruleExistentialNegation=ruleExistentialNegation 
	 { $current=$iv_ruleExistentialNegation.current; } 
	 EOF 
;

// Rule ExistentialNegation
ruleExistentialNegation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='there' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExistentialNegationAccess().getThereKeyword_0());
    }
	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExistentialNegationAccess().getIsKeyword_1());
    }
	otherlv_2='no' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExistentialNegationAccess().getNoKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistentialNegationAccess().getVarListVariableListParserRuleCall_3_0()); 
	    }
		lv_varList_3_0=ruleVariableList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistentialNegationRule());
	        }
       		set(
       			$current, 
       			"varList",
        		lv_varList_3_0, 
        		"VariableList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='such' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExistentialNegationAccess().getSuchKeyword_4());
    }
	otherlv_5='that' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExistentialNegationAccess().getThatKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistentialNegationAccess().getQuantifiedPrimaryExpressionParserRuleCall_6_0()); 
	    }
		lv_quantified_6_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistentialNegationRule());
	        }
       		set(
       			$current, 
       			"quantified",
        		lv_quantified_6_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntervalValue
entryRuleIntervalValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntervalValueRule()); }
	 iv_ruleIntervalValue=ruleIntervalValue 
	 { $current=$iv_ruleIntervalValue.current; } 
	 EOF 
;

// Rule IntervalValue
ruleIntervalValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_op_0_1=	'==' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getIntervalValueAccess().getOpEqualsSignEqualsSignKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntervalValueRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_1, null);
	    }

    |		lv_op_0_2=	'<' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getIntervalValueAccess().getOpLessThanSignKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntervalValueRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_2, null);
	    }

    |		lv_op_0_3=	'<=' 
    {
        newLeafNode(lv_op_0_3, grammarAccess.getIntervalValueAccess().getOpLessThanSignEqualsSignKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntervalValueRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_3, null);
	    }

    |		lv_op_0_4=	'>' 
    {
        newLeafNode(lv_op_0_4, grammarAccess.getIntervalValueAccess().getOpGreaterThanSignKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntervalValueRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_4, null);
	    }

    |		lv_op_0_5=	'>=' 
    {
        newLeafNode(lv_op_0_5, grammarAccess.getIntervalValueAccess().getOpGreaterThanSignEqualsSignKeyword_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntervalValueRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_5, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalValueAccess().getExprAdditiveExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalValueRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExplicitValue
entryRuleExplicitValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExplicitValueRule()); }
	 iv_ruleExplicitValue=ruleExplicitValue 
	 { $current=$iv_ruleExplicitValue.current; } 
	 EOF 
;

// Rule ExplicitValue
ruleExplicitValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitValueAccess().getInstNameResourceByNameParserRuleCall_0_0()); 
	    }
		lv_instName_0_0=ruleResourceByName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitValueRule());
	        }
       		set(
       			$current, 
       			"instName",
        		lv_instName_0_0, 
        		"ResourceByName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitValueAccess().getLitValueLiteralValueParserRuleCall_1_0()); 
	    }
		lv_litValue_1_0=ruleLiteralValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitValueRule());
	        }
       		set(
       			$current, 
       			"litValue",
        		lv_litValue_1_0, 
        		"LiteralValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_valueList_2_0=	'[' 
    {
        newLeafNode(lv_valueList_2_0, grammarAccess.getExplicitValueAccess().getValueListLeftSquareBracketKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExplicitValueRule());
	        }
       		setWithLastConsumed($current, "valueList", lv_valueList_2_0, "[");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitValueAccess().getRowValueRowParserRuleCall_2_1_0()); 
	    }
		lv_row_3_0=ruleValueRow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitValueRule());
	        }
       		set(
       			$current, 
       			"row",
        		lv_row_3_0, 
        		"ValueRow");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExplicitValueAccess().getRightSquareBracketKeyword_2_2());
    }
)
    |(
(
		lv_term_5_0=	'PI' 
    {
        newLeafNode(lv_term_5_0, grammarAccess.getExplicitValueAccess().getTermPIKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExplicitValueRule());
	        }
       		setWithLastConsumed($current, "term", lv_term_5_0, "PI");
	    }

)
)
    |(
(
		lv_term_6_0=	'known' 
    {
        newLeafNode(lv_term_6_0, grammarAccess.getExplicitValueAccess().getTermKnownKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExplicitValueRule());
	        }
       		setWithLastConsumed($current, "term", lv_term_6_0, "known");
	    }

)
))
;





// Entry rule entryRuleValueTable
entryRuleValueTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueTableRule()); }
	 iv_ruleValueTable=ruleValueTable 
	 { $current=$iv_ruleValueTable.current; } 
	 EOF 
;

// Rule ValueTable
ruleValueTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_2_0()); 
	    }
		lv_rows_2_0=ruleValueRow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTableRule());
	        }
       		add(
       			$current, 
       			"rows",
        		lv_rows_2_0, 
        		"ValueRow");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_3());
    }
((	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValueTableAccess().getCommaKeyword_4_0());
    }
)?	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_4_2_0()); 
	    }
		lv_rows_6_0=ruleValueRow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTableRule());
	        }
       		add(
       			$current, 
       			"rows",
        		lv_rows_6_0, 
        		"ValueRow");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_4_3());
    }
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	 iv_ruleLiteralValue=ruleLiteralValue 
	 { $current=$iv_ruleLiteralValue.current; } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralValueAccess().getLiteralNumberNUMBERParserRuleCall_0_0()); 
	    }
		lv_literalNumber_0_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralValueRule());
	        }
       		set(
       			$current, 
       			"literalNumber",
        		lv_literalNumber_0_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_literalString_1_0=RULE_STRING
		{
			newLeafNode(lv_literalString_1_0, grammarAccess.getLiteralValueAccess().getLiteralStringSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"literalString",
        		lv_literalString_1_0, 
        		"STRING");
	    }

)
)
    |(
(
(
		lv_literalBoolean_2_1=	'true' 
    {
        newLeafNode(lv_literalBoolean_2_1, grammarAccess.getLiteralValueAccess().getLiteralBooleanTrueKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed($current, "literalBoolean", lv_literalBoolean_2_1, null);
	    }

    |		lv_literalBoolean_2_2=	'false' 
    {
        newLeafNode(lv_literalBoolean_2_2, grammarAccess.getLiteralValueAccess().getLiteralBooleanFalseKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed($current, "literalBoolean", lv_literalBoolean_2_2, null);
	    }

)

)
))
;





// Entry rule entryRuleValueRow
entryRuleValueRow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRowRule()); }
	 iv_ruleValueRow=ruleValueRow 
	 { $current=$iv_ruleValueRow.current; } 
	 EOF 
;

// Rule ValueRow
ruleValueRow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesExplicitValueParserRuleCall_0_0()); 
	    }
		lv_explicitValues_0_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRowRule());
	        }
       		add(
       			$current, 
       			"explicitValues",
        		lv_explicitValues_0_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueRowAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesExplicitValueParserRuleCall_1_1_0()); 
	    }
		lv_explicitValues_2_0=ruleExplicitValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRowRule());
	        }
       		add(
       			$current, 
       			"explicitValues",
        		lv_explicitValues_2_0, 
        		"ExplicitValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNAME
entryRuleNAME returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNAMERule()); } 
	 iv_ruleNAME=ruleNAME 
	 { $current=$iv_ruleNAME.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NAME
ruleNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNAMEAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMEAccess().getColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getNAMEAccess().getIDTerminalRuleCall_1_1()); 
    }
)?(((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMEAccess().getHyphenMinusKeyword_2_0_0_0()); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMEAccess().getFullStopKeyword_2_0_0_1()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMEAccess().getTildeKeyword_2_0_0_2()); 
    }
)(
    { 
        newCompositeNode(grammarAccess.getNAMEAccess().getNAME_FRAGMENTParserRuleCall_2_0_1()); 
    }
    this_NAME_FRAGMENT_6=ruleNAME_FRAGMENT    {
		$current.merge(this_NAME_FRAGMENT_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    |((
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMEAccess().getPercentSignKeyword_2_1_0()); 
    }
)?
    { 
        newCompositeNode(grammarAccess.getNAMEAccess().getNAME_FRAGMENTParserRuleCall_2_1_1()); 
    }
    this_NAME_FRAGMENT_8=ruleNAME_FRAGMENT    {
		$current.merge(this_NAME_FRAGMENT_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))*)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNAME_FRAGMENT
entryRuleNAME_FRAGMENT returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNAME_FRAGMENTRule()); } 
	 iv_ruleNAME_FRAGMENT=ruleNAME_FRAGMENT 
	 { $current=$iv_ruleNAME_FRAGMENT.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NAME_FRAGMENT
ruleNAME_FRAGMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNAME_FRAGMENTAccess().getID_OR_KEYWORDParserRuleCall_0()); 
    }
    this_ID_OR_KEYWORD_0=ruleID_OR_KEYWORD    {
		$current.merge(this_ID_OR_KEYWORD_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |(    this_UNSIGNED_NUMBER_1=RULE_UNSIGNED_NUMBER    {
		$current.merge(this_UNSIGNED_NUMBER_1);
    }

    { 
    newLeafNode(this_UNSIGNED_NUMBER_1, grammarAccess.getNAME_FRAGMENTAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getNAME_FRAGMENTAccess().getID_OR_KEYWORDParserRuleCall_1_1()); 
    }
    this_ID_OR_KEYWORD_2=ruleID_OR_KEYWORD    {
		$current.merge(this_ID_OR_KEYWORD_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?))
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleID_OR_KEYWORD
entryRuleID_OR_KEYWORD returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getID_OR_KEYWORDRule()); } 
	 iv_ruleID_OR_KEYWORD=ruleID_OR_KEYWORD 
	 { $current=$iv_ruleID_OR_KEYWORD.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ID_OR_KEYWORD
ruleID_OR_KEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	kw='a' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getID_OR_KEYWORDAccess().getAKeyword_0()); 
    }

    |
	kw='A' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getID_OR_KEYWORDAccess().getAKeyword_1()); 
    }

    |
	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getID_OR_KEYWORDAccess().getIsKeyword_2()); 
    }

    |
	kw='are' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getID_OR_KEYWORDAccess().getAreKeyword_3()); 
    }

    |    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getID_OR_KEYWORDAccess().getIDTerminalRuleCall_4()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); } 
	 iv_ruleNUMBER=ruleNUMBER 
	 { $current=$iv_ruleNUMBER.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_UNSIGNED_NUMBER_1=RULE_UNSIGNED_NUMBER    {
		$current.merge(this_UNSIGNED_NUMBER_1);
    }

    { 
    newLeafNode(this_UNSIGNED_NUMBER_1, grammarAccess.getNUMBERAccess().getUNSIGNED_NUMBERTerminalRuleCall_1()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Rule DataType
ruleDataType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='string' 
	{
        $current = grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='boolean' 
	{
        $current = grammarAccess.getDataTypeAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getBooleanEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='decimal' 
	{
        $current = grammarAccess.getDataTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getDecimalEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='int' 
	{
        $current = grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='long' 
	{
        $current = grammarAccess.getDataTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getLongEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='float' 
	{
        $current = grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='double' 
	{
        $current = grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='duration' 
	{
        $current = grammarAccess.getDataTypeAccess().getDurationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getDataTypeAccess().getDurationEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='dateTime' 
	{
        $current = grammarAccess.getDataTypeAccess().getDateTimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getDataTypeAccess().getDateTimeEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='time' 
	{
        $current = grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='date' 
	{
        $current = grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='gYearMonth' 
	{
        $current = grammarAccess.getDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='gYear' 
	{
        $current = grammarAccess.getDataTypeAccess().getGYearEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getDataTypeAccess().getGYearEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='gMonthDay' 
	{
        $current = grammarAccess.getDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='gDay' 
	{
        $current = grammarAccess.getDataTypeAccess().getGDayEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getDataTypeAccess().getGDayEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='gMonth' 
	{
        $current = grammarAccess.getDataTypeAccess().getGMonthEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getDataTypeAccess().getGMonthEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='hexBinary' 
	{
        $current = grammarAccess.getDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='base64Binary' 
	{
        $current = grammarAccess.getDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='anyURI' 
	{
        $current = grammarAccess.getDataTypeAccess().getAnyURIEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getDataTypeAccess().getAnyURIEnumLiteralDeclaration_18()); 
    }
)
    |(	enumLiteral_19='data' 
	{
        $current = grammarAccess.getDataTypeAccess().getDataEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_19, grammarAccess.getDataTypeAccess().getDataEnumLiteralDeclaration_19()); 
    }
));



RULE_UNSIGNED_NUMBER : (('0'..'9')+|('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('e'|'E') ('+'|'-')? ('0'..'9')+);

RULE_INT : 'this has been disabled';

RULE_EOS : '.' (' '|'\t'|'\r'|'\n'|EOF);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


