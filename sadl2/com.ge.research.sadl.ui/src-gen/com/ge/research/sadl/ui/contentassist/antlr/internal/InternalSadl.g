/*
* generated by Xtext
*/
grammar InternalSadl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	 memoize=true;
	
}

@lexer::header {
package com.ge.research.sadl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ge.research.sadl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.ge.research.sadl.services.SadlGrammarAccess;

}

@parser::members {
 
 	private SadlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SadlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelName
entryRuleModelName 
:
{ before(grammarAccess.getModelNameRule()); }
	 ruleModelName
{ after(grammarAccess.getModelNameRule()); } 
	 EOF 
;

// Rule ModelName
ruleModelName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelNameAccess().getGroup()); }
(rule__ModelName__Group__0)
{ after(grammarAccess.getModelNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelElement
entryRuleModelElement 
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelElementAccess().getAlternatives()); }
(rule__ModelElement__Alternatives)
{ after(grammarAccess.getModelElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceName
entryRuleResourceName 
:
{ before(grammarAccess.getResourceNameRule()); }
	 ruleResourceName
{ after(grammarAccess.getResourceNameRule()); } 
	 EOF 
;

// Rule ResourceName
ruleResourceName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceNameAccess().getGroup()); }
(rule__ResourceName__Group__0)
{ after(grammarAccess.getResourceNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContentList
entryRuleContentList 
:
{ before(grammarAccess.getContentListRule()); }
	 ruleContentList
{ after(grammarAccess.getContentListRule()); } 
	 EOF 
;

// Rule ContentList
ruleContentList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentListAccess().getGroup()); }
(rule__ContentList__Group__0)
{ after(grammarAccess.getContentListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceList
entryRuleResourceList 
:
{ before(grammarAccess.getResourceListRule()); }
	 ruleResourceList
{ after(grammarAccess.getResourceListRule()); } 
	 EOF 
;

// Rule ResourceList
ruleResourceList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceListAccess().getGroup()); }
(rule__ResourceList__Group__0)
{ after(grammarAccess.getResourceListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralList
entryRuleLiteralList 
:
{ before(grammarAccess.getLiteralListRule()); }
	 ruleLiteralList
{ after(grammarAccess.getLiteralListRule()); } 
	 EOF 
;

// Rule LiteralList
ruleLiteralList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralListAccess().getGroup()); }
(rule__LiteralList__Group__0)
{ after(grammarAccess.getLiteralListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceByName
entryRuleResourceByName 
:
{ before(grammarAccess.getResourceByNameRule()); }
	 ruleResourceByName
{ after(grammarAccess.getResourceByNameRule()); } 
	 EOF 
;

// Rule ResourceByName
ruleResourceByName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceByNameAccess().getNameAssignment()); }
(rule__ResourceByName__NameAssignment)
{ after(grammarAccess.getResourceByNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistingResourceList
entryRuleExistingResourceList 
:
{ before(grammarAccess.getExistingResourceListRule()); }
	 ruleExistingResourceList
{ after(grammarAccess.getExistingResourceListRule()); } 
	 EOF 
;

// Rule ExistingResourceList
ruleExistingResourceList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistingResourceListAccess().getGroup()); }
(rule__ExistingResourceList__Group__0)
{ after(grammarAccess.getExistingResourceListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceIdentifier
entryRuleResourceIdentifier 
:
{ before(grammarAccess.getResourceIdentifierRule()); }
	 ruleResourceIdentifier
{ after(grammarAccess.getResourceIdentifierRule()); } 
	 EOF 
;

// Rule ResourceIdentifier
ruleResourceIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAlternatives()); }
(rule__ResourceIdentifier__Alternatives)
{ after(grammarAccess.getResourceIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceBySetOp
entryRuleResourceBySetOp 
:
{ before(grammarAccess.getResourceBySetOpRule()); }
	 ruleResourceBySetOp
{ after(grammarAccess.getResourceBySetOpRule()); } 
	 EOF 
;

// Rule ResourceBySetOp
ruleResourceBySetOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceBySetOpAccess().getAlternatives()); }
(rule__ResourceBySetOp__Alternatives)
{ after(grammarAccess.getResourceBySetOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceByRestriction
entryRuleResourceByRestriction 
:
{ before(grammarAccess.getResourceByRestrictionRule()); }
	 ruleResourceByRestriction
{ after(grammarAccess.getResourceByRestrictionRule()); } 
	 EOF 
;

// Rule ResourceByRestriction
ruleResourceByRestriction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getGroup()); }
(rule__ResourceByRestriction__Group__0)
{ after(grammarAccess.getResourceByRestrictionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnionResource
entryRuleUnionResource 
:
{ before(grammarAccess.getUnionResourceRule()); }
	 ruleUnionResource
{ after(grammarAccess.getUnionResourceRule()); } 
	 EOF 
;

// Rule UnionResource
ruleUnionResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnionResourceAccess().getGroup()); }
(rule__UnionResource__Group__0)
{ after(grammarAccess.getUnionResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntersectionResource
entryRuleIntersectionResource 
:
{ before(grammarAccess.getIntersectionResourceRule()); }
	 ruleIntersectionResource
{ after(grammarAccess.getIntersectionResourceRule()); } 
	 EOF 
;

// Rule IntersectionResource
ruleIntersectionResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntersectionResourceAccess().getGroup()); }
(rule__IntersectionResource__Group__0)
{ after(grammarAccess.getIntersectionResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getAlternatives()); }
(rule__ClassDeclaration__Alternatives)
{ after(grammarAccess.getClassDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumeratedInstances
entryRuleEnumeratedInstances 
:
{ before(grammarAccess.getEnumeratedInstancesRule()); }
	 ruleEnumeratedInstances
{ after(grammarAccess.getEnumeratedInstancesRule()); } 
	 EOF 
;

// Rule EnumeratedInstances
ruleEnumeratedInstances
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getGroup()); }
(rule__EnumeratedInstances__Group__0)
{ after(grammarAccess.getEnumeratedInstancesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddlClassInfo
entryRuleAddlClassInfo 
:
{ before(grammarAccess.getAddlClassInfoRule()); }
	 ruleAddlClassInfo
{ after(grammarAccess.getAddlClassInfoRule()); } 
	 EOF 
;

// Rule AddlClassInfo
ruleAddlClassInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddlClassInfoAccess().getAlternatives()); }
(rule__AddlClassInfo__Alternatives)
{ after(grammarAccess.getAddlClassInfoAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeAccess().getGroup()); }
(rule__Range__Group__0)
{ after(grammarAccess.getRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeType
entryRuleRangeType 
:
{ before(grammarAccess.getRangeTypeRule()); }
	 ruleRangeType
{ after(grammarAccess.getRangeTypeRule()); } 
	 EOF 
;

// Rule RangeType
ruleRangeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeTypeAccess().getAlternatives()); }
(rule__RangeType__Alternatives)
{ after(grammarAccess.getRangeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUserDefinedDataType
entryRuleUserDefinedDataType 
:
{ before(grammarAccess.getUserDefinedDataTypeRule()); }
	 ruleUserDefinedDataType
{ after(grammarAccess.getUserDefinedDataTypeRule()); } 
	 EOF 
;

// Rule UserDefinedDataType
ruleUserDefinedDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getGroup()); }
(rule__UserDefinedDataType__Group__0)
{ after(grammarAccess.getUserDefinedDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeRestriction
entryRuleDataTypeRestriction 
:
{ before(grammarAccess.getDataTypeRestrictionRule()); }
	 ruleDataTypeRestriction
{ after(grammarAccess.getDataTypeRestrictionRule()); } 
	 EOF 
;

// Rule DataTypeRestriction
ruleDataTypeRestriction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getAlternatives()); }
(rule__DataTypeRestriction__Alternatives)
{ after(grammarAccess.getDataTypeRestrictionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacets
entryRuleFacets 
:
{ before(grammarAccess.getFacetsRule()); }
	 ruleFacets
{ after(grammarAccess.getFacetsRule()); } 
	 EOF 
;

// Rule Facets
ruleFacets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetsAccess().getAlternatives()); }
(rule__Facets__Alternatives)
{ after(grammarAccess.getFacetsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnArticle
entryRuleAnArticle 
:
{ before(grammarAccess.getAnArticleRule()); }
	 ruleAnArticle
{ after(grammarAccess.getAnArticleRule()); } 
	 EOF 
;

// Rule AnArticle
ruleAnArticle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnArticleAccess().getAlternatives()); }
(rule__AnArticle__Alternatives)
{ after(grammarAccess.getAnArticleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndefiniteArticle
entryRuleIndefiniteArticle 
:
{ before(grammarAccess.getIndefiniteArticleRule()); }
	 ruleIndefiniteArticle
{ after(grammarAccess.getIndefiniteArticleRule()); } 
	 EOF 
;

// Rule IndefiniteArticle
ruleIndefiniteArticle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndefiniteArticleAccess().getAlternatives()); }
(rule__IndefiniteArticle__Alternatives)
{ after(grammarAccess.getIndefiniteArticleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefiniteArticle
entryRuleDefiniteArticle 
:
{ before(grammarAccess.getDefiniteArticleRule()); }
	 ruleDefiniteArticle
{ after(grammarAccess.getDefiniteArticleRule()); } 
	 EOF 
;

// Rule DefiniteArticle
ruleDefiniteArticle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefiniteArticleAccess().getAlternatives()); }
(rule__DefiniteArticle__Alternatives)
{ after(grammarAccess.getDefiniteArticleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquivalentConcepts
entryRuleEquivalentConcepts 
:
{ before(grammarAccess.getEquivalentConceptsRule()); }
	 ruleEquivalentConcepts
{ after(grammarAccess.getEquivalentConceptsRule()); } 
	 EOF 
;

// Rule EquivalentConcepts
ruleEquivalentConcepts
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getGroup()); }
(rule__EquivalentConcepts__Group__0)
{ after(grammarAccess.getEquivalentConceptsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDisjointClasses
entryRuleDisjointClasses 
:
{ before(grammarAccess.getDisjointClassesRule()); }
	 ruleDisjointClasses
{ after(grammarAccess.getDisjointClassesRule()); } 
	 EOF 
;

// Rule DisjointClasses
ruleDisjointClasses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDisjointClassesAccess().getAlternatives()); }
(rule__DisjointClasses__Alternatives)
{ after(grammarAccess.getDisjointClassesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplementOfClass
entryRuleComplementOfClass 
:
{ before(grammarAccess.getComplementOfClassRule()); }
	 ruleComplementOfClass
{ after(grammarAccess.getComplementOfClassRule()); } 
	 EOF 
;

// Rule ComplementOfClass
ruleComplementOfClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplementOfClassAccess().getGroup()); }
(rule__ComplementOfClass__Group__0)
{ after(grammarAccess.getComplementOfClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAllValuesFrom
entryRuleAllValuesFrom 
:
{ before(grammarAccess.getAllValuesFromRule()); }
	 ruleAllValuesFrom
{ after(grammarAccess.getAllValuesFromRule()); } 
	 EOF 
;

// Rule AllValuesFrom
ruleAllValuesFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllValuesFromAccess().getAlternatives()); }
(rule__AllValuesFrom__Alternatives)
{ after(grammarAccess.getAllValuesFromAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSomeValuesFrom
entryRuleSomeValuesFrom 
:
{ before(grammarAccess.getSomeValuesFromRule()); }
	 ruleSomeValuesFrom
{ after(grammarAccess.getSomeValuesFromRule()); } 
	 EOF 
;

// Rule SomeValuesFrom
ruleSomeValuesFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSomeValuesFromAccess().getAlternatives()); }
(rule__SomeValuesFrom__Alternatives)
{ after(grammarAccess.getSomeValuesFromAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHasValue
entryRuleHasValue 
:
{ before(grammarAccess.getHasValueRule()); }
	 ruleHasValue
{ after(grammarAccess.getHasValueRule()); } 
	 EOF 
;

// Rule HasValue
ruleHasValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHasValueAccess().getAlternatives()); }
(rule__HasValue__Alternatives)
{ after(grammarAccess.getHasValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinality
entryRuleCardinality 
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityAccess().getAlternatives()); }
(rule__Cardinality__Alternatives)
{ after(grammarAccess.getCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinCardinality
entryRuleMinCardinality 
:
{ before(grammarAccess.getMinCardinalityRule()); }
	 ruleMinCardinality
{ after(grammarAccess.getMinCardinalityRule()); } 
	 EOF 
;

// Rule MinCardinality
ruleMinCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinCardinalityAccess().getAlternatives()); }
(rule__MinCardinality__Alternatives)
{ after(grammarAccess.getMinCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxCardinality
entryRuleMaxCardinality 
:
{ before(grammarAccess.getMaxCardinalityRule()); }
	 ruleMaxCardinality
{ after(grammarAccess.getMaxCardinalityRule()); } 
	 EOF 
;

// Rule MaxCardinality
ruleMaxCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxCardinalityAccess().getAlternatives()); }
(rule__MaxCardinality__Alternatives)
{ after(grammarAccess.getMaxCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyOfClass
entryRulePropertyOfClass 
:
{ before(grammarAccess.getPropertyOfClassRule()); }
	 rulePropertyOfClass
{ after(grammarAccess.getPropertyOfClassRule()); } 
	 EOF 
;

// Rule PropertyOfClass
rulePropertyOfClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyOfClassAccess().getGroup()); }
(rule__PropertyOfClass__Group__0)
{ after(grammarAccess.getPropertyOfClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAllValuesCondition
entryRuleAllValuesCondition 
:
{ before(grammarAccess.getAllValuesConditionRule()); }
	 ruleAllValuesCondition
{ after(grammarAccess.getAllValuesConditionRule()); } 
	 EOF 
;

// Rule AllValuesCondition
ruleAllValuesCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllValuesConditionAccess().getGroup()); }
(rule__AllValuesCondition__Group__0)
{ after(grammarAccess.getAllValuesConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumeratedAllValuesFrom
entryRuleEnumeratedAllValuesFrom 
:
{ before(grammarAccess.getEnumeratedAllValuesFromRule()); }
	 ruleEnumeratedAllValuesFrom
{ after(grammarAccess.getEnumeratedAllValuesFromRule()); } 
	 EOF 
;

// Rule EnumeratedAllValuesFrom
ruleEnumeratedAllValuesFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getGroup()); }
(rule__EnumeratedAllValuesFrom__Group__0)
{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumeratedAllAndSomeValuesFrom
entryRuleEnumeratedAllAndSomeValuesFrom 
:
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromRule()); }
	 ruleEnumeratedAllAndSomeValuesFrom
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromRule()); } 
	 EOF 
;

// Rule EnumeratedAllAndSomeValuesFrom
ruleEnumeratedAllAndSomeValuesFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getGroup()); }
(rule__EnumeratedAllAndSomeValuesFrom__Group__0)
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultValue
entryRuleDefaultValue 
:
{ before(grammarAccess.getDefaultValueRule()); }
	 ruleDefaultValue
{ after(grammarAccess.getDefaultValueRule()); } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultValueAccess().getGroup()); }
(rule__DefaultValue__Group__0)
{ after(grammarAccess.getDefaultValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSomeValuesCondition
entryRuleSomeValuesCondition 
:
{ before(grammarAccess.getSomeValuesConditionRule()); }
	 ruleSomeValuesCondition
{ after(grammarAccess.getSomeValuesConditionRule()); } 
	 EOF 
;

// Rule SomeValuesCondition
ruleSomeValuesCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getGroup()); }
(rule__SomeValuesCondition__Group__0)
{ after(grammarAccess.getSomeValuesConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHasValueCondition
entryRuleHasValueCondition 
:
{ before(grammarAccess.getHasValueConditionRule()); }
	 ruleHasValueCondition
{ after(grammarAccess.getHasValueConditionRule()); } 
	 EOF 
;

// Rule HasValueCondition
ruleHasValueCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHasValueConditionAccess().getGroup()); }
(rule__HasValueCondition__Group__0)
{ after(grammarAccess.getHasValueConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinCardCondition
entryRuleMinCardCondition 
:
{ before(grammarAccess.getMinCardConditionRule()); }
	 ruleMinCardCondition
{ after(grammarAccess.getMinCardConditionRule()); } 
	 EOF 
;

// Rule MinCardCondition
ruleMinCardCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinCardConditionAccess().getGroup()); }
(rule__MinCardCondition__Group__0)
{ after(grammarAccess.getMinCardConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxCardCondition
entryRuleMaxCardCondition 
:
{ before(grammarAccess.getMaxCardConditionRule()); }
	 ruleMaxCardCondition
{ after(grammarAccess.getMaxCardConditionRule()); } 
	 EOF 
;

// Rule MaxCardCondition
ruleMaxCardCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxCardConditionAccess().getGroup()); }
(rule__MaxCardCondition__Group__0)
{ after(grammarAccess.getMaxCardConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardCondition
entryRuleCardCondition 
:
{ before(grammarAccess.getCardConditionRule()); }
	 ruleCardCondition
{ after(grammarAccess.getCardConditionRule()); } 
	 EOF 
;

// Rule CardCondition
ruleCardCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardConditionAccess().getGroup()); }
(rule__CardCondition__Group__0)
{ after(grammarAccess.getCardConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNecessaryAndSufficient
entryRuleNecessaryAndSufficient 
:
{ before(grammarAccess.getNecessaryAndSufficientRule()); }
	 ruleNecessaryAndSufficient
{ after(grammarAccess.getNecessaryAndSufficientRule()); } 
	 EOF 
;

// Rule NecessaryAndSufficient
ruleNecessaryAndSufficient
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getGroup()); }
(rule__NecessaryAndSufficient__Group__0)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getAlternatives()); }
(rule__Condition__Alternatives)
{ after(grammarAccess.getConditionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration 
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAlternatives()); }
(rule__PropertyDeclaration__Alternatives)
{ after(grammarAccess.getPropertyDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditionalPropertyInfo
entryRuleAdditionalPropertyInfo 
:
{ before(grammarAccess.getAdditionalPropertyInfoRule()); }
	 ruleAdditionalPropertyInfo
{ after(grammarAccess.getAdditionalPropertyInfoRule()); } 
	 EOF 
;

// Rule AdditionalPropertyInfo
ruleAdditionalPropertyInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getAlternatives()); }
(rule__AdditionalPropertyInfo__Alternatives)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionalProperty
entryRuleFunctionalProperty 
:
{ before(grammarAccess.getFunctionalPropertyRule()); }
	 ruleFunctionalProperty
{ after(grammarAccess.getFunctionalPropertyRule()); } 
	 EOF 
;

// Rule FunctionalProperty
ruleFunctionalProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionalPropertyAccess().getGroup()); }
(rule__FunctionalProperty__Group__0)
{ after(grammarAccess.getFunctionalPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsFunctional
entryRuleIsFunctional 
:
{ before(grammarAccess.getIsFunctionalRule()); }
	 ruleIsFunctional
{ after(grammarAccess.getIsFunctionalRule()); } 
	 EOF 
;

// Rule IsFunctional
ruleIsFunctional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsFunctionalAccess().getGroup()); }
(rule__IsFunctional__Group__0)
{ after(grammarAccess.getIsFunctionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInverseFunctionalProperty
entryRuleInverseFunctionalProperty 
:
{ before(grammarAccess.getInverseFunctionalPropertyRule()); }
	 ruleInverseFunctionalProperty
{ after(grammarAccess.getInverseFunctionalPropertyRule()); } 
	 EOF 
;

// Rule InverseFunctionalProperty
ruleInverseFunctionalProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInverseFunctionalPropertyAccess().getGroup()); }
(rule__InverseFunctionalProperty__Group__0)
{ after(grammarAccess.getInverseFunctionalPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsInverseFunctional
entryRuleIsInverseFunctional 
:
{ before(grammarAccess.getIsInverseFunctionalRule()); }
	 ruleIsInverseFunctional
{ after(grammarAccess.getIsInverseFunctionalRule()); } 
	 EOF 
;

// Rule IsInverseFunctional
ruleIsInverseFunctional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsInverseFunctionalAccess().getGroup()); }
(rule__IsInverseFunctional__Group__0)
{ after(grammarAccess.getIsInverseFunctionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymmetricalProperty
entryRuleSymmetricalProperty 
:
{ before(grammarAccess.getSymmetricalPropertyRule()); }
	 ruleSymmetricalProperty
{ after(grammarAccess.getSymmetricalPropertyRule()); } 
	 EOF 
;

// Rule SymmetricalProperty
ruleSymmetricalProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymmetricalPropertyAccess().getGroup()); }
(rule__SymmetricalProperty__Group__0)
{ after(grammarAccess.getSymmetricalPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsSymmetrical
entryRuleIsSymmetrical 
:
{ before(grammarAccess.getIsSymmetricalRule()); }
	 ruleIsSymmetrical
{ after(grammarAccess.getIsSymmetricalRule()); } 
	 EOF 
;

// Rule IsSymmetrical
ruleIsSymmetrical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsSymmetricalAccess().getGroup()); }
(rule__IsSymmetrical__Group__0)
{ after(grammarAccess.getIsSymmetricalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitiveProperty
entryRuleTransitiveProperty 
:
{ before(grammarAccess.getTransitivePropertyRule()); }
	 ruleTransitiveProperty
{ after(grammarAccess.getTransitivePropertyRule()); } 
	 EOF 
;

// Rule TransitiveProperty
ruleTransitiveProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitivePropertyAccess().getGroup()); }
(rule__TransitiveProperty__Group__0)
{ after(grammarAccess.getTransitivePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsTransitive
entryRuleIsTransitive 
:
{ before(grammarAccess.getIsTransitiveRule()); }
	 ruleIsTransitive
{ after(grammarAccess.getIsTransitiveRule()); } 
	 EOF 
;

// Rule IsTransitive
ruleIsTransitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsTransitiveAccess().getGroup()); }
(rule__IsTransitive__Group__0)
{ after(grammarAccess.getIsTransitiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInverseProperty
entryRuleInverseProperty 
:
{ before(grammarAccess.getInversePropertyRule()); }
	 ruleInverseProperty
{ after(grammarAccess.getInversePropertyRule()); } 
	 EOF 
;

// Rule InverseProperty
ruleInverseProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInversePropertyAccess().getGroup()); }
(rule__InverseProperty__Group__0)
{ after(grammarAccess.getInversePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsInverseOf
entryRuleIsInverseOf 
:
{ before(grammarAccess.getIsInverseOfRule()); }
	 ruleIsInverseOf
{ after(grammarAccess.getIsInverseOfRule()); } 
	 EOF 
;

// Rule IsInverseOf
ruleIsInverseOf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsInverseOfAccess().getGroup()); }
(rule__IsInverseOf__Group__0)
{ after(grammarAccess.getIsInverseOfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedBNode
entryRuleTypedBNode 
:
{ before(grammarAccess.getTypedBNodeRule()); }
	 ruleTypedBNode
{ after(grammarAccess.getTypedBNodeRule()); } 
	 EOF 
;

// Rule TypedBNode
ruleTypedBNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedBNodeAccess().getAlternatives()); }
(rule__TypedBNode__Alternatives)
{ after(grammarAccess.getTypedBNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceDeclarationStatement
entryRuleInstanceDeclarationStatement 
:
{ before(grammarAccess.getInstanceDeclarationStatementRule()); }
	 ruleInstanceDeclarationStatement
{ after(grammarAccess.getInstanceDeclarationStatementRule()); } 
	 EOF 
;

// Rule InstanceDeclarationStatement
ruleInstanceDeclarationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceDeclarationStatementAccess().getGroup()); }
(rule__InstanceDeclarationStatement__Group__0)
{ after(grammarAccess.getInstanceDeclarationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceDeclaration
entryRuleInstanceDeclaration 
:
{ before(grammarAccess.getInstanceDeclarationRule()); }
	 ruleInstanceDeclaration
{ after(grammarAccess.getInstanceDeclarationRule()); } 
	 EOF 
;

// Rule InstanceDeclaration
ruleInstanceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getAlternatives()); }
(rule__InstanceDeclaration__Alternatives)
{ after(grammarAccess.getInstanceDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
(rule__TypeDeclaration__Group__0)
{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceDifferentFrom
entryRuleInstanceDifferentFrom 
:
{ before(grammarAccess.getInstanceDifferentFromRule()); }
	 ruleInstanceDifferentFrom
{ after(grammarAccess.getInstanceDifferentFromRule()); } 
	 EOF 
;

// Rule InstanceDifferentFrom
ruleInstanceDifferentFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getGroup()); }
(rule__InstanceDifferentFrom__Group__0)
{ after(grammarAccess.getInstanceDifferentFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstancesAllDifferent
entryRuleInstancesAllDifferent 
:
{ before(grammarAccess.getInstancesAllDifferentRule()); }
	 ruleInstancesAllDifferent
{ after(grammarAccess.getInstancesAllDifferentRule()); } 
	 EOF 
;

// Rule InstancesAllDifferent
ruleInstancesAllDifferent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getGroup()); }
(rule__InstancesAllDifferent__Group__0)
{ after(grammarAccess.getInstancesAllDifferentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistingInstanceAttribution
entryRuleExistingInstanceAttribution 
:
{ before(grammarAccess.getExistingInstanceAttributionRule()); }
	 ruleExistingInstanceAttribution
{ after(grammarAccess.getExistingInstanceAttributionRule()); } 
	 EOF 
;

// Rule ExistingInstanceAttribution
ruleExistingInstanceAttribution
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getAlternatives()); }
(rule__ExistingInstanceAttribution__Alternatives)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObject
entryRuleObject 
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAccess().getValAssignment()); }
(rule__Object__ValAssignment)
{ after(grammarAccess.getObjectAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropValPartialTriple
entryRulePropValPartialTriple 
:
{ before(grammarAccess.getPropValPartialTripleRule()); }
	 rulePropValPartialTriple
{ after(grammarAccess.getPropValPartialTripleRule()); } 
	 EOF 
;

// Rule PropValPartialTriple
rulePropValPartialTriple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getGroup()); }
(rule__PropValPartialTriple__Group__0)
{ after(grammarAccess.getPropValPartialTripleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOfPatternReturningValues
entryRuleOfPatternReturningValues 
:
{ before(grammarAccess.getOfPatternReturningValuesRule()); }
	 ruleOfPatternReturningValues
{ after(grammarAccess.getOfPatternReturningValuesRule()); } 
	 EOF 
;

// Rule OfPatternReturningValues
ruleOfPatternReturningValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getAlternatives()); }
(rule__OfPatternReturningValues__Alternatives)
{ after(grammarAccess.getOfPatternReturningValuesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWithChain
entryRuleWithChain 
:
{ before(grammarAccess.getWithChainRule()); }
	 ruleWithChain
{ after(grammarAccess.getWithChainRule()); } 
	 EOF 
;

// Rule WithChain
ruleWithChain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWithChainAccess().getAlternatives()); }
(rule__WithChain__Alternatives)
{ after(grammarAccess.getWithChainAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWithPhrase
entryRuleWithPhrase 
:
{ before(grammarAccess.getWithPhraseRule()); }
	 ruleWithPhrase
{ after(grammarAccess.getWithPhraseRule()); } 
	 EOF 
;

// Rule WithPhrase
ruleWithPhrase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWithPhraseAccess().getAlternatives()); }
(rule__WithPhrase__Alternatives)
{ after(grammarAccess.getWithPhraseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbeddedInstanceDeclaration
entryRuleEmbeddedInstanceDeclaration 
:
{ before(grammarAccess.getEmbeddedInstanceDeclarationRule()); }
	 ruleEmbeddedInstanceDeclaration
{ after(grammarAccess.getEmbeddedInstanceDeclarationRule()); } 
	 EOF 
;

// Rule EmbeddedInstanceDeclaration
ruleEmbeddedInstanceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbeddedInstanceDeclarationAccess().getGroup()); }
(rule__EmbeddedInstanceDeclaration__Group__0)
{ after(grammarAccess.getEmbeddedInstanceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMergedTriples
entryRuleMergedTriples 
:
{ before(grammarAccess.getMergedTriplesRule()); }
	 ruleMergedTriples
{ after(grammarAccess.getMergedTriplesRule()); } 
	 EOF 
;

// Rule MergedTriples
ruleMergedTriples
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMergedTriplesAccess().getGroup()); }
(rule__MergedTriples__Group__0)
{ after(grammarAccess.getMergedTriplesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOfPhrase
entryRuleOfPhrase 
:
{ before(grammarAccess.getOfPhraseRule()); }
	 ruleOfPhrase
{ after(grammarAccess.getOfPhraseRule()); } 
	 EOF 
;

// Rule OfPhrase
ruleOfPhrase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOfPhraseAccess().getGroup()); }
(rule__OfPhrase__Group__0)
{ after(grammarAccess.getOfPhraseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableList
entryRuleVariableList 
:
{ before(grammarAccess.getVariableListRule()); }
	 ruleVariableList
{ after(grammarAccess.getVariableListRule()); } 
	 EOF 
;

// Rule VariableList
ruleVariableList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableListAccess().getGroup()); }
(rule__VariableList__Group__0)
{ after(grammarAccess.getVariableListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuery
entryRuleQuery 
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryAccess().getGroup()); }
(rule__Query__Group__0)
{ after(grammarAccess.getQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTest
entryRuleTest 
:
{ before(grammarAccess.getTestRule()); }
	 ruleTest
{ after(grammarAccess.getTestRule()); } 
	 EOF 
;

// Rule Test
ruleTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestAccess().getGroup()); }
(rule__Test__Group__0)
{ after(grammarAccess.getTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getGroup()); }
(rule__Expr__Group__0)
{ after(grammarAccess.getExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDisplay
entryRuleDisplay 
:
{ before(grammarAccess.getDisplayRule()); }
	 ruleDisplay
{ after(grammarAccess.getDisplayRule()); } 
	 EOF 
;

// Rule Display
ruleDisplay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDisplayAccess().getGroup()); }
(rule__Display__Group__0)
{ after(grammarAccess.getDisplayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExplanation
entryRuleExplanation 
:
{ before(grammarAccess.getExplanationRule()); }
	 ruleExplanation
{ after(grammarAccess.getExplanationRule()); } 
	 EOF 
;

// Rule Explanation
ruleExplanation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplanationAccess().getGroup()); }
(rule__Explanation__Group__0)
{ after(grammarAccess.getExplanationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementSet
entryRuleElementSet 
:
{ before(grammarAccess.getElementSetRule()); }
	 ruleElementSet
{ after(grammarAccess.getElementSetRule()); } 
	 EOF 
;

// Rule ElementSet
ruleElementSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementSetAccess().getGroup()); }
(rule__ElementSet__Group__0)
{ after(grammarAccess.getElementSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectExpression
entryRuleSelectExpression 
:
{ before(grammarAccess.getSelectExpressionRule()); }
	 ruleSelectExpression
{ after(grammarAccess.getSelectExpressionRule()); } 
	 EOF 
;

// Rule SelectExpression
ruleSelectExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectExpressionAccess().getGroup()); }
(rule__SelectExpression__Group__0)
{ after(grammarAccess.getSelectExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructExpression
entryRuleConstructExpression 
:
{ before(grammarAccess.getConstructExpressionRule()); }
	 ruleConstructExpression
{ after(grammarAccess.getConstructExpressionRule()); } 
	 EOF 
;

// Rule ConstructExpression
ruleConstructExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructExpressionAccess().getGroup()); }
(rule__ConstructExpression__Group__0)
{ after(grammarAccess.getConstructExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAskQueryExpression
entryRuleAskQueryExpression 
:
{ before(grammarAccess.getAskQueryExpressionRule()); }
	 ruleAskQueryExpression
{ after(grammarAccess.getAskQueryExpressionRule()); } 
	 EOF 
;

// Rule AskQueryExpression
ruleAskQueryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAskQueryExpressionAccess().getGroup()); }
(rule__AskQueryExpression__Group__0)
{ after(grammarAccess.getAskQueryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderList
entryRuleOrderList 
:
{ before(grammarAccess.getOrderListRule()); }
	 ruleOrderList
{ after(grammarAccess.getOrderListRule()); } 
	 EOF 
;

// Rule OrderList
ruleOrderList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderListAccess().getGroup()); }
(rule__OrderList__Group__0)
{ after(grammarAccess.getOrderListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderElement
entryRuleOrderElement 
:
{ before(grammarAccess.getOrderElementRule()); }
	 ruleOrderElement
{ after(grammarAccess.getOrderElementRule()); } 
	 EOF 
;

// Rule OrderElement
ruleOrderElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderElementAccess().getGroup()); }
(rule__OrderElement__Group__0)
{ after(grammarAccess.getOrderElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOnly
entryRuleNotOnly 
:
{ before(grammarAccess.getNotOnlyRule()); }
	 ruleNotOnly
{ after(grammarAccess.getNotOnlyRule()); } 
	 EOF 
;

// Rule NotOnly
ruleNotOnly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotOnlyAccess().getGroup()); }
(rule__NotOnly__Group__0)
{ after(grammarAccess.getNotOnlyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOrPrimaryExpression
entryRuleUnaryOrPrimaryExpression 
:
{ before(grammarAccess.getUnaryOrPrimaryExpressionRule()); }
	 ruleUnaryOrPrimaryExpression
{ after(grammarAccess.getUnaryOrPrimaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrPrimaryExpression
ruleUnaryOrPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getAlternatives()); }
(rule__UnaryOrPrimaryExpression__Alternatives)
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedExpression
entryRuleLimitedExpression 
:
{ before(grammarAccess.getLimitedExpressionRule()); }
	 ruleLimitedExpression
{ after(grammarAccess.getLimitedExpressionRule()); } 
	 EOF 
;

// Rule LimitedExpression
ruleLimitedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedExpressionAccess().getLimitedOrExpressionParserRuleCall()); }
	ruleLimitedOrExpression
{ after(grammarAccess.getLimitedExpressionAccess().getLimitedOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedOrExpression
entryRuleLimitedOrExpression 
:
{ before(grammarAccess.getLimitedOrExpressionRule()); }
	 ruleLimitedOrExpression
{ after(grammarAccess.getLimitedOrExpressionRule()); } 
	 EOF 
;

// Rule LimitedOrExpression
ruleLimitedOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getGroup()); }
(rule__LimitedOrExpression__Group__0)
{ after(grammarAccess.getLimitedOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedAndExpression
entryRuleLimitedAndExpression 
:
{ before(grammarAccess.getLimitedAndExpressionRule()); }
	 ruleLimitedAndExpression
{ after(grammarAccess.getLimitedAndExpressionRule()); } 
	 EOF 
;

// Rule LimitedAndExpression
ruleLimitedAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getGroup()); }
(rule__LimitedAndExpression__Group__0)
{ after(grammarAccess.getLimitedAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedRelationalExpression
entryRuleLimitedRelationalExpression 
:
{ before(grammarAccess.getLimitedRelationalExpressionRule()); }
	 ruleLimitedRelationalExpression
{ after(grammarAccess.getLimitedRelationalExpressionRule()); } 
	 EOF 
;

// Rule LimitedRelationalExpression
ruleLimitedRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getGroup()); }
(rule__LimitedRelationalExpression__Group__0)
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedAdditiveExpression
entryRuleLimitedAdditiveExpression 
:
{ before(grammarAccess.getLimitedAdditiveExpressionRule()); }
	 ruleLimitedAdditiveExpression
{ after(grammarAccess.getLimitedAdditiveExpressionRule()); } 
	 EOF 
;

// Rule LimitedAdditiveExpression
ruleLimitedAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getGroup()); }
(rule__LimitedAdditiveExpression__Group__0)
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedMultiplicativeExpression
entryRuleLimitedMultiplicativeExpression 
:
{ before(grammarAccess.getLimitedMultiplicativeExpressionRule()); }
	 ruleLimitedMultiplicativeExpression
{ after(grammarAccess.getLimitedMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule LimitedMultiplicativeExpression
ruleLimitedMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getGroup()); }
(rule__LimitedMultiplicativeExpression__Group__0)
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedUnaryOrPrimaryExpression
entryRuleLimitedUnaryOrPrimaryExpression 
:
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionRule()); }
	 ruleLimitedUnaryOrPrimaryExpression
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionRule()); } 
	 EOF 
;

// Rule LimitedUnaryOrPrimaryExpression
ruleLimitedUnaryOrPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getAlternatives()); }
(rule__LimitedUnaryOrPrimaryExpression__Alternatives)
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitedPrimaryExpression
entryRuleLimitedPrimaryExpression 
:
{ before(grammarAccess.getLimitedPrimaryExpressionRule()); }
	 ruleLimitedPrimaryExpression
{ after(grammarAccess.getLimitedPrimaryExpressionRule()); } 
	 EOF 
;

// Rule LimitedPrimaryExpression
ruleLimitedPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getAlternatives()); }
(rule__LimitedPrimaryExpression__Alternatives)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGraphPattern
entryRuleGraphPattern 
:
{ before(grammarAccess.getGraphPatternRule()); }
	 ruleGraphPattern
{ after(grammarAccess.getGraphPatternRule()); } 
	 EOF 
;

// Rule GraphPattern
ruleGraphPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphPatternAccess().getAlternatives()); }
(rule__GraphPattern__Alternatives)
{ after(grammarAccess.getGraphPatternAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropOfSubj
entryRulePropOfSubj 
:
{ before(grammarAccess.getPropOfSubjRule()); }
	 rulePropOfSubj
{ after(grammarAccess.getPropOfSubjRule()); } 
	 EOF 
;

// Rule PropOfSubj
rulePropOfSubj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropOfSubjAccess().getGroup()); }
(rule__PropOfSubj__Group__0)
{ after(grammarAccess.getPropOfSubjAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubjProp
entryRuleSubjProp 
:
{ before(grammarAccess.getSubjPropRule()); }
	 ruleSubjProp
{ after(grammarAccess.getSubjPropRule()); } 
	 EOF 
;

// Rule SubjProp
ruleSubjProp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubjPropAccess().getGroup()); }
(rule__SubjProp__Group__0)
{ after(grammarAccess.getSubjPropAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstAttrSPV
entryRuleInstAttrSPV 
:
{ before(grammarAccess.getInstAttrSPVRule()); }
	 ruleInstAttrSPV
{ after(grammarAccess.getInstAttrSPVRule()); } 
	 EOF 
;

// Rule InstAttrSPV
ruleInstAttrSPV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstAttrSPVAccess().getGroup()); }
(rule__InstAttrSPV__Group__0)
{ after(grammarAccess.getInstAttrSPVAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstAttrPSV
entryRuleInstAttrPSV 
:
{ before(grammarAccess.getInstAttrPSVRule()); }
	 ruleInstAttrPSV
{ after(grammarAccess.getInstAttrPSVRule()); } 
	 EOF 
;

// Rule InstAttrPSV
ruleInstAttrPSV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstAttrPSVAccess().getGroup()); }
(rule__InstAttrPSV__Group__0)
{ after(grammarAccess.getInstAttrPSVAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubTypeOf
entryRuleSubTypeOf 
:
{ before(grammarAccess.getSubTypeOfRule()); }
	 ruleSubTypeOf
{ after(grammarAccess.getSubTypeOfRule()); } 
	 EOF 
;

// Rule SubTypeOf
ruleSubTypeOf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubTypeOfAccess().getGroup()); }
(rule__SubTypeOf__Group__0)
{ after(grammarAccess.getSubTypeOfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistentialNegation
entryRuleExistentialNegation 
:
{ before(grammarAccess.getExistentialNegationRule()); }
	 ruleExistentialNegation
{ after(grammarAccess.getExistentialNegationRule()); } 
	 EOF 
;

// Rule ExistentialNegation
ruleExistentialNegation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistentialNegationAccess().getGroup()); }
(rule__ExistentialNegation__Group__0)
{ after(grammarAccess.getExistentialNegationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntervalValue
entryRuleIntervalValue 
:
{ before(grammarAccess.getIntervalValueRule()); }
	 ruleIntervalValue
{ after(grammarAccess.getIntervalValueRule()); } 
	 EOF 
;

// Rule IntervalValue
ruleIntervalValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntervalValueAccess().getGroup()); }
(rule__IntervalValue__Group__0)
{ after(grammarAccess.getIntervalValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExplicitValue
entryRuleExplicitValue 
:
{ before(grammarAccess.getExplicitValueRule()); }
	 ruleExplicitValue
{ after(grammarAccess.getExplicitValueRule()); } 
	 EOF 
;

// Rule ExplicitValue
ruleExplicitValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplicitValueAccess().getAlternatives()); }
(rule__ExplicitValue__Alternatives)
{ after(grammarAccess.getExplicitValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueTable
entryRuleValueTable 
:
{ before(grammarAccess.getValueTableRule()); }
	 ruleValueTable
{ after(grammarAccess.getValueTableRule()); } 
	 EOF 
;

// Rule ValueTable
ruleValueTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueTableAccess().getGroup()); }
(rule__ValueTable__Group__0)
{ after(grammarAccess.getValueTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralValue
entryRuleLiteralValue 
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralValueAccess().getAlternatives()); }
(rule__LiteralValue__Alternatives)
{ after(grammarAccess.getLiteralValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueRow
entryRuleValueRow 
:
{ before(grammarAccess.getValueRowRule()); }
	 ruleValueRow
{ after(grammarAccess.getValueRowRule()); } 
	 EOF 
;

// Rule ValueRow
ruleValueRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueRowAccess().getGroup()); }
(rule__ValueRow__Group__0)
{ after(grammarAccess.getValueRowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNAME
entryRuleNAME 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNAMERule()); }
	 ruleNAME
{ after(grammarAccess.getNAMERule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NAME
ruleNAME
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNAMEAccess().getGroup()); }
(rule__NAME__Group__0)
{ after(grammarAccess.getNAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNAME_FRAGMENT
entryRuleNAME_FRAGMENT 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNAME_FRAGMENTRule()); }
	 ruleNAME_FRAGMENT
{ after(grammarAccess.getNAME_FRAGMENTRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NAME_FRAGMENT
ruleNAME_FRAGMENT
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNAME_FRAGMENTAccess().getAlternatives()); }
(rule__NAME_FRAGMENT__Alternatives)
{ after(grammarAccess.getNAME_FRAGMENTAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleID_OR_KEYWORD
entryRuleID_OR_KEYWORD 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getID_OR_KEYWORDRule()); }
	 ruleID_OR_KEYWORD
{ after(grammarAccess.getID_OR_KEYWORDRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ID_OR_KEYWORD
ruleID_OR_KEYWORD
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getID_OR_KEYWORDAccess().getAlternatives()); }
(rule__ID_OR_KEYWORD__Alternatives)
{ after(grammarAccess.getID_OR_KEYWORDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NUMBER
ruleNUMBER
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getGroup()); }
(rule__NUMBER__Group__0)
{ after(grammarAccess.getNUMBERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ModelName__AnnTypeAlternatives_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAnnTypeAliasKeyword_4_1_0_0()); }

	'alias' 

{ after(grammarAccess.getModelNameAccess().getAnnTypeAliasKeyword_4_1_0_0()); }
)

    |(
{ before(grammarAccess.getModelNameAccess().getAnnTypeNoteKeyword_4_1_0_1()); }

	'note' 

{ after(grammarAccess.getModelNameAccess().getAnnTypeNoteKeyword_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelElementAccess().getStatementParserRuleCall_0()); }
	ruleStatement
{ after(grammarAccess.getModelElementAccess().getStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getRuleParserRuleCall_1()); }
	ruleRule
{ after(grammarAccess.getModelElementAccess().getRuleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getQueryParserRuleCall_2()); }
	ruleQuery
{ after(grammarAccess.getModelElementAccess().getQueryParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getTestParserRuleCall_3()); }
	ruleTest
{ after(grammarAccess.getModelElementAccess().getTestParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getExprParserRuleCall_4()); }
	ruleExpr
{ after(grammarAccess.getModelElementAccess().getExprParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getDisplayParserRuleCall_5()); }
	ruleDisplay
{ after(grammarAccess.getModelElementAccess().getDisplayParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getExplanationParserRuleCall_6()); }
	ruleExplanation
{ after(grammarAccess.getModelElementAccess().getExplanationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getClassDeclarationParserRuleCall_0()); }
	ruleClassDeclaration
{ after(grammarAccess.getStatementAccess().getClassDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getComplementOfClassParserRuleCall_1()); }
	ruleComplementOfClass
{ after(grammarAccess.getStatementAccess().getComplementOfClassParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDisjointClassesParserRuleCall_2()); }
	ruleDisjointClasses
{ after(grammarAccess.getStatementAccess().getDisjointClassesParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEquivalentConceptsParserRuleCall_3()); }
	ruleEquivalentConcepts
{ after(grammarAccess.getStatementAccess().getEquivalentConceptsParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAllValuesFromParserRuleCall_4()); }
	ruleAllValuesFrom
{ after(grammarAccess.getStatementAccess().getAllValuesFromParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCardinalityParserRuleCall_5()); }
	ruleCardinality
{ after(grammarAccess.getStatementAccess().getCardinalityParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getHasValueParserRuleCall_6()); }
	ruleHasValue
{ after(grammarAccess.getStatementAccess().getHasValueParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getMaxCardinalityParserRuleCall_7()); }
	ruleMaxCardinality
{ after(grammarAccess.getStatementAccess().getMaxCardinalityParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getMinCardinalityParserRuleCall_8()); }
	ruleMinCardinality
{ after(grammarAccess.getStatementAccess().getMinCardinalityParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSomeValuesFromParserRuleCall_9()); }
	ruleSomeValuesFrom
{ after(grammarAccess.getStatementAccess().getSomeValuesFromParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEnumeratedAllAndSomeValuesFromParserRuleCall_10()); }
	ruleEnumeratedAllAndSomeValuesFrom
{ after(grammarAccess.getStatementAccess().getEnumeratedAllAndSomeValuesFromParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEnumeratedAllValuesFromParserRuleCall_11()); }
	ruleEnumeratedAllValuesFrom
{ after(grammarAccess.getStatementAccess().getEnumeratedAllValuesFromParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDefaultValueParserRuleCall_12()); }
	ruleDefaultValue
{ after(grammarAccess.getStatementAccess().getDefaultValueParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getNecessaryAndSufficientParserRuleCall_13()); }
	ruleNecessaryAndSufficient
{ after(grammarAccess.getStatementAccess().getNecessaryAndSufficientParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getPropertyDeclarationParserRuleCall_14()); }
	rulePropertyDeclaration
{ after(grammarAccess.getStatementAccess().getPropertyDeclarationParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getFunctionalPropertyParserRuleCall_15()); }
	ruleFunctionalProperty
{ after(grammarAccess.getStatementAccess().getFunctionalPropertyParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInverseFunctionalPropertyParserRuleCall_16()); }
	ruleInverseFunctionalProperty
{ after(grammarAccess.getStatementAccess().getInverseFunctionalPropertyParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInversePropertyParserRuleCall_17()); }
	ruleInverseProperty
{ after(grammarAccess.getStatementAccess().getInversePropertyParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSymmetricalPropertyParserRuleCall_18()); }
	ruleSymmetricalProperty
{ after(grammarAccess.getStatementAccess().getSymmetricalPropertyParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTransitivePropertyParserRuleCall_19()); }
	ruleTransitiveProperty
{ after(grammarAccess.getStatementAccess().getTransitivePropertyParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInstanceDeclarationStatementParserRuleCall_20()); }
	ruleInstanceDeclarationStatement
{ after(grammarAccess.getStatementAccess().getInstanceDeclarationStatementParserRuleCall_20()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExistingInstanceAttributionParserRuleCall_21()); }
	ruleExistingInstanceAttribution
{ after(grammarAccess.getStatementAccess().getExistingInstanceAttributionParserRuleCall_21()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInstanceDifferentFromParserRuleCall_22()); }
	ruleInstanceDifferentFrom
{ after(grammarAccess.getStatementAccess().getInstanceDifferentFromParserRuleCall_22()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInstancesAllDifferentParserRuleCall_23()); }
	ruleInstancesAllDifferent
{ after(grammarAccess.getStatementAccess().getInstancesAllDifferentParserRuleCall_23()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getUserDefinedDataTypeParserRuleCall_24()); }
	ruleUserDefinedDataType
{ after(grammarAccess.getStatementAccess().getUserDefinedDataTypeParserRuleCall_24()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__AnnTypeAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getAnnTypeAliasKeyword_1_1_0_0()); }

	'alias' 

{ after(grammarAccess.getResourceNameAccess().getAnnTypeAliasKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getResourceNameAccess().getAnnTypeNoteKeyword_1_1_0_1()); }

	'note' 

{ after(grammarAccess.getResourceNameAccess().getAnnTypeNoteKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__NamesAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getNamesResourceByNameParserRuleCall_1_0_0()); }
	ruleResourceByName
{ after(grammarAccess.getExistingResourceListAccess().getNamesResourceByNameParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getExistingResourceListAccess().getNamesResourceBySetOpParserRuleCall_1_0_1()); }
	ruleResourceBySetOp
{ after(grammarAccess.getExistingResourceListAccess().getNamesResourceBySetOpParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__NamesAlternatives_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getNamesResourceByNameParserRuleCall_2_1_0_0()); }
	ruleResourceByName
{ after(grammarAccess.getExistingResourceListAccess().getNamesResourceByNameParserRuleCall_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getExistingResourceListAccess().getNamesResourceBySetOpParserRuleCall_2_1_0_1()); }
	ruleResourceBySetOp
{ after(grammarAccess.getExistingResourceListAccess().getNamesResourceBySetOpParserRuleCall_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getResourceByNameParserRuleCall_0()); }
	ruleResourceByName
{ after(grammarAccess.getResourceIdentifierAccess().getResourceByNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getResourceIdentifierAccess().getGroup_1()); }
(rule__ResourceIdentifier__Group_1__0)
{ after(grammarAccess.getResourceIdentifierAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getResourceIdentifierAccess().getGroup_2()); }
(rule__ResourceIdentifier__Group_2__0)
{ after(grammarAccess.getResourceIdentifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__AnnTypeAlternatives_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeAliasKeyword_1_1_1_0_0()); }

	'alias' 

{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeAliasKeyword_1_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeNoteKeyword_1_1_1_0_1()); }

	'note' 

{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeNoteKeyword_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__AnnTypeAlternatives_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeAliasKeyword_2_1_1_0_0()); }

	'alias' 

{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeAliasKeyword_2_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeNoteKeyword_2_1_1_0_1()); }

	'note' 

{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeNoteKeyword_2_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceBySetOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceBySetOpAccess().getUnionResourceParserRuleCall_0()); }
	ruleUnionResource
{ after(grammarAccess.getResourceBySetOpAccess().getUnionResourceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getResourceBySetOpAccess().getIntersectionResourceParserRuleCall_1()); }
	ruleIntersectionResource
{ after(grammarAccess.getResourceBySetOpAccess().getIntersectionResourceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__OpAlternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getOpCommaKeyword_2_0_0_0()); }

	',' 

{ after(grammarAccess.getUnionResourceAccess().getOpCommaKeyword_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnionResourceAccess().getOpOrKeyword_2_0_0_1()); }

	'or' 

{ after(grammarAccess.getUnionResourceAccess().getOpOrKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_0()); }
(rule__ClassDeclaration__Group_0__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_1()); }
(rule__ClassDeclaration__Group_1__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_2()); }
(rule__ClassDeclaration__Group_2__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
(rule__ClassDeclaration__Group_3__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getGroup_0()); }
(rule__AddlClassInfo__Group_0__0)
{ after(grammarAccess.getAddlClassInfoAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAddlClassInfoAccess().getGroup_1()); }
(rule__AddlClassInfo__Group_1__0)
{ after(grammarAccess.getAddlClassInfoAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Alternatives_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getPropertyByNameAssignment_0_3_0()); }
(rule__AddlClassInfo__PropertyByNameAssignment_0_3_0)
{ after(grammarAccess.getAddlClassInfoAccess().getPropertyByNameAssignment_0_3_0()); }
)

    |(
{ before(grammarAccess.getAddlClassInfoAccess().getGroup_0_3_1()); }
(rule__AddlClassInfo__Group_0_3_1__0)
{ after(grammarAccess.getAddlClassInfoAccess().getGroup_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getHasKeyword_0_0()); }

	'has' 

{ after(grammarAccess.getRangeAccess().getHasKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getWithKeyword_0_1()); }

	'with' 

{ after(grammarAccess.getRangeAccess().getWithKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getGroup_1_0()); }
(rule__Range__Group_1_0__0)
{ after(grammarAccess.getRangeAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getGroup_1_1()); }
(rule__Range__Group_1_1__0)
{ after(grammarAccess.getRangeAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getValuesKeyword_1_2()); }

	'values' 

{ after(grammarAccess.getRangeAccess().getValuesKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getGroup_1_1_0_0()); }
(rule__Range__Group_1_1_0_0__0)
{ after(grammarAccess.getRangeAccess().getGroup_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getListsAssignment_1_1_0_1()); }
(rule__Range__ListsAssignment_1_1_0_1)
{ after(grammarAccess.getRangeAccess().getListsAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeTypeAccess().getClassIdentifierAssignment_0()); }
(rule__RangeType__ClassIdentifierAssignment_0)
{ after(grammarAccess.getRangeTypeAccess().getClassIdentifierAssignment_0()); }
)

    |(
{ before(grammarAccess.getRangeTypeAccess().getDataTypeAssignment_1()); }
(rule__RangeType__DataTypeAssignment_1)
{ after(grammarAccess.getRangeTypeAccess().getDataTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getGroup_0()); }
(rule__DataTypeRestriction__Group_0__0)
{ after(grammarAccess.getDataTypeRestrictionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataTypeRestrictionAccess().getGroup_1()); }
(rule__DataTypeRestriction__Group_1__0)
{ after(grammarAccess.getDataTypeRestrictionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getAKeyword_0_0_0()); }

	'a' 

{ after(grammarAccess.getDataTypeRestrictionAccess().getAKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getDataTypeRestrictionAccess().getAnKeyword_0_0_1()); }

	'an' 

{ after(grammarAccess.getDataTypeRestrictionAccess().getAnKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Alternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getCommaKeyword_1_2_0_0()); }

	',' 

{ after(grammarAccess.getDataTypeRestrictionAccess().getCommaKeyword_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getDataTypeRestrictionAccess().getOrKeyword_1_2_0_1()); }

	'or' 

{ after(grammarAccess.getDataTypeRestrictionAccess().getOrKeyword_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getGroup_0()); }
(rule__Facets__Group_0__0)
{ after(grammarAccess.getFacetsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getRegexAssignment_1()); }
(rule__Facets__RegexAssignment_1)
{ after(grammarAccess.getFacetsAccess().getRegexAssignment_1()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getGroup_2()); }
(rule__Facets__Group_2__0)
{ after(grammarAccess.getFacetsAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getGroup_3()); }
(rule__Facets__Group_3__0)
{ after(grammarAccess.getFacetsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MinexinAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinexinLeftParenthesisKeyword_0_0_0_0()); }

	'(' 

{ after(grammarAccess.getFacetsAccess().getMinexinLeftParenthesisKeyword_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getMinexinLeftSquareBracketKeyword_0_0_0_1()); }

	'[' 

{ after(grammarAccess.getFacetsAccess().getMinexinLeftSquareBracketKeyword_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MaxexinAlternatives_0_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxexinRightSquareBracketKeyword_0_4_0_0()); }

	']' 

{ after(grammarAccess.getFacetsAccess().getMaxexinRightSquareBracketKeyword_0_4_0_0()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getMaxexinRightParenthesisKeyword_0_4_0_1()); }

	')' 

{ after(grammarAccess.getFacetsAccess().getMaxexinRightParenthesisKeyword_0_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getLenAssignment_2_1_0()); }
(rule__Facets__LenAssignment_2_1_0)
{ after(grammarAccess.getFacetsAccess().getLenAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getGroup_2_1_1()); }
(rule__Facets__Group_2_1_1__0)
{ after(grammarAccess.getFacetsAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__ValuesAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getValuesSTRINGTerminalRuleCall_3_1_0_0()); }
	RULE_STRING
{ after(grammarAccess.getFacetsAccess().getValuesSTRINGTerminalRuleCall_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getValuesNUMBERParserRuleCall_3_1_0_1()); }
	ruleNUMBER
{ after(grammarAccess.getFacetsAccess().getValuesNUMBERParserRuleCall_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__ValuesAlternatives_3_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getValuesSTRINGTerminalRuleCall_3_2_1_0_0()); }
	RULE_STRING
{ after(grammarAccess.getFacetsAccess().getValuesSTRINGTerminalRuleCall_3_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getFacetsAccess().getValuesNUMBERParserRuleCall_3_2_1_0_1()); }
	ruleNUMBER
{ after(grammarAccess.getFacetsAccess().getValuesNUMBERParserRuleCall_3_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnArticle__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0()); }
	ruleIndefiniteArticle
{ after(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1()); }
	ruleDefiniteArticle
{ after(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndefiniteArticle__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndefiniteArticleAccess().getAKeyword_0()); }

	'A' 

{ after(grammarAccess.getIndefiniteArticleAccess().getAKeyword_0()); }
)

    |(
{ before(grammarAccess.getIndefiniteArticleAccess().getAKeyword_1()); }

	'a' 

{ after(grammarAccess.getIndefiniteArticleAccess().getAKeyword_1()); }
)

    |(
{ before(grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2()); }

	'An' 

{ after(grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2()); }
)

    |(
{ before(grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3()); }

	'an' 

{ after(grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefiniteArticle__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefiniteArticleAccess().getTheKeyword_0()); }

	'The' 

{ after(grammarAccess.getDefiniteArticleAccess().getTheKeyword_0()); }
)

    |(
{ before(grammarAccess.getDefiniteArticleAccess().getTheKeyword_1()); }

	'the' 

{ after(grammarAccess.getDefiniteArticleAccess().getTheKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getGroup_0()); }
(rule__DisjointClasses__Group_0__0)
{ after(grammarAccess.getDisjointClassesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDisjointClassesAccess().getGroup_1()); }
(rule__DisjointClasses__Group_1__0)
{ after(grammarAccess.getDisjointClassesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getGroup_0()); }
(rule__AllValuesFrom__Group_0__0)
{ after(grammarAccess.getAllValuesFromAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAllValuesFromAccess().getGroup_1()); }
(rule__AllValuesFrom__Group_1__0)
{ after(grammarAccess.getAllValuesFromAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getGroup_0()); }
(rule__SomeValuesFrom__Group_0__0)
{ after(grammarAccess.getSomeValuesFromAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSomeValuesFromAccess().getGroup_1()); }
(rule__SomeValuesFrom__Group_1__0)
{ after(grammarAccess.getSomeValuesFromAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getGroup_0()); }
(rule__HasValue__Group_0__0)
{ after(grammarAccess.getHasValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getHasValueAccess().getGroup_1()); }
(rule__HasValue__Group_1__0)
{ after(grammarAccess.getHasValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getGroup_0()); }
(rule__Cardinality__Group_0__0)
{ after(grammarAccess.getCardinalityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getGroup_1()); }
(rule__Cardinality__Group_1__0)
{ after(grammarAccess.getCardinalityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getGroup_0()); }
(rule__MinCardinality__Group_0__0)
{ after(grammarAccess.getMinCardinalityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMinCardinalityAccess().getGroup_1()); }
(rule__MinCardinality__Group_1__0)
{ after(grammarAccess.getMinCardinalityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getGroup_0()); }
(rule__MaxCardinality__Group_0__0)
{ after(grammarAccess.getMaxCardinalityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMaxCardinalityAccess().getGroup_1()); }
(rule__MaxCardinality__Group_1__0)
{ after(grammarAccess.getMaxCardinalityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationAssignment_6_0()); }
(rule__EnumeratedAllValuesFrom__EnumerationAssignment_6_0)
{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationAssignment_6_0()); }
)

    |(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationAssignment_6_1()); }
(rule__EnumeratedAllValuesFrom__EnumerationAssignment_6_1)
{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationAssignment_5_0()); }
(rule__EnumeratedAllAndSomeValuesFrom__EnumerationAssignment_5_0)
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationAssignment_5_1()); }
(rule__EnumeratedAllAndSomeValuesFrom__EnumerationAssignment_5_1)
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getHasKeyword_0_0()); }

	'has' 

{ after(grammarAccess.getSomeValuesConditionAccess().getHasKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSomeValuesConditionAccess().getWithKeyword_0_1()); }

	'with' 

{ after(grammarAccess.getSomeValuesConditionAccess().getWithKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getGroup_5_0()); }
(rule__SomeValuesCondition__Group_5_0__0)
{ after(grammarAccess.getSomeValuesConditionAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getSomeValuesConditionAccess().getGroup_5_1()); }
(rule__SomeValuesCondition__Group_5_1__0)
{ after(grammarAccess.getSomeValuesConditionAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValueCondition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueConditionAccess().getHasKeyword_1_0()); }

	'has' 

{ after(grammarAccess.getHasValueConditionAccess().getHasKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getHasValueConditionAccess().getWithKeyword_1_1()); }

	'with' 

{ after(grammarAccess.getHasValueConditionAccess().getWithKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getHasKeyword_0_0()); }

	'has' 

{ after(grammarAccess.getMinCardConditionAccess().getHasKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMinCardConditionAccess().getWithKeyword_0_1()); }

	'with' 

{ after(grammarAccess.getMinCardConditionAccess().getWithKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getValueKeyword_4_0()); }

	'value' 

{ after(grammarAccess.getMinCardConditionAccess().getValueKeyword_4_0()); }
)

    |(
{ before(grammarAccess.getMinCardConditionAccess().getValuesKeyword_4_1()); }

	'values' 

{ after(grammarAccess.getMinCardConditionAccess().getValuesKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getHasKeyword_0_0()); }

	'has' 

{ after(grammarAccess.getMaxCardConditionAccess().getHasKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMaxCardConditionAccess().getWithKeyword_0_1()); }

	'with' 

{ after(grammarAccess.getMaxCardConditionAccess().getWithKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getValueKeyword_4_0()); }

	'value' 

{ after(grammarAccess.getMaxCardConditionAccess().getValueKeyword_4_0()); }
)

    |(
{ before(grammarAccess.getMaxCardConditionAccess().getValuesKeyword_4_1()); }

	'values' 

{ after(grammarAccess.getMaxCardConditionAccess().getValuesKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getHasKeyword_0_0()); }

	'has' 

{ after(grammarAccess.getCardConditionAccess().getHasKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCardConditionAccess().getWithKeyword_0_1()); }

	'with' 

{ after(grammarAccess.getCardConditionAccess().getWithKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getValueKeyword_3_0()); }

	'value' 

{ after(grammarAccess.getCardConditionAccess().getValueKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getCardConditionAccess().getValuesKeyword_3_1()); }

	'values' 

{ after(grammarAccess.getCardConditionAccess().getValuesKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getAllValuesConditionParserRuleCall_0()); }
	ruleAllValuesCondition
{ after(grammarAccess.getConditionAccess().getAllValuesConditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getSomeValuesConditionParserRuleCall_1()); }
	ruleSomeValuesCondition
{ after(grammarAccess.getConditionAccess().getSomeValuesConditionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getHasValueConditionParserRuleCall_2()); }
	ruleHasValueCondition
{ after(grammarAccess.getConditionAccess().getHasValueConditionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getMinCardConditionParserRuleCall_3()); }
	ruleMinCardCondition
{ after(grammarAccess.getConditionAccess().getMinCardConditionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getMaxCardConditionParserRuleCall_4()); }
	ruleMaxCardCondition
{ after(grammarAccess.getConditionAccess().getMaxCardConditionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getCardConditionParserRuleCall_5()); }
	ruleCardCondition
{ after(grammarAccess.getConditionAccess().getCardConditionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup_0()); }
(rule__PropertyDeclaration__Group_0__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup_1()); }
(rule__PropertyDeclaration__Group_1__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup_2()); }
(rule__PropertyDeclaration__Group_2__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_0()); }
(rule__AdditionalPropertyInfo__Group_0__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_1()); }
(rule__AdditionalPropertyInfo__Group_1__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_2()); }
(rule__AdditionalPropertyInfo__Group_2__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_3()); }
(rule__AdditionalPropertyInfo__Group_3__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_4()); }
(rule__AdditionalPropertyInfo__Group_4__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_5()); }
(rule__AdditionalPropertyInfo__Group_5__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_6()); }
(rule__AdditionalPropertyInfo__Group_6__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_7()); }
(rule__AdditionalPropertyInfo__Group_7__0)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getGroup_0()); }
(rule__TypedBNode__Group_0__0)
{ after(grammarAccess.getTypedBNodeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypedBNodeAccess().getGroup_1()); }
(rule__TypedBNode__Group_1__0)
{ after(grammarAccess.getTypedBNodeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getGroup_0()); }
(rule__InstanceDeclaration__Group_0__0)
{ after(grammarAccess.getInstanceDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInstanceDeclarationAccess().getGroup_1()); }
(rule__InstanceDeclaration__Group_1__0)
{ after(grammarAccess.getInstanceDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getGroup_0()); }
(rule__ExistingInstanceAttribution__Group_0__0)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getGroup_1()); }
(rule__ExistingInstanceAttribution__Group_1__0)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getGroup_2()); }
(rule__ExistingInstanceAttribution__Group_2__0)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ValAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getValLiteralValueParserRuleCall_0_0()); }
	ruleLiteralValue
{ after(grammarAccess.getObjectAccess().getValLiteralValueParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getObjectAccess().getValResourceByNameParserRuleCall_0_1()); }
	ruleResourceByName
{ after(grammarAccess.getObjectAccess().getValResourceByNameParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getObjectAccess().getValInstanceDeclarationParserRuleCall_0_2()); }
	ruleInstanceDeclaration
{ after(grammarAccess.getObjectAccess().getValInstanceDeclarationParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getHasKeyword_1_0()); }

	'has' 

{ after(grammarAccess.getPropValPartialTripleAccess().getHasKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPropValPartialTripleAccess().getWithKeyword_1_1()); }

	'with' 

{ after(grammarAccess.getPropValPartialTripleAccess().getWithKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getObjectValueAssignment_3_0()); }
(rule__PropValPartialTriple__ObjectValueAssignment_3_0)
{ after(grammarAccess.getPropValPartialTripleAccess().getObjectValueAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getPropValPartialTripleAccess().getGroup_3_1()); }
(rule__PropValPartialTriple__Group_3_1__0)
{ after(grammarAccess.getPropValPartialTripleAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OfPatternReturningValues__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getGroup_0()); }
(rule__OfPatternReturningValues__Group_0__0)
{ after(grammarAccess.getOfPatternReturningValuesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getTypeAssignment_1()); }
(rule__OfPatternReturningValues__TypeAssignment_1)
{ after(grammarAccess.getOfPatternReturningValuesAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithChain__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWithChainAccess().getWpsAssignment_0()); }
(rule__WithChain__WpsAssignment_0)
{ after(grammarAccess.getWithChainAccess().getWpsAssignment_0()); }
)
(
{ before(grammarAccess.getWithChainAccess().getWpsAssignment_0()); }
(rule__WithChain__WpsAssignment_0)*
{ after(grammarAccess.getWithChainAccess().getWpsAssignment_0()); }
)
)

    |(
{ before(grammarAccess.getWithChainAccess().getGroup_1()); }
(rule__WithChain__Group_1__0)
{ after(grammarAccess.getWithChainAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getGroup_0()); }
(rule__WithPhrase__Group_0__0)
{ after(grammarAccess.getWithPhraseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getGroup_1()); }
(rule__WithPhrase__Group_1__0)
{ after(grammarAccess.getWithPhraseAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getGroup_2()); }
(rule__WithPhrase__Group_2__0)
{ after(grammarAccess.getWithPhraseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getHasKeyword_0_1_0()); }

	'has' 

{ after(grammarAccess.getWithPhraseAccess().getHasKeyword_0_1_0()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getWithKeyword_0_1_1()); }

	'with' 

{ after(grammarAccess.getWithPhraseAccess().getWithKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getHasKeyword_1_1_0()); }

	'has' 

{ after(grammarAccess.getWithPhraseAccess().getHasKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getWithKeyword_1_1_1()); }

	'with' 

{ after(grammarAccess.getWithPhraseAccess().getWithKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getHasKeyword_2_1_0()); }

	'has' 

{ after(grammarAccess.getWithPhraseAccess().getHasKeyword_2_1_0()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getWithKeyword_2_1_1()); }

	'with' 

{ after(grammarAccess.getWithPhraseAccess().getWithKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__ValueAlternatives_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueEmbeddedInstanceDeclarationParserRuleCall_2_3_0_0()); }
	ruleEmbeddedInstanceDeclaration
{ after(grammarAccess.getWithPhraseAccess().getValueEmbeddedInstanceDeclarationParserRuleCall_2_3_0_0()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getValueWithPhraseParserRuleCall_2_3_0_1()); }
	ruleWithPhrase
{ after(grammarAccess.getWithPhraseAccess().getValueWithPhraseParserRuleCall_2_3_0_1()); }
)

    |(
{ before(grammarAccess.getWithPhraseAccess().getValueLimitedExpressionParserRuleCall_2_3_0_2()); }
	ruleLimitedExpression
{ after(grammarAccess.getWithPhraseAccess().getValueLimitedExpressionParserRuleCall_2_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getGroup_1_0()); }
(rule__Display__Group_1_0__0)
{ after(grammarAccess.getDisplayAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getDisplayAccess().getGroup_1_1()); }
(rule__Display__Group_1_1__0)
{ after(grammarAccess.getDisplayAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getDisplayAccess().getGroup_1_2()); }
(rule__Display__Group_1_2__0)
{ after(grammarAccess.getDisplayAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getGroup_1_0()); }
(rule__Explanation__Group_1_0__0)
{ after(grammarAccess.getExplanationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExplanationAccess().getExprAssignment_1_1()); }
(rule__Explanation__ExprAssignment_1_1)
{ after(grammarAccess.getExplanationAccess().getExprAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getExplanationAccess().getGroup_1_2()); }
(rule__Explanation__Group_1_2__0)
{ after(grammarAccess.getExplanationAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getExplanationAccess().getGroup_1_3()); }
(rule__Explanation__Group_1_3__0)
{ after(grammarAccess.getExplanationAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getAllVarsAssignment_2_0()); }
(rule__SelectExpression__AllVarsAssignment_2_0)
{ after(grammarAccess.getSelectExpressionAccess().getAllVarsAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getSelectExpressionAccess().getVarListAssignment_2_1()); }
(rule__SelectExpression__VarListAssignment_2_1)
{ after(grammarAccess.getSelectExpressionAccess().getVarListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderElement__OrderAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderElementAccess().getOrderAscKeyword_0_0_0()); }

	'asc' 

{ after(grammarAccess.getOrderElementAccess().getOrderAscKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getOrderElementAccess().getOrderDescKeyword_0_0_1()); }

	'desc' 

{ after(grammarAccess.getOrderElementAccess().getOrderDescKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall_0()); }
	ruleSelectExpression
{ after(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getConstructExpressionParserRuleCall_1()); }
	ruleConstructExpression
{ after(grammarAccess.getExpressionAccess().getConstructExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getAskQueryExpressionParserRuleCall_2()); }
	ruleAskQueryExpression
{ after(grammarAccess.getExpressionAccess().getAskQueryExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall_3()); }
	ruleOrExpression
{ after(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0()); }

	'||' 

{ after(grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0_1()); }

	'or' 

{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }

	'&&' 

{ after(grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0_1()); }

	'and' 

{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1()); }

	'==' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpIsKeyword_1_1_0_2()); }

	'is' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpIsKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_3()); }

	'!=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_4()); }

	'<' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_5()); }

	'<=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_5()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_6()); }

	'>' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_6()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_7()); }

	'>=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpCircumflexAccentKeyword_1_1_0_2()); }

	'^' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpCircumflexAccentKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_1_0_3()); }

	'%' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getGroup_0()); }
(rule__UnaryOrPrimaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__OpAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpExclamationMarkKeyword_0_1_0_0()); }

	'!' 

{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpExclamationMarkKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpNotKeyword_0_1_0_1()); }

	'not' 

{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpNotKeyword_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpOnlyKeyword_0_1_0_2()); }

	'only' 

{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpOnlyKeyword_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpNotOnlyParserRuleCall_0_1_0_3()); }
	ruleNotOnly
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpNotOnlyParserRuleCall_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpHyphenMinusKeyword_0_1_0_4()); }

	'-' 

{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpHyphenMinusKeyword_0_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGpAssignment_2()); }
(rule__PrimaryExpression__GpAssignment_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getGpAssignment_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIvalueAssignment_3()); }
(rule__PrimaryExpression__IvalueAssignment_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getIvalueAssignment_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_4()); }
(rule__PrimaryExpression__ValueAssignment_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueTableAssignment_5()); }
(rule__PrimaryExpression__ValueTableAssignment_5)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueTableAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0()); }

	'||' 

{ after(grammarAccess.getLimitedOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLimitedOrExpressionAccess().getOpOrKeyword_1_1_0_1()); }

	'or' 

{ after(grammarAccess.getLimitedOrExpressionAccess().getOpOrKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }

	'&&' 

{ after(grammarAccess.getLimitedAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLimitedAndExpressionAccess().getOpAndKeyword_1_1_0_1()); }

	'and' 

{ after(grammarAccess.getLimitedAndExpressionAccess().getOpAndKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1()); }

	'==' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpIsKeyword_1_1_0_2()); }

	'is' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpIsKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_3()); }

	'!=' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_4()); }

	'<' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_5()); }

	'<=' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_5()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_6()); }

	'>' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_6()); }
)

    |(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_7()); }

	'>=' 

{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getOpPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getOpPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpCircumflexAccentKeyword_1_1_0_2()); }

	'^' 

{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpCircumflexAccentKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_1_0_3()); }

	'%' 

{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpPercentSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getGroup_0()); }
(rule__LimitedUnaryOrPrimaryExpression__Group_0__0)
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getLimitedPrimaryExpressionParserRuleCall_1()); }
	ruleLimitedPrimaryExpression
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getLimitedPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__OpAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpExclamationMarkKeyword_0_1_0_0()); }

	'!' 

{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpExclamationMarkKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpHyphenMinusKeyword_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpHyphenMinusKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_0()); }
(rule__LimitedPrimaryExpression__Group_0__0)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_1()); }
(rule__LimitedPrimaryExpression__Group_1__0)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getIvalueAssignment_2()); }
(rule__LimitedPrimaryExpression__IvalueAssignment_2)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getIvalueAssignment_2()); }
)

    |(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getValueAssignment_3()); }
(rule__LimitedPrimaryExpression__ValueAssignment_3)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getValueTableAssignment_4()); }
(rule__LimitedPrimaryExpression__ValueTableAssignment_4)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getValueTableAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphPattern__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphPatternAccess().getPropOfSubjParserRuleCall_0()); }
	rulePropOfSubj
{ after(grammarAccess.getGraphPatternAccess().getPropOfSubjParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGraphPatternAccess().getSubjPropParserRuleCall_1()); }
	ruleSubjProp
{ after(grammarAccess.getGraphPatternAccess().getSubjPropParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGraphPatternAccess().getInstAttrSPVParserRuleCall_2()); }
	ruleInstAttrSPV
{ after(grammarAccess.getGraphPatternAccess().getInstAttrSPVParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getGraphPatternAccess().getInstAttrPSVParserRuleCall_3()); }
	ruleInstAttrPSV
{ after(grammarAccess.getGraphPatternAccess().getInstAttrPSVParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getGraphPatternAccess().getMergedTriplesParserRuleCall_4()); }
	ruleMergedTriples
{ after(grammarAccess.getGraphPatternAccess().getMergedTriplesParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getGraphPatternAccess().getSubTypeOfParserRuleCall_5()); }
	ruleSubTypeOf
{ after(grammarAccess.getGraphPatternAccess().getSubTypeOfParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getGraphPatternAccess().getExistentialNegationParserRuleCall_6()); }
	ruleExistentialNegation
{ after(grammarAccess.getGraphPatternAccess().getExistentialNegationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getHasKeyword_1_0()); }

	'has' 

{ after(grammarAccess.getInstAttrSPVAccess().getHasKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getInstAttrSPVAccess().getWithKeyword_1_1()); }

	'with' 

{ after(grammarAccess.getInstAttrSPVAccess().getWithKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getHasKeyword_4_1_0()); }

	'has' 

{ after(grammarAccess.getInstAttrSPVAccess().getHasKeyword_4_1_0()); }
)

    |(
{ before(grammarAccess.getInstAttrSPVAccess().getWithKeyword_4_1_1()); }

	'with' 

{ after(grammarAccess.getInstAttrSPVAccess().getWithKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalValue__OpAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalValueAccess().getOpEqualsSignEqualsSignKeyword_0_0_0()); }

	'==' 

{ after(grammarAccess.getIntervalValueAccess().getOpEqualsSignEqualsSignKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getIntervalValueAccess().getOpLessThanSignKeyword_0_0_1()); }

	'<' 

{ after(grammarAccess.getIntervalValueAccess().getOpLessThanSignKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getIntervalValueAccess().getOpLessThanSignEqualsSignKeyword_0_0_2()); }

	'<=' 

{ after(grammarAccess.getIntervalValueAccess().getOpLessThanSignEqualsSignKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getIntervalValueAccess().getOpGreaterThanSignKeyword_0_0_3()); }

	'>' 

{ after(grammarAccess.getIntervalValueAccess().getOpGreaterThanSignKeyword_0_0_3()); }
)

    |(
{ before(grammarAccess.getIntervalValueAccess().getOpGreaterThanSignEqualsSignKeyword_0_0_4()); }

	'>=' 

{ after(grammarAccess.getIntervalValueAccess().getOpGreaterThanSignEqualsSignKeyword_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getInstNameAssignment_0()); }
(rule__ExplicitValue__InstNameAssignment_0)
{ after(grammarAccess.getExplicitValueAccess().getInstNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getExplicitValueAccess().getLitValueAssignment_1()); }
(rule__ExplicitValue__LitValueAssignment_1)
{ after(grammarAccess.getExplicitValueAccess().getLitValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getExplicitValueAccess().getGroup_2()); }
(rule__ExplicitValue__Group_2__0)
{ after(grammarAccess.getExplicitValueAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExplicitValueAccess().getTermAssignment_3()); }
(rule__ExplicitValue__TermAssignment_3)
{ after(grammarAccess.getExplicitValueAccess().getTermAssignment_3()); }
)

    |(
{ before(grammarAccess.getExplicitValueAccess().getTermAssignment_4()); }
(rule__ExplicitValue__TermAssignment_4)
{ after(grammarAccess.getExplicitValueAccess().getTermAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralNumberAssignment_0()); }
(rule__LiteralValue__LiteralNumberAssignment_0)
{ after(grammarAccess.getLiteralValueAccess().getLiteralNumberAssignment_0()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getLiteralStringAssignment_1()); }
(rule__LiteralValue__LiteralStringAssignment_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralStringAssignment_1()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getLiteralBooleanAssignment_2()); }
(rule__LiteralValue__LiteralBooleanAssignment_2)
{ after(grammarAccess.getLiteralValueAccess().getLiteralBooleanAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralBooleanAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralBooleanTrueKeyword_2_0_0()); }

	'true' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralBooleanTrueKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getLiteralBooleanFalseKeyword_2_0_1()); }

	'false' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralBooleanFalseKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getGroup_2_0()); }
(rule__NAME__Group_2_0__0)
{ after(grammarAccess.getNAMEAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getNAMEAccess().getGroup_2_1()); }
(rule__NAME__Group_2_1__0)
{ after(grammarAccess.getNAMEAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Alternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getHyphenMinusKeyword_2_0_0_0()); }

	'-' 

{ after(grammarAccess.getNAMEAccess().getHyphenMinusKeyword_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getNAMEAccess().getFullStopKeyword_2_0_0_1()); }

	'.' 

{ after(grammarAccess.getNAMEAccess().getFullStopKeyword_2_0_0_1()); }
)

    |(
{ before(grammarAccess.getNAMEAccess().getTildeKeyword_2_0_0_2()); }

	'~' 

{ after(grammarAccess.getNAMEAccess().getTildeKeyword_2_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NAME_FRAGMENT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAME_FRAGMENTAccess().getID_OR_KEYWORDParserRuleCall_0()); }
	ruleID_OR_KEYWORD
{ after(grammarAccess.getNAME_FRAGMENTAccess().getID_OR_KEYWORDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNAME_FRAGMENTAccess().getGroup_1()); }
(rule__NAME_FRAGMENT__Group_1__0)
{ after(grammarAccess.getNAME_FRAGMENTAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ID_OR_KEYWORD__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getID_OR_KEYWORDAccess().getAKeyword_0()); }

	'a' 

{ after(grammarAccess.getID_OR_KEYWORDAccess().getAKeyword_0()); }
)

    |(
{ before(grammarAccess.getID_OR_KEYWORDAccess().getAKeyword_1()); }

	'A' 

{ after(grammarAccess.getID_OR_KEYWORDAccess().getAKeyword_1()); }
)

    |(
{ before(grammarAccess.getID_OR_KEYWORDAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getID_OR_KEYWORDAccess().getIsKeyword_2()); }
)

    |(
{ before(grammarAccess.getID_OR_KEYWORDAccess().getAreKeyword_3()); }

	'are' 

{ after(grammarAccess.getID_OR_KEYWORDAccess().getAreKeyword_3()); }
)

    |(
{ before(grammarAccess.getID_OR_KEYWORDAccess().getIDTerminalRuleCall_4()); }
	RULE_ID
{ after(grammarAccess.getID_OR_KEYWORDAccess().getIDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'string' 
)
{ after(grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getBooleanEnumLiteralDeclaration_1()); }
(	'boolean' 
)
{ after(grammarAccess.getDataTypeAccess().getBooleanEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDecimalEnumLiteralDeclaration_2()); }
(	'decimal' 
)
{ after(grammarAccess.getDataTypeAccess().getDecimalEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_3()); }
(	'int' 
)
{ after(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getLongEnumLiteralDeclaration_4()); }
(	'long' 
)
{ after(grammarAccess.getDataTypeAccess().getLongEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_5()); }
(	'float' 
)
{ after(grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_6()); }
(	'double' 
)
{ after(grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDurationEnumLiteralDeclaration_7()); }
(	'duration' 
)
{ after(grammarAccess.getDataTypeAccess().getDurationEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDateTimeEnumLiteralDeclaration_8()); }
(	'dateTime' 
)
{ after(grammarAccess.getDataTypeAccess().getDateTimeEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_9()); }
(	'time' 
)
{ after(grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_10()); }
(	'date' 
)
{ after(grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11()); }
(	'gYearMonth' 
)
{ after(grammarAccess.getDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGYearEnumLiteralDeclaration_12()); }
(	'gYear' 
)
{ after(grammarAccess.getDataTypeAccess().getGYearEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13()); }
(	'gMonthDay' 
)
{ after(grammarAccess.getDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGDayEnumLiteralDeclaration_14()); }
(	'gDay' 
)
{ after(grammarAccess.getDataTypeAccess().getGDayEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGMonthEnumLiteralDeclaration_15()); }
(	'gMonth' 
)
{ after(grammarAccess.getDataTypeAccess().getGMonthEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16()); }
(	'hexBinary' 
)
{ after(grammarAccess.getDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17()); }
(	'base64Binary' 
)
{ after(grammarAccess.getDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getAnyURIEnumLiteralDeclaration_18()); }
(	'anyURI' 
)
{ after(grammarAccess.getDataTypeAccess().getAnyURIEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDataEnumLiteralDeclaration_19()); }
(	'data' 
)
{ after(grammarAccess.getDataTypeAccess().getDataEnumLiteralDeclaration_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelNameAssignment_0()); }
(rule__Model__ModelNameAssignment_0)
{ after(grammarAccess.getModelAccess().getModelNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_1()); }
(rule__Model__ImportsAssignment_1)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment_2()); }
(rule__Model__ElementsAssignment_2)*
{ after(grammarAccess.getModelAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group__0__Impl
	rule__ModelName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getUriKeyword_0()); }

	'uri' 

{ after(grammarAccess.getModelNameAccess().getUriKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group__1__Impl
	rule__ModelName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getBaseUriAssignment_1()); }
(rule__ModelName__BaseUriAssignment_1)
{ after(grammarAccess.getModelNameAccess().getBaseUriAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group__2__Impl
	rule__ModelName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getGroup_2()); }
(rule__ModelName__Group_2__0)?
{ after(grammarAccess.getModelNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group__3__Impl
	rule__ModelName__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getGroup_3()); }
(rule__ModelName__Group_3__0)?
{ after(grammarAccess.getModelNameAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group__4__Impl
	rule__ModelName__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getGroup_4()); }
(rule__ModelName__Group_4__0)*
{ after(grammarAccess.getModelNameAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getEOSTerminalRuleCall_5()); }
	RULE_EOS
{ after(grammarAccess.getModelNameAccess().getEOSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ModelName__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_2__0__Impl
	rule__ModelName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAliasKeyword_2_0()); }

	'alias' 

{ after(grammarAccess.getModelNameAccess().getAliasKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAliasAssignment_2_1()); }
(rule__ModelName__AliasAssignment_2_1)
{ after(grammarAccess.getModelNameAccess().getAliasAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelName__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_3__0__Impl
	rule__ModelName__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getVersionKeyword_3_0()); }

	'version' 

{ after(grammarAccess.getModelNameAccess().getVersionKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getVersionAssignment_3_1()); }
(rule__ModelName__VersionAssignment_3_1)
{ after(grammarAccess.getModelNameAccess().getVersionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelName__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_4__0__Impl
	rule__ModelName__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getModelNameAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_4__1__Impl
	rule__ModelName__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAnnTypeAssignment_4_1()); }
(rule__ModelName__AnnTypeAssignment_4_1)
{ after(grammarAccess.getModelNameAccess().getAnnTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_4__2__Impl
	rule__ModelName__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAnnContentAssignment_4_2()); }
(rule__ModelName__AnnContentAssignment_4_2)
{ after(grammarAccess.getModelNameAccess().getAnnContentAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelName__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelName__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getRightParenthesisKeyword_4_3()); }

	')' 

{ after(grammarAccess.getModelNameAccess().getRightParenthesisKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGroup_2()); }
(rule__Import__Group_2__0)?
{ after(grammarAccess.getImportAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getEOSTerminalRuleCall_3()); }
	RULE_EOS
{ after(grammarAccess.getImportAccess().getEOSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_2__0__Impl
	rule__Import__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getImportAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAliasAssignment_2_1()); }
(rule__Import__AliasAssignment_2_1)
{ after(grammarAccess.getImportAccess().getAliasAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group__0__Impl
	rule__ResourceName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getNameAssignment_0()); }
(rule__ResourceName__NameAssignment_0)
{ after(grammarAccess.getResourceNameAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getGroup_1()); }
(rule__ResourceName__Group_1__0)*
{ after(grammarAccess.getResourceNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group_1__0__Impl
	rule__ResourceName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getResourceNameAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group_1__1__Impl
	rule__ResourceName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getAnnTypeAssignment_1_1()); }
(rule__ResourceName__AnnTypeAssignment_1_1)
{ after(grammarAccess.getResourceNameAccess().getAnnTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceName__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group_1__2__Impl
	rule__ResourceName__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getAnnContentAssignment_1_2()); }
(rule__ResourceName__AnnContentAssignment_1_2)
{ after(grammarAccess.getResourceNameAccess().getAnnContentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceName__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceName__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getResourceNameAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContentList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentList__Group__0__Impl
	rule__ContentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentListAccess().getAnnContentAssignment_0()); }
(rule__ContentList__AnnContentAssignment_0)
{ after(grammarAccess.getContentListAccess().getAnnContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContentList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentListAccess().getGroup_1()); }
(rule__ContentList__Group_1__0)*
{ after(grammarAccess.getContentListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContentList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentList__Group_1__0__Impl
	rule__ContentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getContentListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContentList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentListAccess().getAnnContentAssignment_1_1()); }
(rule__ContentList__AnnContentAssignment_1_1)
{ after(grammarAccess.getContentListAccess().getAnnContentAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceList__Group__0__Impl
	rule__ResourceList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getResourceListAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceList__Group__1__Impl
	rule__ResourceList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getNamesAssignment_1()); }
(rule__ResourceList__NamesAssignment_1)
{ after(grammarAccess.getResourceListAccess().getNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceList__Group__2__Impl
	rule__ResourceList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getGroup_2()); }
(rule__ResourceList__Group_2__0)*
{ after(grammarAccess.getResourceListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getResourceListAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ResourceList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceList__Group_2__0__Impl
	rule__ResourceList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getResourceListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getNamesAssignment_2_1()); }
(rule__ResourceList__NamesAssignment_2_1)
{ after(grammarAccess.getResourceListAccess().getNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralList__Group__0__Impl
	rule__LiteralList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getLiteralListAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralList__Group__1__Impl
	rule__LiteralList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLiteralsAssignment_1()); }
(rule__LiteralList__LiteralsAssignment_1)
{ after(grammarAccess.getLiteralListAccess().getLiteralsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralList__Group__2__Impl
	rule__LiteralList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getGroup_2()); }
(rule__LiteralList__Group_2__0)*
{ after(grammarAccess.getLiteralListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getLiteralListAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LiteralList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralList__Group_2__0__Impl
	rule__LiteralList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLiteralListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLiteralsAssignment_2_1()); }
(rule__LiteralList__LiteralsAssignment_2_1)
{ after(grammarAccess.getLiteralListAccess().getLiteralsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExistingResourceList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingResourceList__Group__0__Impl
	rule__ExistingResourceList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getExistingResourceListAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingResourceList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingResourceList__Group__1__Impl
	rule__ExistingResourceList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getNamesAssignment_1()); }
(rule__ExistingResourceList__NamesAssignment_1)
{ after(grammarAccess.getExistingResourceListAccess().getNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingResourceList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingResourceList__Group__2__Impl
	rule__ExistingResourceList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getGroup_2()); }
(rule__ExistingResourceList__Group_2__0)*
{ after(grammarAccess.getExistingResourceListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingResourceList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingResourceList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getExistingResourceListAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExistingResourceList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingResourceList__Group_2__0__Impl
	rule__ExistingResourceList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getExistingResourceListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingResourceList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingResourceList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getNamesAssignment_2_1()); }
(rule__ExistingResourceList__NamesAssignment_2_1)
{ after(grammarAccess.getExistingResourceListAccess().getNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceIdentifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_1__0__Impl
	rule__ResourceIdentifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getResourceBySetOpParserRuleCall_1_0()); }
	ruleResourceBySetOp
{ after(grammarAccess.getResourceIdentifierAccess().getResourceBySetOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getGroup_1_1()); }
(rule__ResourceIdentifier__Group_1_1__0)*
{ after(grammarAccess.getResourceIdentifierAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceIdentifier__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_1_1__0__Impl
	rule__ResourceIdentifier__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getResourceIdentifierAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_1_1__1__Impl
	rule__ResourceIdentifier__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeAssignment_1_1_1()); }
(rule__ResourceIdentifier__AnnTypeAssignment_1_1_1)
{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_1_1__2__Impl
	rule__ResourceIdentifier__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnContentAssignment_1_1_2()); }
(rule__ResourceIdentifier__AnnContentAssignment_1_1_2)
{ after(grammarAccess.getResourceIdentifierAccess().getAnnContentAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getRightParenthesisKeyword_1_1_3()); }

	')' 

{ after(grammarAccess.getResourceIdentifierAccess().getRightParenthesisKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ResourceIdentifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_2__0__Impl
	rule__ResourceIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getResourceByRestrictionParserRuleCall_2_0()); }
	ruleResourceByRestriction
{ after(grammarAccess.getResourceIdentifierAccess().getResourceByRestrictionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getGroup_2_1()); }
(rule__ResourceIdentifier__Group_2_1__0)*
{ after(grammarAccess.getResourceIdentifierAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceIdentifier__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_2_1__0__Impl
	rule__ResourceIdentifier__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getResourceIdentifierAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_2_1__1__Impl
	rule__ResourceIdentifier__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeAssignment_2_1_1()); }
(rule__ResourceIdentifier__AnnTypeAssignment_2_1_1)
{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_2_1__2__Impl
	rule__ResourceIdentifier__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnContentAssignment_2_1_2()); }
(rule__ResourceIdentifier__AnnContentAssignment_2_1_2)
{ after(grammarAccess.getResourceIdentifierAccess().getAnnContentAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceIdentifier__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceIdentifier__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getRightParenthesisKeyword_2_1_3()); }

	')' 

{ after(grammarAccess.getResourceIdentifierAccess().getRightParenthesisKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ResourceByRestriction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceByRestriction__Group__0__Impl
	rule__ResourceByRestriction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByRestriction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getResourceByRestrictionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceByRestriction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceByRestriction__Group__1__Impl
	rule__ResourceByRestriction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByRestriction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getPropNameAssignment_1()); }
(rule__ResourceByRestriction__PropNameAssignment_1)
{ after(grammarAccess.getResourceByRestrictionAccess().getPropNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceByRestriction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceByRestriction__Group__2__Impl
	rule__ResourceByRestriction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByRestriction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getCondAssignment_2()); }
(rule__ResourceByRestriction__CondAssignment_2)
{ after(grammarAccess.getResourceByRestrictionAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceByRestriction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceByRestriction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByRestriction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getResourceByRestrictionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnionResource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionResource__Group__0__Impl
	rule__UnionResource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getUnionResourceAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionResource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionResource__Group__1__Impl
	rule__UnionResource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getNamesAssignment_1()); }
(rule__UnionResource__NamesAssignment_1)
{ after(grammarAccess.getUnionResourceAccess().getNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionResource__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionResource__Group__2__Impl
	rule__UnionResource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnionResourceAccess().getGroup_2()); }
(rule__UnionResource__Group_2__0)
{ after(grammarAccess.getUnionResourceAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getUnionResourceAccess().getGroup_2()); }
(rule__UnionResource__Group_2__0)*
{ after(grammarAccess.getUnionResourceAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionResource__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionResource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getUnionResourceAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnionResource__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionResource__Group_2__0__Impl
	rule__UnionResource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getOpAssignment_2_0()); }
(rule__UnionResource__OpAssignment_2_0)
{ after(grammarAccess.getUnionResourceAccess().getOpAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionResource__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionResource__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getNamesAssignment_2_1()); }
(rule__UnionResource__NamesAssignment_2_1)
{ after(grammarAccess.getUnionResourceAccess().getNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntersectionResource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionResource__Group__0__Impl
	rule__IntersectionResource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getIntersectionResourceAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionResource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionResource__Group__1__Impl
	rule__IntersectionResource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getNamesAssignment_1()); }
(rule__IntersectionResource__NamesAssignment_1)
{ after(grammarAccess.getIntersectionResourceAccess().getNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionResource__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionResource__Group__2__Impl
	rule__IntersectionResource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIntersectionResourceAccess().getGroup_2()); }
(rule__IntersectionResource__Group_2__0)
{ after(grammarAccess.getIntersectionResourceAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getIntersectionResourceAccess().getGroup_2()); }
(rule__IntersectionResource__Group_2__0)*
{ after(grammarAccess.getIntersectionResourceAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionResource__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionResource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getIntersectionResourceAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntersectionResource__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionResource__Group_2__0__Impl
	rule__IntersectionResource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getOpAssignment_2_0()); }
(rule__IntersectionResource__OpAssignment_2_0)
{ after(grammarAccess.getIntersectionResourceAccess().getOpAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionResource__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionResource__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getNamesAssignment_2_1()); }
(rule__IntersectionResource__NamesAssignment_2_1)
{ after(grammarAccess.getIntersectionResourceAccess().getNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__0__Impl
	rule__ClassDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_0_0()); }
(rule__ClassDeclaration__ClassNameAssignment_0_0)
{ after(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__1__Impl
	rule__ClassDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIsKeyword_0_1()); }

	'is' 

{ after(grammarAccess.getClassDeclarationAccess().getIsKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__2__Impl
	rule__ClassDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getAKeyword_0_2()); }

	'a' 

{ after(grammarAccess.getClassDeclarationAccess().getAKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__3__Impl
	rule__ClassDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getTopLevelKeyword_0_3()); }
(
	'top-level' 
)?
{ after(grammarAccess.getClassDeclarationAccess().getTopLevelKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__4__Impl
	rule__ClassDeclaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_0_4()); }

	'class' 

{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__5__Impl
	rule__ClassDeclaration__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getMustBeOneOfAssignment_0_5()); }
(rule__ClassDeclaration__MustBeOneOfAssignment_0_5)?
{ after(grammarAccess.getClassDeclarationAccess().getMustBeOneOfAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__6__Impl
	rule__ClassDeclaration__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_0_6()); }
(rule__ClassDeclaration__DescribedByAssignment_0_6)*
{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_0_7()); }
	RULE_EOS
{ after(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ClassDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_1__0__Impl
	rule__ClassDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassListAssignment_1_0()); }
(rule__ClassDeclaration__ClassListAssignment_1_0)
{ after(grammarAccess.getClassDeclarationAccess().getClassListAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_1__1__Impl
	rule__ClassDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getAreKeyword_1_1()); }

	'are' 

{ after(grammarAccess.getClassDeclarationAccess().getAreKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_1__2__Impl
	rule__ClassDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getTopLevelKeyword_1_2()); }
(
	'top-level' 
)?
{ after(grammarAccess.getClassDeclarationAccess().getTopLevelKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_1__3__Impl
	rule__ClassDeclaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassesKeyword_1_3()); }

	'classes' 

{ after(grammarAccess.getClassDeclarationAccess().getClassesKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_1__4__Impl
	rule__ClassDeclaration__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_1_4()); }
(rule__ClassDeclaration__DescribedByAssignment_1_4)*
{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_1_5()); }
	RULE_EOS
{ after(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ClassDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__0__Impl
	rule__ClassDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_2_0()); }
(rule__ClassDeclaration__ClassNameAssignment_2_0)
{ after(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__1__Impl
	rule__ClassDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIsKeyword_2_1()); }

	'is' 

{ after(grammarAccess.getClassDeclarationAccess().getIsKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__2__Impl
	rule__ClassDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getAKeyword_2_2()); }

	'a' 

{ after(grammarAccess.getClassDeclarationAccess().getAKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__3__Impl
	rule__ClassDeclaration__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getTypeKeyword_2_3()); }

	'type' 

{ after(grammarAccess.getClassDeclarationAccess().getTypeKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__4__Impl
	rule__ClassDeclaration__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getOfKeyword_2_4()); }

	'of' 

{ after(grammarAccess.getClassDeclarationAccess().getOfKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__5__Impl
	rule__ClassDeclaration__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassIdentifierAssignment_2_5()); }
(rule__ClassDeclaration__ClassIdentifierAssignment_2_5)
{ after(grammarAccess.getClassDeclarationAccess().getClassIdentifierAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__6__Impl
	rule__ClassDeclaration__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getMustBeOneOfAssignment_2_6()); }
(rule__ClassDeclaration__MustBeOneOfAssignment_2_6)?
{ after(grammarAccess.getClassDeclarationAccess().getMustBeOneOfAssignment_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__7__Impl
	rule__ClassDeclaration__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_2_7()); }
(rule__ClassDeclaration__DescribedByAssignment_2_7)*
{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_2_8()); }
	RULE_EOS
{ after(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ClassDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__0__Impl
	rule__ClassDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassListAssignment_3_0()); }
(rule__ClassDeclaration__ClassListAssignment_3_0)
{ after(grammarAccess.getClassDeclarationAccess().getClassListAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__1__Impl
	rule__ClassDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getAreKeyword_3_1()); }

	'are' 

{ after(grammarAccess.getClassDeclarationAccess().getAreKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__2__Impl
	rule__ClassDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getTypesKeyword_3_2()); }

	'types' 

{ after(grammarAccess.getClassDeclarationAccess().getTypesKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__3__Impl
	rule__ClassDeclaration__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getOfKeyword_3_3()); }

	'of' 

{ after(grammarAccess.getClassDeclarationAccess().getOfKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__4__Impl
	rule__ClassDeclaration__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassIdentifierAssignment_3_4()); }
(rule__ClassDeclaration__ClassIdentifierAssignment_3_4)
{ after(grammarAccess.getClassDeclarationAccess().getClassIdentifierAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__5__Impl
	rule__ClassDeclaration__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_3_5()); }
(rule__ClassDeclaration__DescribedByAssignment_3_5)*
{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_3_6()); }
	RULE_EOS
{ after(grammarAccess.getClassDeclarationAccess().getEOSTerminalRuleCall_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EnumeratedInstances__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedInstances__Group__0__Impl
	rule__EnumeratedInstances__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getCommaKeyword_0()); }
(
	',' 
)?
{ after(grammarAccess.getEnumeratedInstancesAccess().getCommaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedInstances__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedInstances__Group__1__Impl
	rule__EnumeratedInstances__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getMustKeyword_1()); }

	'must' 

{ after(grammarAccess.getEnumeratedInstancesAccess().getMustKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedInstances__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedInstances__Group__2__Impl
	rule__EnumeratedInstances__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getBeKeyword_2()); }

	'be' 

{ after(grammarAccess.getEnumeratedInstancesAccess().getBeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedInstances__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedInstances__Group__3__Impl
	rule__EnumeratedInstances__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getOneKeyword_3()); }

	'one' 

{ after(grammarAccess.getEnumeratedInstancesAccess().getOneKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedInstances__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedInstances__Group__4__Impl
	rule__EnumeratedInstances__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getOfKeyword_4()); }

	'of' 

{ after(grammarAccess.getEnumeratedInstancesAccess().getOfKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedInstances__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedInstances__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getInstanceListAssignment_5()); }
(rule__EnumeratedInstances__InstanceListAssignment_5)
{ after(grammarAccess.getEnumeratedInstancesAccess().getInstanceListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AddlClassInfo__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_0__0__Impl
	rule__AddlClassInfo__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getCommaKeyword_0_0()); }
(
	',' 
)?
{ after(grammarAccess.getAddlClassInfoAccess().getCommaKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_0__1__Impl
	rule__AddlClassInfo__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getDescribedKeyword_0_1()); }

	'described' 

{ after(grammarAccess.getAddlClassInfoAccess().getDescribedKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_0__2__Impl
	rule__AddlClassInfo__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getByKeyword_0_2()); }

	'by' 

{ after(grammarAccess.getAddlClassInfoAccess().getByKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getAlternatives_0_3()); }
(rule__AddlClassInfo__Alternatives_0_3)
{ after(grammarAccess.getAddlClassInfoAccess().getAlternatives_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AddlClassInfo__Group_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_0_3_1__0__Impl
	rule__AddlClassInfo__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getPropertyNameAssignment_0_3_1_0()); }
(rule__AddlClassInfo__PropertyNameAssignment_0_3_1_0)
{ after(grammarAccess.getAddlClassInfoAccess().getPropertyNameAssignment_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getRangeAssignment_0_3_1_1()); }
(rule__AddlClassInfo__RangeAssignment_0_3_1_1)
{ after(grammarAccess.getAddlClassInfoAccess().getRangeAssignment_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddlClassInfo__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_1__0__Impl
	rule__AddlClassInfo__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getCommaKeyword_1_0()); }
(
	',' 
)?
{ after(grammarAccess.getAddlClassInfoAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_1__1__Impl
	rule__AddlClassInfo__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getDescribedKeyword_1_1()); }

	'described' 

{ after(grammarAccess.getAddlClassInfoAccess().getDescribedKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_1__2__Impl
	rule__AddlClassInfo__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getByKeyword_1_2()); }

	'by' 

{ after(grammarAccess.getAddlClassInfoAccess().getByKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_1__3__Impl
	rule__AddlClassInfo__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getPropertyByNameAssignment_1_3()); }
(rule__AddlClassInfo__PropertyByNameAssignment_1_3)
{ after(grammarAccess.getAddlClassInfoAccess().getPropertyByNameAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddlClassInfo__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddlClassInfo__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getRestrictionAssignment_1_4()); }
(rule__AddlClassInfo__RestrictionAssignment_1_4)
{ after(grammarAccess.getAddlClassInfoAccess().getRestrictionAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Range__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getAlternatives_0()); }
(rule__Range__Alternatives_0)
{ after(grammarAccess.getRangeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getAlternatives_1()); }
(rule__Range__Alternatives_1)
{ after(grammarAccess.getRangeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__2__Impl
	rule__Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getOfKeyword_2()); }

	'of' 

{ after(grammarAccess.getRangeAccess().getOfKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__3__Impl
	rule__Range__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getTypeKeyword_3()); }

	'type' 

{ after(grammarAccess.getRangeAccess().getTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getTypeAssignment_4()); }
(rule__Range__TypeAssignment_4)
{ after(grammarAccess.getRangeAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Range__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_0__0__Impl
	rule__Range__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getAKeyword_1_0_0()); }

	'a' 

{ after(grammarAccess.getRangeAccess().getAKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_0__1__Impl
	rule__Range__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getSingleAssignment_1_0_1()); }
(rule__Range__SingleAssignment_1_0_1)
{ after(grammarAccess.getRangeAccess().getSingleAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getValueKeyword_1_0_2()); }

	'value' 

{ after(grammarAccess.getRangeAccess().getValueKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Range__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_1__0__Impl
	rule__Range__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getAlternatives_1_1_0()); }
(rule__Range__Alternatives_1_1_0)
{ after(grammarAccess.getRangeAccess().getAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_1__1__Impl
	rule__Range__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getOfKeyword_1_1_1()); }

	'of' 

{ after(grammarAccess.getRangeAccess().getOfKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getValuesKeyword_1_1_2()); }

	'values' 

{ after(grammarAccess.getRangeAccess().getValuesKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Range__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_1_0_0__0__Impl
	rule__Range__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getAKeyword_1_1_0_0_0()); }

	'a' 

{ after(grammarAccess.getRangeAccess().getAKeyword_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getListAssignment_1_1_0_0_1()); }
(rule__Range__ListAssignment_1_1_0_0_1)
{ after(grammarAccess.getRangeAccess().getListAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UserDefinedDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedDataType__Group__0__Impl
	rule__UserDefinedDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getDataKeyword_0()); }

	'data' 

{ after(grammarAccess.getUserDefinedDataTypeAccess().getDataKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedDataType__Group__1__Impl
	rule__UserDefinedDataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getTypeKeyword_1()); }

	'type' 

{ after(grammarAccess.getUserDefinedDataTypeAccess().getTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedDataType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedDataType__Group__2__Impl
	rule__UserDefinedDataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getUserDefinedDataTypeAssignment_2()); }
(rule__UserDefinedDataType__UserDefinedDataTypeAssignment_2)
{ after(grammarAccess.getUserDefinedDataTypeAccess().getUserDefinedDataTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedDataType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedDataType__Group__3__Impl
	rule__UserDefinedDataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getIsKeyword_3()); }

	'is' 

{ after(grammarAccess.getUserDefinedDataTypeAccess().getIsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedDataType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedDataType__Group__4__Impl
	rule__UserDefinedDataType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getRestrictionAssignment_4()); }
(rule__UserDefinedDataType__RestrictionAssignment_4)
{ after(grammarAccess.getUserDefinedDataTypeAccess().getRestrictionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserDefinedDataType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserDefinedDataType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getEOSTerminalRuleCall_5()); }
	RULE_EOS
{ after(grammarAccess.getUserDefinedDataTypeAccess().getEOSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DataTypeRestriction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_0__0__Impl
	rule__DataTypeRestriction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getAlternatives_0_0()); }
(rule__DataTypeRestriction__Alternatives_0_0)?
{ after(grammarAccess.getDataTypeRestrictionAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeRestriction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_0__1__Impl
	rule__DataTypeRestriction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getBasetypeAssignment_0_1()); }
(rule__DataTypeRestriction__BasetypeAssignment_0_1)
{ after(grammarAccess.getDataTypeRestrictionAccess().getBasetypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeRestriction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getFacetsAssignment_0_2()); }
(rule__DataTypeRestriction__FacetsAssignment_0_2)
{ after(grammarAccess.getDataTypeRestrictionAccess().getFacetsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataTypeRestriction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_1__0__Impl
	rule__DataTypeRestriction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getDataTypeRestrictionAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeRestriction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_1__1__Impl
	rule__DataTypeRestriction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getBasetypesAssignment_1_1()); }
(rule__DataTypeRestriction__BasetypesAssignment_1_1)
{ after(grammarAccess.getDataTypeRestrictionAccess().getBasetypesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeRestriction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_1__2__Impl
	rule__DataTypeRestriction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getGroup_1_2()); }
(rule__DataTypeRestriction__Group_1_2__0)
{ after(grammarAccess.getDataTypeRestrictionAccess().getGroup_1_2()); }
)
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getGroup_1_2()); }
(rule__DataTypeRestriction__Group_1_2__0)*
{ after(grammarAccess.getDataTypeRestrictionAccess().getGroup_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeRestriction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getDataTypeRestrictionAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeRestriction__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_1_2__0__Impl
	rule__DataTypeRestriction__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getAlternatives_1_2_0()); }
(rule__DataTypeRestriction__Alternatives_1_2_0)
{ after(grammarAccess.getDataTypeRestrictionAccess().getAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeRestriction__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeRestriction__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getBasetypesAssignment_1_2_1()); }
(rule__DataTypeRestriction__BasetypesAssignment_1_2_1)
{ after(grammarAccess.getDataTypeRestrictionAccess().getBasetypesAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Facets__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_0__0__Impl
	rule__Facets__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinexinAssignment_0_0()); }
(rule__Facets__MinexinAssignment_0_0)
{ after(grammarAccess.getFacetsAccess().getMinexinAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_0__1__Impl
	rule__Facets__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinAssignment_0_1()); }
(rule__Facets__MinAssignment_0_1)?
{ after(grammarAccess.getFacetsAccess().getMinAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_0__2__Impl
	rule__Facets__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getCommaKeyword_0_2()); }

	',' 

{ after(grammarAccess.getFacetsAccess().getCommaKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_0__3__Impl
	rule__Facets__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxAssignment_0_3()); }
(rule__Facets__MaxAssignment_0_3)?
{ after(grammarAccess.getFacetsAccess().getMaxAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxexinAssignment_0_4()); }
(rule__Facets__MaxexinAssignment_0_4)
{ after(grammarAccess.getFacetsAccess().getMaxexinAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Facets__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_2__0__Impl
	rule__Facets__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getLengthKeyword_2_0()); }

	'length' 

{ after(grammarAccess.getFacetsAccess().getLengthKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getAlternatives_2_1()); }
(rule__Facets__Alternatives_2_1)
{ after(grammarAccess.getFacetsAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Facets__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_2_1_1__0__Impl
	rule__Facets__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinlenAssignment_2_1_1_0()); }
(rule__Facets__MinlenAssignment_2_1_1_0)
{ after(grammarAccess.getFacetsAccess().getMinlenAssignment_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_2_1_1__1__Impl
	rule__Facets__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getHyphenMinusKeyword_2_1_1_1()); }

	'-' 

{ after(grammarAccess.getFacetsAccess().getHyphenMinusKeyword_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxlenAssignment_2_1_1_2()); }
(rule__Facets__MaxlenAssignment_2_1_1_2)
{ after(grammarAccess.getFacetsAccess().getMaxlenAssignment_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Facets__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_3__0__Impl
	rule__Facets__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getFacetsAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_3__1__Impl
	rule__Facets__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getValuesAssignment_3_1()); }
(rule__Facets__ValuesAssignment_3_1)
{ after(grammarAccess.getFacetsAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_3__2__Impl
	rule__Facets__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getGroup_3_2()); }
(rule__Facets__Group_3_2__0)*
{ after(grammarAccess.getFacetsAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getFacetsAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Facets__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_3_2__0__Impl
	rule__Facets__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getCommaKeyword_3_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getFacetsAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getValuesAssignment_3_2_1()); }
(rule__Facets__ValuesAssignment_3_2_1)
{ after(grammarAccess.getFacetsAccess().getValuesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EquivalentConcepts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__0__Impl
	rule__EquivalentConcepts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getClass1Assignment_0()); }
(rule__EquivalentConcepts__Class1Assignment_0)
{ after(grammarAccess.getEquivalentConceptsAccess().getClass1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquivalentConcepts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__1__Impl
	rule__EquivalentConcepts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getEquivalentConceptsAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquivalentConcepts__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__2__Impl
	rule__EquivalentConcepts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getTheKeyword_2()); }

	'the' 

{ after(grammarAccess.getEquivalentConceptsAccess().getTheKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquivalentConcepts__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__3__Impl
	rule__EquivalentConcepts__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getSameKeyword_3()); }

	'same' 

{ after(grammarAccess.getEquivalentConceptsAccess().getSameKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquivalentConcepts__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__4__Impl
	rule__EquivalentConcepts__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getAsKeyword_4()); }

	'as' 

{ after(grammarAccess.getEquivalentConceptsAccess().getAsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquivalentConcepts__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__5__Impl
	rule__EquivalentConcepts__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getClass2Assignment_5()); }
(rule__EquivalentConcepts__Class2Assignment_5)
{ after(grammarAccess.getEquivalentConceptsAccess().getClass2Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquivalentConcepts__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquivalentConcepts__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getEOSTerminalRuleCall_6()); }
	RULE_EOS
{ after(grammarAccess.getEquivalentConceptsAccess().getEOSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DisjointClasses__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_0__0__Impl
	rule__DisjointClasses__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getClass1Assignment_0_0()); }
(rule__DisjointClasses__Class1Assignment_0_0)
{ after(grammarAccess.getDisjointClassesAccess().getClass1Assignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_0__1__Impl
	rule__DisjointClasses__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getAndKeyword_0_1()); }

	'and' 

{ after(grammarAccess.getDisjointClassesAccess().getAndKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_0__2__Impl
	rule__DisjointClasses__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getClass2Assignment_0_2()); }
(rule__DisjointClasses__Class2Assignment_0_2)
{ after(grammarAccess.getDisjointClassesAccess().getClass2Assignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_0__3__Impl
	rule__DisjointClasses__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getAreKeyword_0_3()); }

	'are' 

{ after(grammarAccess.getDisjointClassesAccess().getAreKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_0__4__Impl
	rule__DisjointClasses__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getDisjointKeyword_0_4()); }

	'disjoint' 

{ after(grammarAccess.getDisjointClassesAccess().getDisjointKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getEOSTerminalRuleCall_0_5()); }
	RULE_EOS
{ after(grammarAccess.getDisjointClassesAccess().getEOSTerminalRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DisjointClasses__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_1__0__Impl
	rule__DisjointClasses__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getClassesAssignment_1_0()); }
(rule__DisjointClasses__ClassesAssignment_1_0)
{ after(grammarAccess.getDisjointClassesAccess().getClassesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_1__1__Impl
	rule__DisjointClasses__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getAreKeyword_1_1()); }

	'are' 

{ after(grammarAccess.getDisjointClassesAccess().getAreKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_1__2__Impl
	rule__DisjointClasses__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getDisjointKeyword_1_2()); }

	'disjoint' 

{ after(grammarAccess.getDisjointClassesAccess().getDisjointKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisjointClasses__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisjointClasses__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getDisjointClassesAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComplementOfClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__0__Impl
	rule__ComplementOfClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getClass1Assignment_0()); }
(rule__ComplementOfClass__Class1Assignment_0)
{ after(grammarAccess.getComplementOfClassAccess().getClass1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__1__Impl
	rule__ComplementOfClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getComplementOfClassAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__2__Impl
	rule__ComplementOfClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getTheKeyword_2()); }

	'the' 

{ after(grammarAccess.getComplementOfClassAccess().getTheKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__3__Impl
	rule__ComplementOfClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getSameKeyword_3()); }

	'same' 

{ after(grammarAccess.getComplementOfClassAccess().getSameKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__4__Impl
	rule__ComplementOfClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getAsKeyword_4()); }

	'as' 

{ after(grammarAccess.getComplementOfClassAccess().getAsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__5__Impl
	rule__ComplementOfClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getNotKeyword_5()); }

	'not' 

{ after(grammarAccess.getComplementOfClassAccess().getNotKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__6__Impl
	rule__ComplementOfClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getClass2Assignment_6()); }
(rule__ComplementOfClass__Class2Assignment_6)
{ after(grammarAccess.getComplementOfClassAccess().getClass2Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementOfClass__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplementOfClass__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getEOSTerminalRuleCall_7()); }
	RULE_EOS
{ after(grammarAccess.getComplementOfClassAccess().getEOSTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AllValuesFrom__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_0__0__Impl
	rule__AllValuesFrom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getRestrictedAssignment_0_0()); }
(rule__AllValuesFrom__RestrictedAssignment_0_0)
{ after(grammarAccess.getAllValuesFromAccess().getRestrictedAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesFrom__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_0__1__Impl
	rule__AllValuesFrom__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getCondAssignment_0_1()); }
(rule__AllValuesFrom__CondAssignment_0_1)
{ after(grammarAccess.getAllValuesFromAccess().getCondAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesFrom__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getAllValuesFromAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AllValuesFrom__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_1__0__Impl
	rule__AllValuesFrom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getClassNameAssignment_1_0()); }
(rule__AllValuesFrom__ClassNameAssignment_1_0)
{ after(grammarAccess.getAllValuesFromAccess().getClassNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesFrom__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_1__1__Impl
	rule__AllValuesFrom__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getPropertyNameAssignment_1_1()); }
(rule__AllValuesFrom__PropertyNameAssignment_1_1)
{ after(grammarAccess.getAllValuesFromAccess().getPropertyNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesFrom__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_1__2__Impl
	rule__AllValuesFrom__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getCondAssignment_1_2()); }
(rule__AllValuesFrom__CondAssignment_1_2)
{ after(grammarAccess.getAllValuesFromAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesFrom__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesFrom__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getAllValuesFromAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SomeValuesFrom__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_0__0__Impl
	rule__SomeValuesFrom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getRestrictedAssignment_0_0()); }
(rule__SomeValuesFrom__RestrictedAssignment_0_0)
{ after(grammarAccess.getSomeValuesFromAccess().getRestrictedAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesFrom__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_0__1__Impl
	rule__SomeValuesFrom__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getCondAssignment_0_1()); }
(rule__SomeValuesFrom__CondAssignment_0_1)
{ after(grammarAccess.getSomeValuesFromAccess().getCondAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesFrom__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getSomeValuesFromAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SomeValuesFrom__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_1__0__Impl
	rule__SomeValuesFrom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getClassNameAssignment_1_0()); }
(rule__SomeValuesFrom__ClassNameAssignment_1_0)
{ after(grammarAccess.getSomeValuesFromAccess().getClassNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesFrom__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_1__1__Impl
	rule__SomeValuesFrom__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getPropertyNameAssignment_1_1()); }
(rule__SomeValuesFrom__PropertyNameAssignment_1_1)
{ after(grammarAccess.getSomeValuesFromAccess().getPropertyNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesFrom__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_1__2__Impl
	rule__SomeValuesFrom__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getCondAssignment_1_2()); }
(rule__SomeValuesFrom__CondAssignment_1_2)
{ after(grammarAccess.getSomeValuesFromAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesFrom__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesFrom__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getSomeValuesFromAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__HasValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_0__0__Impl
	rule__HasValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getRestrictedAssignment_0_0()); }
(rule__HasValue__RestrictedAssignment_0_0)
{ after(grammarAccess.getHasValueAccess().getRestrictedAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_0__1__Impl
	rule__HasValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getCondAssignment_0_1()); }
(rule__HasValue__CondAssignment_0_1)
{ after(grammarAccess.getHasValueAccess().getCondAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValue__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getHasValueAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HasValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_1__0__Impl
	rule__HasValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getClassNameAssignment_1_0()); }
(rule__HasValue__ClassNameAssignment_1_0)
{ after(grammarAccess.getHasValueAccess().getClassNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_1__1__Impl
	rule__HasValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getPropertyNameAssignment_1_1()); }
(rule__HasValue__PropertyNameAssignment_1_1)
{ after(grammarAccess.getHasValueAccess().getPropertyNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_1__2__Impl
	rule__HasValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getCondAssignment_1_2()); }
(rule__HasValue__CondAssignment_1_2)
{ after(grammarAccess.getHasValueAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValue__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getHasValueAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Cardinality__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_0__0__Impl
	rule__Cardinality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getRestrictedAssignment_0_0()); }
(rule__Cardinality__RestrictedAssignment_0_0)
{ after(grammarAccess.getCardinalityAccess().getRestrictedAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_0__1__Impl
	rule__Cardinality__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getCondAssignment_0_1()); }
(rule__Cardinality__CondAssignment_0_1)
{ after(grammarAccess.getCardinalityAccess().getCondAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getCardinalityAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cardinality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__0__Impl
	rule__Cardinality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getClassNameAssignment_1_0()); }
(rule__Cardinality__ClassNameAssignment_1_0)
{ after(grammarAccess.getCardinalityAccess().getClassNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__1__Impl
	rule__Cardinality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getPropertyNameAssignment_1_1()); }
(rule__Cardinality__PropertyNameAssignment_1_1)
{ after(grammarAccess.getCardinalityAccess().getPropertyNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__2__Impl
	rule__Cardinality__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getCondAssignment_1_2()); }
(rule__Cardinality__CondAssignment_1_2)
{ after(grammarAccess.getCardinalityAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getCardinalityAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MinCardinality__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_0__0__Impl
	rule__MinCardinality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getRestrictedAssignment_0_0()); }
(rule__MinCardinality__RestrictedAssignment_0_0)
{ after(grammarAccess.getMinCardinalityAccess().getRestrictedAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardinality__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_0__1__Impl
	rule__MinCardinality__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getCondAssignment_0_1()); }
(rule__MinCardinality__CondAssignment_0_1)
{ after(grammarAccess.getMinCardinalityAccess().getCondAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardinality__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getMinCardinalityAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MinCardinality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_1__0__Impl
	rule__MinCardinality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getClassNameAssignment_1_0()); }
(rule__MinCardinality__ClassNameAssignment_1_0)
{ after(grammarAccess.getMinCardinalityAccess().getClassNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardinality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_1__1__Impl
	rule__MinCardinality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getPropertyNameAssignment_1_1()); }
(rule__MinCardinality__PropertyNameAssignment_1_1)
{ after(grammarAccess.getMinCardinalityAccess().getPropertyNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardinality__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_1__2__Impl
	rule__MinCardinality__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getCondAssignment_1_2()); }
(rule__MinCardinality__CondAssignment_1_2)
{ after(grammarAccess.getMinCardinalityAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardinality__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardinality__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getMinCardinalityAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MaxCardinality__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_0__0__Impl
	rule__MaxCardinality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getRestrictedAssignment_0_0()); }
(rule__MaxCardinality__RestrictedAssignment_0_0)
{ after(grammarAccess.getMaxCardinalityAccess().getRestrictedAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardinality__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_0__1__Impl
	rule__MaxCardinality__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getCondAssignment_0_1()); }
(rule__MaxCardinality__CondAssignment_0_1)
{ after(grammarAccess.getMaxCardinalityAccess().getCondAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardinality__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getMaxCardinalityAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MaxCardinality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_1__0__Impl
	rule__MaxCardinality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getClassNameAssignment_1_0()); }
(rule__MaxCardinality__ClassNameAssignment_1_0)
{ after(grammarAccess.getMaxCardinalityAccess().getClassNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardinality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_1__1__Impl
	rule__MaxCardinality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getPropertyNameAssignment_1_1()); }
(rule__MaxCardinality__PropertyNameAssignment_1_1)
{ after(grammarAccess.getMaxCardinalityAccess().getPropertyNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardinality__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_1__2__Impl
	rule__MaxCardinality__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getCondAssignment_1_2()); }
(rule__MaxCardinality__CondAssignment_1_2)
{ after(grammarAccess.getMaxCardinalityAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardinality__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardinality__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getMaxCardinalityAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropertyOfClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyOfClass__Group__0__Impl
	rule__PropertyOfClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyOfClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyOfClassAccess().getPropertyNameAssignment_0()); }
(rule__PropertyOfClass__PropertyNameAssignment_0)
{ after(grammarAccess.getPropertyOfClassAccess().getPropertyNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyOfClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyOfClass__Group__1__Impl
	rule__PropertyOfClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyOfClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyOfClassAccess().getOfKeyword_1()); }

	'of' 

{ after(grammarAccess.getPropertyOfClassAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyOfClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyOfClass__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyOfClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyOfClassAccess().getClassNameAssignment_2()); }
(rule__PropertyOfClass__ClassNameAssignment_2)
{ after(grammarAccess.getPropertyOfClassAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AllValuesCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesCondition__Group__0__Impl
	rule__AllValuesCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getOnlyKeyword_0()); }

	'only' 

{ after(grammarAccess.getAllValuesConditionAccess().getOnlyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesCondition__Group__1__Impl
	rule__AllValuesCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getHasKeyword_1()); }

	'has' 

{ after(grammarAccess.getAllValuesConditionAccess().getHasKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesCondition__Group__2__Impl
	rule__AllValuesCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getValuesKeyword_2()); }

	'values' 

{ after(grammarAccess.getAllValuesConditionAccess().getValuesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesCondition__Group__3__Impl
	rule__AllValuesCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getOfKeyword_3()); }

	'of' 

{ after(grammarAccess.getAllValuesConditionAccess().getOfKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesCondition__Group__4__Impl
	rule__AllValuesCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getTypeKeyword_4()); }

	'type' 

{ after(grammarAccess.getAllValuesConditionAccess().getTypeKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllValuesCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllValuesCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getRestrictionAssignment_5()); }
(rule__AllValuesCondition__RestrictionAssignment_5)
{ after(grammarAccess.getAllValuesConditionAccess().getRestrictionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumeratedAllValuesFrom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__0__Impl
	rule__EnumeratedAllValuesFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getRestrictedAssignment_0()); }
(rule__EnumeratedAllValuesFrom__RestrictedAssignment_0)
{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getRestrictedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__1__Impl
	rule__EnumeratedAllValuesFrom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getCanKeyword_1()); }

	'can' 

{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getCanKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__2__Impl
	rule__EnumeratedAllValuesFrom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getOnlyKeyword_2()); }

	'only' 

{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getOnlyKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__3__Impl
	rule__EnumeratedAllValuesFrom__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getBeKeyword_3()); }

	'be' 

{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getBeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__4__Impl
	rule__EnumeratedAllValuesFrom__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getOneKeyword_4()); }

	'one' 

{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getOneKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__5__Impl
	rule__EnumeratedAllValuesFrom__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getOfKeyword_5()); }

	'of' 

{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getOfKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__6__Impl
	rule__EnumeratedAllValuesFrom__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getAlternatives_6()); }
(rule__EnumeratedAllValuesFrom__Alternatives_6)
{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllValuesFrom__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllValuesFrom__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getEOSTerminalRuleCall_7()); }
	RULE_EOS
{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getEOSTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__EnumeratedAllAndSomeValuesFrom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__0__Impl
	rule__EnumeratedAllAndSomeValuesFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getRestrictedAssignment_0()); }
(rule__EnumeratedAllAndSomeValuesFrom__RestrictedAssignment_0)
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getRestrictedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllAndSomeValuesFrom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__1__Impl
	rule__EnumeratedAllAndSomeValuesFrom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getMustKeyword_1()); }

	'must' 

{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getMustKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllAndSomeValuesFrom__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__2__Impl
	rule__EnumeratedAllAndSomeValuesFrom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getBeKeyword_2()); }

	'be' 

{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getBeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllAndSomeValuesFrom__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__3__Impl
	rule__EnumeratedAllAndSomeValuesFrom__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getOneKeyword_3()); }

	'one' 

{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getOneKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllAndSomeValuesFrom__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__4__Impl
	rule__EnumeratedAllAndSomeValuesFrom__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getOfKeyword_4()); }

	'of' 

{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getOfKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllAndSomeValuesFrom__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__5__Impl
	rule__EnumeratedAllAndSomeValuesFrom__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getAlternatives_5()); }
(rule__EnumeratedAllAndSomeValuesFrom__Alternatives_5)
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedAllAndSomeValuesFrom__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedAllAndSomeValuesFrom__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEOSTerminalRuleCall_6()); }
	RULE_EOS
{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEOSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DefaultValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__0__Impl
	rule__DefaultValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getDefValueClassAssignment_0()); }
(rule__DefaultValue__DefValueClassAssignment_0)
{ after(grammarAccess.getDefaultValueAccess().getDefValueClassAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__1__Impl
	rule__DefaultValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getHasKeyword_1()); }

	'has' 

{ after(grammarAccess.getDefaultValueAccess().getHasKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__2__Impl
	rule__DefaultValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getGroup_2()); }
(rule__DefaultValue__Group_2__0)?
{ after(grammarAccess.getDefaultValueAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__3__Impl
	rule__DefaultValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getDefaultKeyword_3()); }

	'default' 

{ after(grammarAccess.getDefaultValueAccess().getDefaultKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__4__Impl
	rule__DefaultValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getDefValueAssignment_4()); }
(rule__DefaultValue__DefValueAssignment_4)
{ after(grammarAccess.getDefaultValueAccess().getDefValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getEOSTerminalRuleCall_5()); }
	RULE_EOS
{ after(grammarAccess.getDefaultValueAccess().getEOSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DefaultValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_2__0__Impl
	rule__DefaultValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLevelKeyword_2_0()); }

	'level' 

{ after(grammarAccess.getDefaultValueAccess().getLevelKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLevelAssignment_2_1()); }
(rule__DefaultValue__LevelAssignment_2_1)
{ after(grammarAccess.getDefaultValueAccess().getLevelAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SomeValuesCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group__0__Impl
	rule__SomeValuesCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getAlternatives_0()); }
(rule__SomeValuesCondition__Alternatives_0)
{ after(grammarAccess.getSomeValuesConditionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group__1__Impl
	rule__SomeValuesCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getAtKeyword_1()); }

	'at' 

{ after(grammarAccess.getSomeValuesConditionAccess().getAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group__2__Impl
	rule__SomeValuesCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getLeastKeyword_2()); }

	'least' 

{ after(grammarAccess.getSomeValuesConditionAccess().getLeastKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group__3__Impl
	rule__SomeValuesCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getOneKeyword_3()); }

	'one' 

{ after(grammarAccess.getSomeValuesConditionAccess().getOneKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group__4__Impl
	rule__SomeValuesCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getValueKeyword_4()); }

	'value' 

{ after(grammarAccess.getSomeValuesConditionAccess().getValueKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getAlternatives_5()); }
(rule__SomeValuesCondition__Alternatives_5)
{ after(grammarAccess.getSomeValuesConditionAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SomeValuesCondition__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_0__0__Impl
	rule__SomeValuesCondition__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getOfKeyword_5_0_0()); }

	'of' 

{ after(grammarAccess.getSomeValuesConditionAccess().getOfKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_0__1__Impl
	rule__SomeValuesCondition__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getTypeKeyword_5_0_1()); }

	'type' 

{ after(grammarAccess.getSomeValuesConditionAccess().getTypeKeyword_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getRestrictionAssignment_5_0_2()); }
(rule__SomeValuesCondition__RestrictionAssignment_5_0_2)
{ after(grammarAccess.getSomeValuesConditionAccess().getRestrictionAssignment_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SomeValuesCondition__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_1__0__Impl
	rule__SomeValuesCondition__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getEachKeyword_5_1_0()); }

	'each' 

{ after(grammarAccess.getSomeValuesConditionAccess().getEachKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_1__1__Impl
	rule__SomeValuesCondition__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getOfKeyword_5_1_1()); }

	'of' 

{ after(grammarAccess.getSomeValuesConditionAccess().getOfKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_1__2__Impl
	rule__SomeValuesCondition__Group_5_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getTypesKeyword_5_1_2()); }

	'types' 

{ after(grammarAccess.getSomeValuesConditionAccess().getTypesKeyword_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeValuesCondition__Group_5_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeValuesCondition__Group_5_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__Group_5_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getRestrictionAssignment_5_1_3()); }
(rule__SomeValuesCondition__RestrictionAssignment_5_1_3)
{ after(grammarAccess.getSomeValuesConditionAccess().getRestrictionAssignment_5_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__HasValueCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValueCondition__Group__0__Impl
	rule__HasValueCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValueCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueConditionAccess().getAlwaysKeyword_0()); }

	'always' 

{ after(grammarAccess.getHasValueConditionAccess().getAlwaysKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValueCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValueCondition__Group__1__Impl
	rule__HasValueCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValueCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueConditionAccess().getAlternatives_1()); }
(rule__HasValueCondition__Alternatives_1)
{ after(grammarAccess.getHasValueConditionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValueCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValueCondition__Group__2__Impl
	rule__HasValueCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValueCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueConditionAccess().getValueKeyword_2()); }

	'value' 

{ after(grammarAccess.getHasValueConditionAccess().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasValueCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasValueCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasValueCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueConditionAccess().getRestrictionAssignment_3()); }
(rule__HasValueCondition__RestrictionAssignment_3)
{ after(grammarAccess.getHasValueConditionAccess().getRestrictionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MinCardCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group__0__Impl
	rule__MinCardCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getAlternatives_0()); }
(rule__MinCardCondition__Alternatives_0)
{ after(grammarAccess.getMinCardConditionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group__1__Impl
	rule__MinCardCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getAtKeyword_1()); }

	'at' 

{ after(grammarAccess.getMinCardConditionAccess().getAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group__2__Impl
	rule__MinCardCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getLeastKeyword_2()); }

	'least' 

{ after(grammarAccess.getMinCardConditionAccess().getLeastKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group__3__Impl
	rule__MinCardCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getCardAssignment_3()); }
(rule__MinCardCondition__CardAssignment_3)
{ after(grammarAccess.getMinCardConditionAccess().getCardAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group__4__Impl
	rule__MinCardCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getAlternatives_4()); }
(rule__MinCardCondition__Alternatives_4)
{ after(grammarAccess.getMinCardConditionAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getGroup_5()); }
(rule__MinCardCondition__Group_5__0)?
{ after(grammarAccess.getMinCardConditionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MinCardCondition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group_5__0__Impl
	rule__MinCardCondition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getOfKeyword_5_0()); }

	'of' 

{ after(grammarAccess.getMinCardConditionAccess().getOfKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group_5__1__Impl
	rule__MinCardCondition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getTypeKeyword_5_1()); }

	'type' 

{ after(grammarAccess.getMinCardConditionAccess().getTypeKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinCardCondition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinCardCondition__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getClassQualifierAssignment_5_2()); }
(rule__MinCardCondition__ClassQualifierAssignment_5_2)
{ after(grammarAccess.getMinCardConditionAccess().getClassQualifierAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MaxCardCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group__0__Impl
	rule__MaxCardCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getAlternatives_0()); }
(rule__MaxCardCondition__Alternatives_0)
{ after(grammarAccess.getMaxCardConditionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group__1__Impl
	rule__MaxCardCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getAtKeyword_1()); }

	'at' 

{ after(grammarAccess.getMaxCardConditionAccess().getAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group__2__Impl
	rule__MaxCardCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getMostKeyword_2()); }

	'most' 

{ after(grammarAccess.getMaxCardConditionAccess().getMostKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group__3__Impl
	rule__MaxCardCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getCardAssignment_3()); }
(rule__MaxCardCondition__CardAssignment_3)
{ after(grammarAccess.getMaxCardConditionAccess().getCardAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group__4__Impl
	rule__MaxCardCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getAlternatives_4()); }
(rule__MaxCardCondition__Alternatives_4)
{ after(grammarAccess.getMaxCardConditionAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getGroup_5()); }
(rule__MaxCardCondition__Group_5__0)?
{ after(grammarAccess.getMaxCardConditionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MaxCardCondition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group_5__0__Impl
	rule__MaxCardCondition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getOfKeyword_5_0()); }

	'of' 

{ after(grammarAccess.getMaxCardConditionAccess().getOfKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group_5__1__Impl
	rule__MaxCardCondition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getTypeKeyword_5_1()); }

	'type' 

{ after(grammarAccess.getMaxCardConditionAccess().getTypeKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxCardCondition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxCardCondition__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getClassQualifierAssignment_5_2()); }
(rule__MaxCardCondition__ClassQualifierAssignment_5_2)
{ after(grammarAccess.getMaxCardConditionAccess().getClassQualifierAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CardCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group__0__Impl
	rule__CardCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getAlternatives_0()); }
(rule__CardCondition__Alternatives_0)
{ after(grammarAccess.getCardConditionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CardCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group__1__Impl
	rule__CardCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getExactlyKeyword_1()); }

	'exactly' 

{ after(grammarAccess.getCardConditionAccess().getExactlyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CardCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group__2__Impl
	rule__CardCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getCardAssignment_2()); }
(rule__CardCondition__CardAssignment_2)
{ after(grammarAccess.getCardConditionAccess().getCardAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CardCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group__3__Impl
	rule__CardCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getAlternatives_3()); }
(rule__CardCondition__Alternatives_3)
{ after(grammarAccess.getCardConditionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CardCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getGroup_4()); }
(rule__CardCondition__Group_4__0)?
{ after(grammarAccess.getCardConditionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CardCondition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group_4__0__Impl
	rule__CardCondition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getOfKeyword_4_0()); }

	'of' 

{ after(grammarAccess.getCardConditionAccess().getOfKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CardCondition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group_4__1__Impl
	rule__CardCondition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getTypeKeyword_4_1()); }

	'type' 

{ after(grammarAccess.getCardConditionAccess().getTypeKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CardCondition__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CardCondition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getClassQualifierAssignment_4_2()); }
(rule__CardCondition__ClassQualifierAssignment_4_2)
{ after(grammarAccess.getCardConditionAccess().getClassQualifierAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NecessaryAndSufficient__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__0__Impl
	rule__NecessaryAndSufficient__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getSuperClassAssignment_0()); }
(rule__NecessaryAndSufficient__SuperClassAssignment_0)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getSuperClassAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__1__Impl
	rule__NecessaryAndSufficient__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getNecessaryAndSufficientAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__2__Impl
	rule__NecessaryAndSufficient__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getArticleAssignment_2()); }
(rule__NecessaryAndSufficient__ArticleAssignment_2)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getArticleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__3__Impl
	rule__NecessaryAndSufficient__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getSubClassAssignment_3()); }
(rule__NecessaryAndSufficient__SubClassAssignment_3)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getSubClassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__4__Impl
	rule__NecessaryAndSufficient__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getOnlyKeyword_4()); }

	'only' 

{ after(grammarAccess.getNecessaryAndSufficientAccess().getOnlyKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__5__Impl
	rule__NecessaryAndSufficient__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getIfKeyword_5()); }

	'if' 

{ after(grammarAccess.getNecessaryAndSufficientAccess().getIfKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__6__Impl
	rule__NecessaryAndSufficient__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameAssignment_6()); }
(rule__NecessaryAndSufficient__PropertyNameAssignment_6)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__7__Impl
	rule__NecessaryAndSufficient__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getCondAssignment_7()); }
(rule__NecessaryAndSufficient__CondAssignment_7)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getCondAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__8__Impl
	rule__NecessaryAndSufficient__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getGroup_8()); }
(rule__NecessaryAndSufficient__Group_8__0)*
{ after(grammarAccess.getNecessaryAndSufficientAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getEOSTerminalRuleCall_9()); }
	RULE_EOS
{ after(grammarAccess.getNecessaryAndSufficientAccess().getEOSTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__NecessaryAndSufficient__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group_8__0__Impl
	rule__NecessaryAndSufficient__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getAndKeyword_8_0()); }

	'and' 

{ after(grammarAccess.getNecessaryAndSufficientAccess().getAndKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group_8__1__Impl
	rule__NecessaryAndSufficient__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameAssignment_8_1()); }
(rule__NecessaryAndSufficient__PropertyNameAssignment_8_1)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NecessaryAndSufficient__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NecessaryAndSufficient__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getCondAssignment_8_2()); }
(rule__NecessaryAndSufficient__CondAssignment_8_2)
{ after(grammarAccess.getNecessaryAndSufficientAccess().getCondAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0__0__Impl
	rule__PropertyDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getPropertyNameAssignment_0_0()); }
(rule__PropertyDeclaration__PropertyNameAssignment_0_0)
{ after(grammarAccess.getPropertyDeclarationAccess().getPropertyNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0__1__Impl
	rule__PropertyDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup_0_1()); }
(rule__PropertyDeclaration__Group_0_1__0)?
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0__2__Impl
	rule__PropertyDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAssignment_0_2()); }
(rule__PropertyDeclaration__AddlPropInfoAssignment_0_2)
{ after(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAssignment_0_2()); }
)
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAssignment_0_2()); }
(rule__PropertyDeclaration__AddlPropInfoAssignment_0_2)*
{ after(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAssignment_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_0_3()); }
	RULE_EOS
{ after(grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropertyDeclaration__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0_1__0__Impl
	rule__PropertyDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsKeyword_0_1_0()); }

	'is' 

{ after(grammarAccess.getPropertyDeclarationAccess().getIsKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0_1__1__Impl
	rule__PropertyDeclaration__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAKeyword_0_1_1()); }

	'a' 

{ after(grammarAccess.getPropertyDeclarationAccess().getAKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0_1__2__Impl
	rule__PropertyDeclaration__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypeKeyword_0_1_2()); }

	'type' 

{ after(grammarAccess.getPropertyDeclarationAccess().getTypeKeyword_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0_1__3__Impl
	rule__PropertyDeclaration__Group_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getOfKeyword_0_1_3()); }

	'of' 

{ after(grammarAccess.getPropertyDeclarationAccess().getOfKeyword_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_0_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_0_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_0_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getSuperPropNameAssignment_0_1_4()); }
(rule__PropertyDeclaration__SuperPropNameAssignment_0_1_4)
{ after(grammarAccess.getPropertyDeclarationAccess().getSuperPropNameAssignment_0_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertyDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__0__Impl
	rule__PropertyDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getArticleAssignment_1_0()); }
(rule__PropertyDeclaration__ArticleAssignment_1_0)?
{ after(grammarAccess.getPropertyDeclarationAccess().getArticleAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__1__Impl
	rule__PropertyDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getRelationshipKeyword_1_1()); }

	'relationship' 

{ after(grammarAccess.getPropertyDeclarationAccess().getRelationshipKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__2__Impl
	rule__PropertyDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getOfKeyword_1_2()); }

	'of' 

{ after(grammarAccess.getPropertyDeclarationAccess().getOfKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__3__Impl
	rule__PropertyDeclaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getDomainAssignment_1_3()); }
(rule__PropertyDeclaration__DomainAssignment_1_3)
{ after(grammarAccess.getPropertyDeclarationAccess().getDomainAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__4__Impl
	rule__PropertyDeclaration__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getToKeyword_1_4()); }

	'to' 

{ after(grammarAccess.getPropertyDeclarationAccess().getToKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__5__Impl
	rule__PropertyDeclaration__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getRangeResourceAssignment_1_5()); }
(rule__PropertyDeclaration__RangeResourceAssignment_1_5)
{ after(grammarAccess.getPropertyDeclarationAccess().getRangeResourceAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__6__Impl
	rule__PropertyDeclaration__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsKeyword_1_6()); }

	'is' 

{ after(grammarAccess.getPropertyDeclarationAccess().getIsKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__7__Impl
	rule__PropertyDeclaration__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getPropertyNameAssignment_1_7()); }
(rule__PropertyDeclaration__PropertyNameAssignment_1_7)
{ after(grammarAccess.getPropertyDeclarationAccess().getPropertyNameAssignment_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_1_8()); }
	RULE_EOS
{ after(grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__PropertyDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__0__Impl
	rule__PropertyDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAnnotationPropertyAssignment_2_0()); }
(rule__PropertyDeclaration__AnnotationPropertyAssignment_2_0)
{ after(grammarAccess.getPropertyDeclarationAccess().getAnnotationPropertyAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__1__Impl
	rule__PropertyDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsKeyword_2_1()); }

	'is' 

{ after(grammarAccess.getPropertyDeclarationAccess().getIsKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__2__Impl
	rule__PropertyDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAKeyword_2_2()); }

	'a' 

{ after(grammarAccess.getPropertyDeclarationAccess().getAKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__3__Impl
	rule__PropertyDeclaration__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypeKeyword_2_3()); }

	'type' 

{ after(grammarAccess.getPropertyDeclarationAccess().getTypeKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__4__Impl
	rule__PropertyDeclaration__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getOfKeyword_2_4()); }

	'of' 

{ after(grammarAccess.getPropertyDeclarationAccess().getOfKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__5__Impl
	rule__PropertyDeclaration__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAnnotationKeyword_2_5()); }

	'annotation' 

{ after(grammarAccess.getPropertyDeclarationAccess().getAnnotationKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_2_6()); }
	RULE_EOS
{ after(grammarAccess.getPropertyDeclarationAccess().getEOSTerminalRuleCall_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AdditionalPropertyInfo__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_0__0__Impl
	rule__AdditionalPropertyInfo__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_0_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_0__1__Impl
	rule__AdditionalPropertyInfo__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getDescribesKeyword_0_1()); }

	'describes' 

{ after(grammarAccess.getAdditionalPropertyInfoAccess().getDescribesKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getDomainAssignment_0_2()); }
(rule__AdditionalPropertyInfo__DomainAssignment_0_2)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getDomainAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditionalPropertyInfo__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_1__0__Impl
	rule__AdditionalPropertyInfo__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_1_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCondAssignment_1_1()); }
(rule__AdditionalPropertyInfo__CondAssignment_1_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCondAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionalPropertyInfo__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_2__0__Impl
	rule__AdditionalPropertyInfo__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getRangeAssignment_2_1()); }
(rule__AdditionalPropertyInfo__RangeAssignment_2_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getRangeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionalPropertyInfo__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_3__0__Impl
	rule__AdditionalPropertyInfo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_3_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsfuncAssignment_3_1()); }
(rule__AdditionalPropertyInfo__IsfuncAssignment_3_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsfuncAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionalPropertyInfo__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_4__0__Impl
	rule__AdditionalPropertyInfo__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_4_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsinvfuncAssignment_4_1()); }
(rule__AdditionalPropertyInfo__IsinvfuncAssignment_4_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsinvfuncAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionalPropertyInfo__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_5__0__Impl
	rule__AdditionalPropertyInfo__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_5_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsSymAssignment_5_1()); }
(rule__AdditionalPropertyInfo__IsSymAssignment_5_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsSymAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionalPropertyInfo__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_6__0__Impl
	rule__AdditionalPropertyInfo__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_6_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsTransAssignment_6_1()); }
(rule__AdditionalPropertyInfo__IsTransAssignment_6_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsTransAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionalPropertyInfo__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_7__0__Impl
	rule__AdditionalPropertyInfo__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_7_0()); }
(
	',' 
)?
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalPropertyInfo__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionalPropertyInfo__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsInvOfAssignment_7_1()); }
(rule__AdditionalPropertyInfo__IsInvOfAssignment_7_1)
{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsInvOfAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionalProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalProperty__Group__0__Impl
	rule__FunctionalProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPropertyAccess().getPropertyNameAssignment_0()); }
(rule__FunctionalProperty__PropertyNameAssignment_0)
{ after(grammarAccess.getFunctionalPropertyAccess().getPropertyNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalProperty__Group__1__Impl
	rule__FunctionalProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPropertyAccess().getIsFunctionalParserRuleCall_1()); }
	ruleIsFunctional
{ after(grammarAccess.getFunctionalPropertyAccess().getIsFunctionalParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPropertyAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getFunctionalPropertyAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsFunctional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsFunctional__Group__0__Impl
	rule__IsFunctional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsFunctional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsFunctionalAccess().getHasKeyword_0()); }

	'has' 

{ after(grammarAccess.getIsFunctionalAccess().getHasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsFunctional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsFunctional__Group__1__Impl
	rule__IsFunctional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsFunctional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsFunctionalAccess().getAKeyword_1()); }

	'a' 

{ after(grammarAccess.getIsFunctionalAccess().getAKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsFunctional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsFunctional__Group__2__Impl
	rule__IsFunctional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsFunctional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsFunctionalAccess().getSingleKeyword_2()); }

	'single' 

{ after(grammarAccess.getIsFunctionalAccess().getSingleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsFunctional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsFunctional__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsFunctional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsFunctionalAccess().getValueKeyword_3()); }

	'value' 

{ after(grammarAccess.getIsFunctionalAccess().getValueKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InverseFunctionalProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InverseFunctionalProperty__Group__0__Impl
	rule__InverseFunctionalProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InverseFunctionalProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInverseFunctionalPropertyAccess().getPropertyNameAssignment_0()); }
(rule__InverseFunctionalProperty__PropertyNameAssignment_0)
{ after(grammarAccess.getInverseFunctionalPropertyAccess().getPropertyNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InverseFunctionalProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InverseFunctionalProperty__Group__1__Impl
	rule__InverseFunctionalProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InverseFunctionalProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInverseFunctionalPropertyAccess().getIsInverseFunctionalParserRuleCall_1()); }
	ruleIsInverseFunctional
{ after(grammarAccess.getInverseFunctionalPropertyAccess().getIsInverseFunctionalParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InverseFunctionalProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InverseFunctionalProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InverseFunctionalProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInverseFunctionalPropertyAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getInverseFunctionalPropertyAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsInverseFunctional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseFunctional__Group__0__Impl
	rule__IsInverseFunctional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseFunctional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseFunctionalAccess().getHasKeyword_0()); }

	'has' 

{ after(grammarAccess.getIsInverseFunctionalAccess().getHasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseFunctional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseFunctional__Group__1__Impl
	rule__IsInverseFunctional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseFunctional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseFunctionalAccess().getAKeyword_1()); }

	'a' 

{ after(grammarAccess.getIsInverseFunctionalAccess().getAKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseFunctional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseFunctional__Group__2__Impl
	rule__IsInverseFunctional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseFunctional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseFunctionalAccess().getSingleKeyword_2()); }

	'single' 

{ after(grammarAccess.getIsInverseFunctionalAccess().getSingleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseFunctional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseFunctional__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseFunctional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseFunctionalAccess().getSubjectKeyword_3()); }

	'subject' 

{ after(grammarAccess.getIsInverseFunctionalAccess().getSubjectKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SymmetricalProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricalProperty__Group__0__Impl
	rule__SymmetricalProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricalProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricalPropertyAccess().getPropertyNameAssignment_0()); }
(rule__SymmetricalProperty__PropertyNameAssignment_0)
{ after(grammarAccess.getSymmetricalPropertyAccess().getPropertyNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymmetricalProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricalProperty__Group__1__Impl
	rule__SymmetricalProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricalProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricalPropertyAccess().getIsSymmetricalParserRuleCall_1()); }
	ruleIsSymmetrical
{ after(grammarAccess.getSymmetricalPropertyAccess().getIsSymmetricalParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymmetricalProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricalProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricalProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricalPropertyAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getSymmetricalPropertyAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsSymmetrical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsSymmetrical__Group__0__Impl
	rule__IsSymmetrical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsSymmetrical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsSymmetricalAccess().getIsKeyword_0()); }

	'is' 

{ after(grammarAccess.getIsSymmetricalAccess().getIsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsSymmetrical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsSymmetrical__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsSymmetrical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsSymmetricalAccess().getSymmetricalKeyword_1()); }

	'symmetrical' 

{ after(grammarAccess.getIsSymmetricalAccess().getSymmetricalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitiveProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitiveProperty__Group__0__Impl
	rule__TransitiveProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitiveProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitivePropertyAccess().getPropertyNameAssignment_0()); }
(rule__TransitiveProperty__PropertyNameAssignment_0)
{ after(grammarAccess.getTransitivePropertyAccess().getPropertyNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitiveProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitiveProperty__Group__1__Impl
	rule__TransitiveProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitiveProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitivePropertyAccess().getIsTransitiveParserRuleCall_1()); }
	ruleIsTransitive
{ after(grammarAccess.getTransitivePropertyAccess().getIsTransitiveParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitiveProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitiveProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitiveProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitivePropertyAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getTransitivePropertyAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsTransitive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTransitive__Group__0__Impl
	rule__IsTransitive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTransitive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTransitiveAccess().getIsKeyword_0()); }

	'is' 

{ after(grammarAccess.getIsTransitiveAccess().getIsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsTransitive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTransitive__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTransitive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTransitiveAccess().getTransitiveKeyword_1()); }

	'transitive' 

{ after(grammarAccess.getIsTransitiveAccess().getTransitiveKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InverseProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InverseProperty__Group__0__Impl
	rule__InverseProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InverseProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInversePropertyAccess().getPropertyName1Assignment_0()); }
(rule__InverseProperty__PropertyName1Assignment_0)
{ after(grammarAccess.getInversePropertyAccess().getPropertyName1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InverseProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InverseProperty__Group__1__Impl
	rule__InverseProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InverseProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInversePropertyAccess().getInvOfAssignment_1()); }
(rule__InverseProperty__InvOfAssignment_1)
{ after(grammarAccess.getInversePropertyAccess().getInvOfAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InverseProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InverseProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InverseProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInversePropertyAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getInversePropertyAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsInverseOf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseOf__Group__0__Impl
	rule__IsInverseOf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseOf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseOfAccess().getIsKeyword_0()); }

	'is' 

{ after(grammarAccess.getIsInverseOfAccess().getIsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseOf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseOf__Group__1__Impl
	rule__IsInverseOf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseOf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseOfAccess().getTheKeyword_1()); }

	'the' 

{ after(grammarAccess.getIsInverseOfAccess().getTheKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseOf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseOf__Group__2__Impl
	rule__IsInverseOf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseOf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseOfAccess().getInverseKeyword_2()); }

	'inverse' 

{ after(grammarAccess.getIsInverseOfAccess().getInverseKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseOf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseOf__Group__3__Impl
	rule__IsInverseOf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseOf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseOfAccess().getOfKeyword_3()); }

	'of' 

{ after(grammarAccess.getIsInverseOfAccess().getOfKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsInverseOf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsInverseOf__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseOf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseOfAccess().getPropertyName2Assignment_4()); }
(rule__IsInverseOf__PropertyName2Assignment_4)
{ after(grammarAccess.getIsInverseOfAccess().getPropertyName2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypedBNode__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedBNode__Group_0__0__Impl
	rule__TypedBNode__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getArticleAssignment_0_0()); }
(rule__TypedBNode__ArticleAssignment_0_0)
{ after(grammarAccess.getTypedBNodeAccess().getArticleAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedBNode__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedBNode__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getClassIdentifierAssignment_0_1()); }
(rule__TypedBNode__ClassIdentifierAssignment_0_1)
{ after(grammarAccess.getTypedBNodeAccess().getClassIdentifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedBNode__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedBNode__Group_1__0__Impl
	rule__TypedBNode__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getArticleAssignment_1_0()); }
(rule__TypedBNode__ArticleAssignment_1_0)
{ after(grammarAccess.getTypedBNodeAccess().getArticleAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedBNode__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedBNode__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getClassIdentifierAssignment_1_1()); }
(rule__TypedBNode__ClassIdentifierAssignment_1_1)
{ after(grammarAccess.getTypedBNodeAccess().getClassIdentifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceDeclarationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclarationStatement__Group__0__Impl
	rule__InstanceDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclarationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationStatementAccess().getInstanceDeclarationParserRuleCall_0()); }
	ruleInstanceDeclaration
{ after(grammarAccess.getInstanceDeclarationStatementAccess().getInstanceDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclarationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclarationStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclarationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationStatementAccess().getEOSTerminalRuleCall_1()); }
	RULE_EOS
{ after(grammarAccess.getInstanceDeclarationStatementAccess().getEOSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group_0__0__Impl
	rule__InstanceDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getTypeDeclAssignment_0_0()); }
(rule__InstanceDeclaration__TypeDeclAssignment_0_0)
{ after(grammarAccess.getInstanceDeclarationAccess().getTypeDeclAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsAssignment_0_1()); }
(rule__InstanceDeclaration__AddlInfoItemsAssignment_0_1)*
{ after(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group_1__0__Impl
	rule__InstanceDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getArticleAssignment_1_0()); }
(rule__InstanceDeclaration__ArticleAssignment_1_0)
{ after(grammarAccess.getInstanceDeclarationAccess().getArticleAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group_1__1__Impl
	rule__InstanceDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getClassNameAssignment_1_1()); }
(rule__InstanceDeclaration__ClassNameAssignment_1_1)
{ after(grammarAccess.getInstanceDeclarationAccess().getClassNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group_1__2__Impl
	rule__InstanceDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getInstanceNameAssignment_1_2()); }
(rule__InstanceDeclaration__InstanceNameAssignment_1_2)?
{ after(grammarAccess.getInstanceDeclarationAccess().getInstanceNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsAssignment_1_3()); }
(rule__InstanceDeclaration__AddlInfoItemsAssignment_1_3)*
{ after(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getInstNameAssignment_0()); }
(rule__TypeDeclaration__InstNameAssignment_0)
{ after(grammarAccess.getTypeDeclarationAccess().getInstNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getTypeDeclarationAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2()); }
(rule__TypeDeclaration__TypeAssignment_2)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InstanceDifferentFrom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__0__Impl
	rule__InstanceDifferentFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getInstName1Assignment_0()); }
(rule__InstanceDifferentFrom__InstName1Assignment_0)
{ after(grammarAccess.getInstanceDifferentFromAccess().getInstName1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__1__Impl
	rule__InstanceDifferentFrom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getInstanceDifferentFromAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__2__Impl
	rule__InstanceDifferentFrom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getNotKeyword_2()); }

	'not' 

{ after(grammarAccess.getInstanceDifferentFromAccess().getNotKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__3__Impl
	rule__InstanceDifferentFrom__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getTheKeyword_3()); }

	'the' 

{ after(grammarAccess.getInstanceDifferentFromAccess().getTheKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__4__Impl
	rule__InstanceDifferentFrom__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getSameKeyword_4()); }

	'same' 

{ after(grammarAccess.getInstanceDifferentFromAccess().getSameKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__5__Impl
	rule__InstanceDifferentFrom__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getAsKeyword_5()); }

	'as' 

{ after(grammarAccess.getInstanceDifferentFromAccess().getAsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__6__Impl
	rule__InstanceDifferentFrom__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getInstName2Assignment_6()); }
(rule__InstanceDifferentFrom__InstName2Assignment_6)
{ after(grammarAccess.getInstanceDifferentFromAccess().getInstName2Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDifferentFrom__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDifferentFrom__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getEOSTerminalRuleCall_7()); }
	RULE_EOS
{ after(grammarAccess.getInstanceDifferentFromAccess().getEOSTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__InstancesAllDifferent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstancesAllDifferent__Group__0__Impl
	rule__InstancesAllDifferent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getInstancesAssignment_0()); }
(rule__InstancesAllDifferent__InstancesAssignment_0)
{ after(grammarAccess.getInstancesAllDifferentAccess().getInstancesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstancesAllDifferent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstancesAllDifferent__Group__1__Impl
	rule__InstancesAllDifferent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getAreKeyword_1()); }

	'are' 

{ after(grammarAccess.getInstancesAllDifferentAccess().getAreKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstancesAllDifferent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstancesAllDifferent__Group__2__Impl
	rule__InstancesAllDifferent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getNotKeyword_2()); }

	'not' 

{ after(grammarAccess.getInstancesAllDifferentAccess().getNotKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstancesAllDifferent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstancesAllDifferent__Group__3__Impl
	rule__InstancesAllDifferent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getTheKeyword_3()); }

	'the' 

{ after(grammarAccess.getInstancesAllDifferentAccess().getTheKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstancesAllDifferent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstancesAllDifferent__Group__4__Impl
	rule__InstancesAllDifferent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getSameKeyword_4()); }

	'same' 

{ after(grammarAccess.getInstancesAllDifferentAccess().getSameKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstancesAllDifferent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstancesAllDifferent__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getEOSTerminalRuleCall_5()); }
	RULE_EOS
{ after(grammarAccess.getInstancesAllDifferentAccess().getEOSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExistingInstanceAttribution__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_0__0__Impl
	rule__ExistingInstanceAttribution__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getSubjAssignment_0_0()); }
(rule__ExistingInstanceAttribution__SubjAssignment_0_0)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getSubjAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_0__1__Impl
	rule__ExistingInstanceAttribution__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsAssignment_0_1()); }
(rule__ExistingInstanceAttribution__AddlInfoItemsAssignment_0_1)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsAssignment_0_1()); }
)
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsAssignment_0_1()); }
(rule__ExistingInstanceAttribution__AddlInfoItemsAssignment_0_1)*
{ after(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_0_2()); }
	RULE_EOS
{ after(grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExistingInstanceAttribution__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_1__0__Impl
	rule__ExistingInstanceAttribution__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getPOfSAssignment_1_0()); }
(rule__ExistingInstanceAttribution__POfSAssignment_1_0)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getPOfSAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_1__1__Impl
	rule__ExistingInstanceAttribution__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getIsKeyword_1_1()); }

	'is' 

{ after(grammarAccess.getExistingInstanceAttributionAccess().getIsKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_1__2__Impl
	rule__ExistingInstanceAttribution__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getObjAssignment_1_2()); }
(rule__ExistingInstanceAttribution__ObjAssignment_1_2)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getObjAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_1_3()); }
	RULE_EOS
{ after(grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExistingInstanceAttribution__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_2__0__Impl
	rule__ExistingInstanceAttribution__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getObjAssignment_2_0()); }
(rule__ExistingInstanceAttribution__ObjAssignment_2_0)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getObjAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_2__1__Impl
	rule__ExistingInstanceAttribution__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getIsKeyword_2_1()); }

	'is' 

{ after(grammarAccess.getExistingInstanceAttributionAccess().getIsKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_2__2__Impl
	rule__ExistingInstanceAttribution__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getPOfSAssignment_2_2()); }
(rule__ExistingInstanceAttribution__POfSAssignment_2_2)
{ after(grammarAccess.getExistingInstanceAttributionAccess().getPOfSAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistingInstanceAttribution__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistingInstanceAttribution__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_2_3()); }
	RULE_EOS
{ after(grammarAccess.getExistingInstanceAttributionAccess().getEOSTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropValPartialTriple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group__0__Impl
	rule__PropValPartialTriple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getCommaKeyword_0()); }
(
	',' 
)?
{ after(grammarAccess.getPropValPartialTripleAccess().getCommaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropValPartialTriple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group__1__Impl
	rule__PropValPartialTriple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getAlternatives_1()); }
(rule__PropValPartialTriple__Alternatives_1)?
{ after(grammarAccess.getPropValPartialTripleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropValPartialTriple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group__2__Impl
	rule__PropValPartialTriple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getPropertyNameAssignment_2()); }
(rule__PropValPartialTriple__PropertyNameAssignment_2)
{ after(grammarAccess.getPropValPartialTripleAccess().getPropertyNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropValPartialTriple__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getAlternatives_3()); }
(rule__PropValPartialTriple__Alternatives_3)
{ after(grammarAccess.getPropValPartialTripleAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropValPartialTriple__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group_3_1__0__Impl
	rule__PropValPartialTriple__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getLeftParenthesisKeyword_3_1_0()); }

	'(' 

{ after(grammarAccess.getPropValPartialTripleAccess().getLeftParenthesisKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropValPartialTriple__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group_3_1__1__Impl
	rule__PropValPartialTriple__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getObjectValueBNodeAssignment_3_1_1()); }
(rule__PropValPartialTriple__ObjectValueBNodeAssignment_3_1_1)
{ after(grammarAccess.getPropValPartialTripleAccess().getObjectValueBNodeAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropValPartialTriple__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropValPartialTriple__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getRightParenthesisKeyword_3_1_2()); }

	')' 

{ after(grammarAccess.getPropValPartialTripleAccess().getRightParenthesisKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OfPatternReturningValues__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OfPatternReturningValues__Group_0__0__Impl
	rule__OfPatternReturningValues__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OfPatternReturningValues__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsAssignment_0_0()); }
(rule__OfPatternReturningValues__OfphrsAssignment_0_0)
{ after(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsAssignment_0_0()); }
)
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsAssignment_0_0()); }
(rule__OfPatternReturningValues__OfphrsAssignment_0_0)*
{ after(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsAssignment_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OfPatternReturningValues__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OfPatternReturningValues__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OfPatternReturningValues__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getSubjectAssignment_0_1()); }
(rule__OfPatternReturningValues__SubjectAssignment_0_1)
{ after(grammarAccess.getOfPatternReturningValuesAccess().getSubjectAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithChain__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithChain__Group_1__0__Impl
	rule__WithChain__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithChain__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithChainAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getWithChainAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithChain__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithChain__Group_1__1__Impl
	rule__WithChain__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithChain__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWithChainAccess().getWpsAssignment_1_1()); }
(rule__WithChain__WpsAssignment_1_1)
{ after(grammarAccess.getWithChainAccess().getWpsAssignment_1_1()); }
)
(
{ before(grammarAccess.getWithChainAccess().getWpsAssignment_1_1()); }
(rule__WithChain__WpsAssignment_1_1)*
{ after(grammarAccess.getWithChainAccess().getWpsAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithChain__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithChain__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithChain__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithChainAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getWithChainAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WithPhrase__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_0__0__Impl
	rule__WithPhrase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getCommaKeyword_0_0()); }
(
	',' 
)?
{ after(grammarAccess.getWithPhraseAccess().getCommaKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_0__1__Impl
	rule__WithPhrase__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getAlternatives_0_1()); }
(rule__WithPhrase__Alternatives_0_1)
{ after(grammarAccess.getWithPhraseAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_0__2__Impl
	rule__WithPhrase__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getPropertyNameAssignment_0_2()); }
(rule__WithPhrase__PropertyNameAssignment_0_2)
{ after(grammarAccess.getWithPhraseAccess().getPropertyNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueAssignment_0_3()); }
(rule__WithPhrase__ValueAssignment_0_3)
{ after(grammarAccess.getWithPhraseAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WithPhrase__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_1__0__Impl
	rule__WithPhrase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getCommaKeyword_1_0()); }
(
	',' 
)?
{ after(grammarAccess.getWithPhraseAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_1__1__Impl
	rule__WithPhrase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getAlternatives_1_1()); }
(rule__WithPhrase__Alternatives_1_1)
{ after(grammarAccess.getWithPhraseAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_1__2__Impl
	rule__WithPhrase__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getPropertyNameAssignment_1_2()); }
(rule__WithPhrase__PropertyNameAssignment_1_2)
{ after(grammarAccess.getWithPhraseAccess().getPropertyNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueAssignment_1_3()); }
(rule__WithPhrase__ValueAssignment_1_3)
{ after(grammarAccess.getWithPhraseAccess().getValueAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WithPhrase__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_2__0__Impl
	rule__WithPhrase__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getWithPhraseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_2__1__Impl
	rule__WithPhrase__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getAlternatives_2_1()); }
(rule__WithPhrase__Alternatives_2_1)
{ after(grammarAccess.getWithPhraseAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_2__2__Impl
	rule__WithPhrase__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getPropertyNameAssignment_2_2()); }
(rule__WithPhrase__PropertyNameAssignment_2_2)
{ after(grammarAccess.getWithPhraseAccess().getPropertyNameAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPhrase__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPhrase__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueAssignment_2_3()); }
(rule__WithPhrase__ValueAssignment_2_3)
{ after(grammarAccess.getWithPhraseAccess().getValueAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EmbeddedInstanceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedInstanceDeclaration__Group__0__Impl
	rule__EmbeddedInstanceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedInstanceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedInstanceDeclarationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getEmbeddedInstanceDeclarationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedInstanceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedInstanceDeclaration__Group__1__Impl
	rule__EmbeddedInstanceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedInstanceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedInstanceDeclarationAccess().getInstanceDeclarationParserRuleCall_1()); }
	ruleInstanceDeclaration
{ after(grammarAccess.getEmbeddedInstanceDeclarationAccess().getInstanceDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedInstanceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedInstanceDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedInstanceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedInstanceDeclarationAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getEmbeddedInstanceDeclarationAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MergedTriples__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedTriples__Group__0__Impl
	rule__MergedTriples__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedTriples__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedTriplesAccess().getOpsAssignment_0()); }
(rule__MergedTriples__OpsAssignment_0)*
{ after(grammarAccess.getMergedTriplesAccess().getOpsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedTriples__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedTriples__Group__1__Impl
	rule__MergedTriples__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedTriples__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedTriplesAccess().getPivotAssignment_1()); }
(rule__MergedTriples__PivotAssignment_1)
{ after(grammarAccess.getMergedTriplesAccess().getPivotAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedTriples__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedTriples__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedTriples__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedTriplesAccess().getWcsAssignment_2()); }
(rule__MergedTriples__WcsAssignment_2)*
{ after(grammarAccess.getMergedTriplesAccess().getWcsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OfPhrase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OfPhrase__Group__0__Impl
	rule__OfPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OfPhrase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPhraseAccess().getArticleAssignment_0()); }
(rule__OfPhrase__ArticleAssignment_0)?
{ after(grammarAccess.getOfPhraseAccess().getArticleAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OfPhrase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OfPhrase__Group__1__Impl
	rule__OfPhrase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OfPhrase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPhraseAccess().getPropertyNameAssignment_1()); }
(rule__OfPhrase__PropertyNameAssignment_1)
{ after(grammarAccess.getOfPhraseAccess().getPropertyNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OfPhrase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OfPhrase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OfPhrase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPhraseAccess().getOfKeyword_2()); }

	'of' 

{ after(grammarAccess.getOfPhraseAccess().getOfKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableList__Group__0__Impl
	rule__VariableList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getNamesAssignment_0()); }
(rule__VariableList__NamesAssignment_0)
{ after(grammarAccess.getVariableListAccess().getNamesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getGroup_1()); }
(rule__VariableList__Group_1__0)*
{ after(grammarAccess.getVariableListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableList__Group_1__0__Impl
	rule__VariableList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getCommaKeyword_1_0()); }
(
	',' 
)?
{ after(grammarAccess.getVariableListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getNamesAssignment_1_1()); }
(rule__VariableList__NamesAssignment_1_1)
{ after(grammarAccess.getVariableListAccess().getNamesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }

	'Rule' 

{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
(rule__Rule__NameAssignment_1)
{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getColonKeyword_2()); }
(
	':' 
)?
{ after(grammarAccess.getRuleAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_3()); }
(rule__Rule__Group_3__0)?
{ after(grammarAccess.getRuleAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_4()); }
(rule__Rule__Group_4__0)?
{ after(grammarAccess.getRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThenKeyword_5()); }

	'then' 

{ after(grammarAccess.getRuleAccess().getThenKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThensAssignment_6()); }
(rule__Rule__ThensAssignment_6)
{ after(grammarAccess.getRuleAccess().getThensAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getEOSTerminalRuleCall_7()); }
	RULE_EOS
{ after(grammarAccess.getRuleAccess().getEOSTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Rule__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_3__0__Impl
	rule__Rule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGivenKeyword_3_0()); }

	'given' 

{ after(grammarAccess.getRuleAccess().getGivenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGivensAssignment_3_1()); }
(rule__Rule__GivensAssignment_3_1)?
{ after(grammarAccess.getRuleAccess().getGivensAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__0__Impl
	rule__Rule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getIfKeyword_4_0()); }

	'if' 

{ after(grammarAccess.getRuleAccess().getIfKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getIfsAssignment_4_1()); }
(rule__Rule__IfsAssignment_4_1)?
{ after(grammarAccess.getRuleAccess().getIfsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Query__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getAskKeyword_0()); }

	'Ask:' 

{ after(grammarAccess.getQueryAccess().getAskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getExprAssignment_1()); }
(rule__Query__ExprAssignment_1)
{ after(grammarAccess.getQueryAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Query__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getQueryAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Test__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__0__Impl
	rule__Test__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getTestKeyword_0()); }

	'Test:' 

{ after(grammarAccess.getTestAccess().getTestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__1__Impl
	rule__Test__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getExprAssignment_1()); }
(rule__Test__ExprAssignment_1)
{ after(grammarAccess.getTestAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getTestAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__0__Impl
	rule__Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprKeyword_0()); }

	'Expr:' 

{ after(grammarAccess.getExprAccess().getExprKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__1__Impl
	rule__Expr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprAssignment_1()); }
(rule__Expr__ExprAssignment_1)
{ after(grammarAccess.getExprAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getEOSTerminalRuleCall_2()); }
	RULE_EOS
{ after(grammarAccess.getExprAccess().getEOSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Display__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group__0__Impl
	rule__Display__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getPrintKeyword_0()); }

	'Print:' 

{ after(grammarAccess.getDisplayAccess().getPrintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Display__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getAlternatives_1()); }
(rule__Display__Alternatives_1)
{ after(grammarAccess.getDisplayAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Display__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group_1_0__0__Impl
	rule__Display__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getDisplayStringAssignment_1_0_0()); }
(rule__Display__DisplayStringAssignment_1_0_0)
{ after(grammarAccess.getDisplayAccess().getDisplayStringAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Display__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_0_1()); }
	RULE_EOS
{ after(grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Display__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group_1_1__0__Impl
	rule__Display__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getModelAssignment_1_1_0()); }
(rule__Display__ModelAssignment_1_1_0)
{ after(grammarAccess.getDisplayAccess().getModelAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Display__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_1_1()); }
	RULE_EOS
{ after(grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Display__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group_1_2__0__Impl
	rule__Display__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getModelAssignment_1_2_0()); }
(rule__Display__ModelAssignment_1_2_0)
{ after(grammarAccess.getDisplayAccess().getModelAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Display__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Display__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_2_1()); }
	RULE_EOS
{ after(grammarAccess.getDisplayAccess().getEOSTerminalRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Explanation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group__0__Impl
	rule__Explanation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getExplainKeyword_0()); }

	'Explain:' 

{ after(grammarAccess.getExplanationAccess().getExplainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explanation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getAlternatives_1()); }
(rule__Explanation__Alternatives_1)
{ after(grammarAccess.getExplanationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Explanation__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_0__0__Impl
	rule__Explanation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getExprAssignment_1_0_0()); }
(rule__Explanation__ExprAssignment_1_0_0)
{ after(grammarAccess.getExplanationAccess().getExprAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explanation__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_0_1()); }
	RULE_EOS
{ after(grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Explanation__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_2__0__Impl
	rule__Explanation__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getExprAssignment_1_2_0()); }
(rule__Explanation__ExprAssignment_1_2_0)
{ after(grammarAccess.getExplanationAccess().getExprAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explanation__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_2_1()); }
	RULE_EOS
{ after(grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Explanation__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_3__0__Impl
	rule__Explanation__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getRuleKeyword_1_3_0()); }

	'Rule' 

{ after(grammarAccess.getExplanationAccess().getRuleKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explanation__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_3__1__Impl
	rule__Explanation__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getRulenameAssignment_1_3_1()); }
(rule__Explanation__RulenameAssignment_1_3_1)
{ after(grammarAccess.getExplanationAccess().getRulenameAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explanation__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explanation__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_3_2()); }
	RULE_EOS
{ after(grammarAccess.getExplanationAccess().getEOSTerminalRuleCall_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSet__Group__0__Impl
	rule__ElementSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSetAccess().getElementsAssignment_0()); }
(rule__ElementSet__ElementsAssignment_0)
{ after(grammarAccess.getElementSetAccess().getElementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSetAccess().getGroup_1()); }
(rule__ElementSet__Group_1__0)*
{ after(grammarAccess.getElementSetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementSet__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSet__Group_1__0__Impl
	rule__ElementSet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSet__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSetAccess().getCommaKeyword_1_0()); }
(
	',' 
)?
{ after(grammarAccess.getElementSetAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSet__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSet__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSet__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSetAccess().getElementsAssignment_1_1()); }
(rule__ElementSet__ElementsAssignment_1_1)
{ after(grammarAccess.getElementSetAccess().getElementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group__0__Impl
	rule__SelectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectExpressionAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group__1__Impl
	rule__SelectExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getDistinctAssignment_1()); }
(rule__SelectExpression__DistinctAssignment_1)?
{ after(grammarAccess.getSelectExpressionAccess().getDistinctAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group__2__Impl
	rule__SelectExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getAlternatives_2()); }
(rule__SelectExpression__Alternatives_2)
{ after(grammarAccess.getSelectExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group__3__Impl
	rule__SelectExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getWhereKeyword_3()); }

	'where' 

{ after(grammarAccess.getSelectExpressionAccess().getWhereKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group__4__Impl
	rule__SelectExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getExprAssignment_4()); }
(rule__SelectExpression__ExprAssignment_4)
{ after(grammarAccess.getSelectExpressionAccess().getExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getGroup_5()); }
(rule__SelectExpression__Group_5__0)?
{ after(grammarAccess.getSelectExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SelectExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group_5__0__Impl
	rule__SelectExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getOrderbyAssignment_5_0()); }
(rule__SelectExpression__OrderbyAssignment_5_0)
{ after(grammarAccess.getSelectExpressionAccess().getOrderbyAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getOrderListAssignment_5_1()); }
(rule__SelectExpression__OrderListAssignment_5_1)
{ after(grammarAccess.getSelectExpressionAccess().getOrderListAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructExpression__Group__0__Impl
	rule__ConstructExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getConstructKeyword_0()); }

	'construct' 

{ after(grammarAccess.getConstructExpressionAccess().getConstructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructExpression__Group__1__Impl
	rule__ConstructExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getSubjAssignment_1()); }
(rule__ConstructExpression__SubjAssignment_1)
{ after(grammarAccess.getConstructExpressionAccess().getSubjAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructExpression__Group__2__Impl
	rule__ConstructExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getPredAssignment_2()); }
(rule__ConstructExpression__PredAssignment_2)
{ after(grammarAccess.getConstructExpressionAccess().getPredAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructExpression__Group__3__Impl
	rule__ConstructExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getObjAssignment_3()); }
(rule__ConstructExpression__ObjAssignment_3)
{ after(grammarAccess.getConstructExpressionAccess().getObjAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructExpression__Group__4__Impl
	rule__ConstructExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getWhereKeyword_4()); }

	'where' 

{ after(grammarAccess.getConstructExpressionAccess().getWhereKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getExprAssignment_5()); }
(rule__ConstructExpression__ExprAssignment_5)
{ after(grammarAccess.getConstructExpressionAccess().getExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AskQueryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AskQueryExpression__Group__0__Impl
	rule__AskQueryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AskQueryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAskQueryExpressionAccess().getAskKeyword_0()); }

	'ask' 

{ after(grammarAccess.getAskQueryExpressionAccess().getAskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AskQueryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AskQueryExpression__Group__1__Impl
	rule__AskQueryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AskQueryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAskQueryExpressionAccess().getWhereKeyword_1()); }

	'where' 

{ after(grammarAccess.getAskQueryExpressionAccess().getWhereKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AskQueryExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AskQueryExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AskQueryExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAskQueryExpressionAccess().getExprAssignment_2()); }
(rule__AskQueryExpression__ExprAssignment_2)
{ after(grammarAccess.getAskQueryExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrderList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderList__Group__0__Impl
	rule__OrderList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderListAccess().getOrderListAssignment_0()); }
(rule__OrderList__OrderListAssignment_0)
{ after(grammarAccess.getOrderListAccess().getOrderListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderListAccess().getGroup_1()); }
(rule__OrderList__Group_1__0)*
{ after(grammarAccess.getOrderListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderList__Group_1__0__Impl
	rule__OrderList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderListAccess().getCommaKeyword_1_0()); }
(
	',' 
)?
{ after(grammarAccess.getOrderListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderListAccess().getOrderListAssignment_1_1()); }
(rule__OrderList__OrderListAssignment_1_1)
{ after(grammarAccess.getOrderListAccess().getOrderListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderElement__Group__0__Impl
	rule__OrderElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderElementAccess().getOrderAssignment_0()); }
(rule__OrderElement__OrderAssignment_0)?
{ after(grammarAccess.getOrderElementAccess().getOrderAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderElementAccess().getNameAssignment_1()); }
(rule__OrderElement__NameAssignment_1)
{ after(grammarAccess.getOrderElementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
(rule__OrExpression__OpAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
(rule__OrExpression__RightAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
(rule__AndExpression__OpAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1()); }
(rule__RelationalExpression__OpAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__RelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1()); }
(rule__AdditiveExpression__OpAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
(rule__AdditiveExpression__RightAssignment_1_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrPrimaryExpressionParserRuleCall_0()); }
	ruleUnaryOrPrimaryExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
(rule__MultiplicativeExpression__OpAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
(rule__MultiplicativeExpression__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotOnly__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotOnly__Group__0__Impl
	rule__NotOnly__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOnly__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOnlyAccess().getNotKeyword_0()); }

	'not' 

{ after(grammarAccess.getNotOnlyAccess().getNotKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotOnly__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotOnly__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOnly__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOnlyAccess().getOnlyKeyword_1()); }

	'only' 

{ after(grammarAccess.getNotOnlyAccess().getOnlyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOrPrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOrPrimaryExpression__Group_0__0__Impl
	rule__UnaryOrPrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getUnaryOpExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getUnaryOpExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOrPrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOrPrimaryExpression__Group_0__1__Impl
	rule__UnaryOrPrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpAssignment_0_1()); }
(rule__UnaryOrPrimaryExpression__OpAssignment_0_1)
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOrPrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOrPrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getExprAssignment_0_2()); }
(rule__UnaryOrPrimaryExpression__ExprAssignment_0_2)
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_0_1()); }
(rule__PrimaryExpression__ExprAssignment_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFuncAssignment_1_0()); }
(rule__PrimaryExpression__FuncAssignment_1_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getFuncAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
	rule__PrimaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2()); }
(rule__PrimaryExpression__Group_1_2__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2__0__Impl
	rule__PrimaryExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_1_2_0()); }
(rule__PrimaryExpression__ArgsAssignment_1_2_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_1()); }
(rule__PrimaryExpression__Group_1_2_1__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_1__0__Impl
	rule__PrimaryExpression__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_1_2_1_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_1_2_1_1()); }
(rule__PrimaryExpression__ArgsAssignment_1_2_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedOrExpression__Group__0__Impl
	rule__LimitedOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getLimitedAndExpressionParserRuleCall_0()); }
	ruleLimitedAndExpression
{ after(grammarAccess.getLimitedOrExpressionAccess().getLimitedAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getGroup_1()); }
(rule__LimitedOrExpression__Group_1__0)*
{ after(grammarAccess.getLimitedOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedOrExpression__Group_1__0__Impl
	rule__LimitedOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLimitedOrExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedOrExpression__Group_1__1__Impl
	rule__LimitedOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getOpAssignment_1_1()); }
(rule__LimitedOrExpression__OpAssignment_1_1)
{ after(grammarAccess.getLimitedOrExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getRightAssignment_1_2()); }
(rule__LimitedOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getLimitedOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAndExpression__Group__0__Impl
	rule__LimitedAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getLimitedRelationalExpressionParserRuleCall_0()); }
	ruleLimitedRelationalExpression
{ after(grammarAccess.getLimitedAndExpressionAccess().getLimitedRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getGroup_1()); }
(rule__LimitedAndExpression__Group_1__0)*
{ after(grammarAccess.getLimitedAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAndExpression__Group_1__0__Impl
	rule__LimitedAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLimitedAndExpressionAccess().getJunctionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAndExpression__Group_1__1__Impl
	rule__LimitedAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getOpAssignment_1_1()); }
(rule__LimitedAndExpression__OpAssignment_1_1)
{ after(grammarAccess.getLimitedAndExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getRightAssignment_1_2()); }
(rule__LimitedAndExpression__RightAssignment_1_2)
{ after(grammarAccess.getLimitedAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedRelationalExpression__Group__0__Impl
	rule__LimitedRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getLimitedAdditiveExpressionParserRuleCall_0()); }
	ruleLimitedAdditiveExpression
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getLimitedAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedRelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getGroup_1()); }
(rule__LimitedRelationalExpression__Group_1__0)*
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedRelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedRelationalExpression__Group_1__0__Impl
	rule__LimitedRelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedRelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedRelationalExpression__Group_1__1__Impl
	rule__LimitedRelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpAssignment_1_1()); }
(rule__LimitedRelationalExpression__OpAssignment_1_1)
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedRelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedRelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__LimitedRelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedAdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAdditiveExpression__Group__0__Impl
	rule__LimitedAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getLimitedMultiplicativeExpressionParserRuleCall_0()); }
	ruleLimitedMultiplicativeExpression
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getLimitedMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedAdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getGroup_1()); }
(rule__LimitedAdditiveExpression__Group_1__0)*
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedAdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAdditiveExpression__Group_1__0__Impl
	rule__LimitedAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedAdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAdditiveExpression__Group_1__1__Impl
	rule__LimitedAdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getOpAssignment_1_1()); }
(rule__LimitedAdditiveExpression__OpAssignment_1_1)
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedAdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedAdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getRightAssignment_1_2()); }
(rule__LimitedAdditiveExpression__RightAssignment_1_2)
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedMultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedMultiplicativeExpression__Group__0__Impl
	rule__LimitedMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getLimitedUnaryOrPrimaryExpressionParserRuleCall_0()); }
	ruleLimitedUnaryOrPrimaryExpression
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getLimitedUnaryOrPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedMultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedMultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getGroup_1()); }
(rule__LimitedMultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedMultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedMultiplicativeExpression__Group_1__0__Impl
	rule__LimitedMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getBinaryOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedMultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedMultiplicativeExpression__Group_1__1__Impl
	rule__LimitedMultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
(rule__LimitedMultiplicativeExpression__OpAssignment_1_1)
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedMultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedMultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
(rule__LimitedMultiplicativeExpression__RightAssignment_1_2)
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedUnaryOrPrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedUnaryOrPrimaryExpression__Group_0__0__Impl
	rule__LimitedUnaryOrPrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getUnaryOpExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getUnaryOpExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedUnaryOrPrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedUnaryOrPrimaryExpression__Group_0__1__Impl
	rule__LimitedUnaryOrPrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpAssignment_0_1()); }
(rule__LimitedUnaryOrPrimaryExpression__OpAssignment_0_1)
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedUnaryOrPrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedUnaryOrPrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getExprAssignment_0_2()); }
(rule__LimitedUnaryOrPrimaryExpression__ExprAssignment_0_2)
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedPrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_0__0__Impl
	rule__LimitedPrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_0__1__Impl
	rule__LimitedPrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getExprAssignment_0_1()); }
(rule__LimitedPrimaryExpression__ExprAssignment_0_1)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LimitedPrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1__0__Impl
	rule__LimitedPrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getFuncAssignment_1_0()); }
(rule__LimitedPrimaryExpression__FuncAssignment_1_0)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getFuncAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1__1__Impl
	rule__LimitedPrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1__2__Impl
	rule__LimitedPrimaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_1_2()); }
(rule__LimitedPrimaryExpression__Group_1_2__0)?
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LimitedPrimaryExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1_2__0__Impl
	rule__LimitedPrimaryExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsAssignment_1_2_0()); }
(rule__LimitedPrimaryExpression__ArgsAssignment_1_2_0)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_1_2_1()); }
(rule__LimitedPrimaryExpression__Group_1_2_1__0)*
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitedPrimaryExpression__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1_2_1__0__Impl
	rule__LimitedPrimaryExpression__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getCommaKeyword_1_2_1_0()); }

	',' 

{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getCommaKeyword_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitedPrimaryExpression__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitedPrimaryExpression__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsAssignment_1_2_1_1()); }
(rule__LimitedPrimaryExpression__ArgsAssignment_1_2_1_1)
{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsAssignment_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropOfSubj__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropOfSubj__Group__0__Impl
	rule__PropOfSubj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropOfSubj__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPropOfSubjAccess().getOfPhrAssignment_0()); }
(rule__PropOfSubj__OfPhrAssignment_0)
{ after(grammarAccess.getPropOfSubjAccess().getOfPhrAssignment_0()); }
)
(
{ before(grammarAccess.getPropOfSubjAccess().getOfPhrAssignment_0()); }
(rule__PropOfSubj__OfPhrAssignment_0)*
{ after(grammarAccess.getPropOfSubjAccess().getOfPhrAssignment_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropOfSubj__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropOfSubj__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropOfSubj__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropOfSubjAccess().getSubjAssignment_1()); }
(rule__PropOfSubj__SubjAssignment_1)
{ after(grammarAccess.getPropOfSubjAccess().getSubjAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubjProp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubjProp__Group__0__Impl
	rule__SubjProp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjProp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubjPropAccess().getSubjAssignment_0()); }
(rule__SubjProp__SubjAssignment_0)
{ after(grammarAccess.getSubjPropAccess().getSubjAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubjProp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubjProp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjProp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSubjPropAccess().getHwPhrAssignment_1()); }
(rule__SubjProp__HwPhrAssignment_1)
{ after(grammarAccess.getSubjPropAccess().getHwPhrAssignment_1()); }
)
(
{ before(grammarAccess.getSubjPropAccess().getHwPhrAssignment_1()); }
(rule__SubjProp__HwPhrAssignment_1)*
{ after(grammarAccess.getSubjPropAccess().getHwPhrAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstAttrSPV__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group__0__Impl
	rule__InstAttrSPV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getSubjAssignment_0()); }
(rule__InstAttrSPV__SubjAssignment_0)
{ after(grammarAccess.getInstAttrSPVAccess().getSubjAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group__1__Impl
	rule__InstAttrSPV__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getAlternatives_1()); }
(rule__InstAttrSPV__Alternatives_1)?
{ after(grammarAccess.getInstAttrSPVAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group__2__Impl
	rule__InstAttrSPV__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getPropsAssignment_2()); }
(rule__InstAttrSPV__PropsAssignment_2)
{ after(grammarAccess.getInstAttrSPVAccess().getPropsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group__3__Impl
	rule__InstAttrSPV__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getValsAssignment_3()); }
(rule__InstAttrSPV__ValsAssignment_3)
{ after(grammarAccess.getInstAttrSPVAccess().getValsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getGroup_4()); }
(rule__InstAttrSPV__Group_4__0)*
{ after(grammarAccess.getInstAttrSPVAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InstAttrSPV__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group_4__0__Impl
	rule__InstAttrSPV__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getCommaKeyword_4_0()); }
(
	',' 
)?
{ after(grammarAccess.getInstAttrSPVAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group_4__1__Impl
	rule__InstAttrSPV__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getAlternatives_4_1()); }
(rule__InstAttrSPV__Alternatives_4_1)
{ after(grammarAccess.getInstAttrSPVAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group_4__2__Impl
	rule__InstAttrSPV__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getPropsAssignment_4_2()); }
(rule__InstAttrSPV__PropsAssignment_4_2)
{ after(grammarAccess.getInstAttrSPVAccess().getPropsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrSPV__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrSPV__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getValsAssignment_4_3()); }
(rule__InstAttrSPV__ValsAssignment_4_3)
{ after(grammarAccess.getInstAttrSPVAccess().getValsAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InstAttrPSV__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrPSV__Group__0__Impl
	rule__InstAttrPSV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrPSV__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrPSVAccess().getPropAssignment_0()); }
(rule__InstAttrPSV__PropAssignment_0)
{ after(grammarAccess.getInstAttrPSVAccess().getPropAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrPSV__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrPSV__Group__1__Impl
	rule__InstAttrPSV__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrPSV__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrPSVAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getInstAttrPSVAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstAttrPSV__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstAttrPSV__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrPSV__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrPSVAccess().getValAssignment_2()); }
(rule__InstAttrPSV__ValAssignment_2)
{ after(grammarAccess.getInstAttrPSVAccess().getValAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubTypeOf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubTypeOf__Group__0__Impl
	rule__SubTypeOf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getSubclassAssignment_0()); }
(rule__SubTypeOf__SubclassAssignment_0)
{ after(grammarAccess.getSubTypeOfAccess().getSubclassAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubTypeOf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubTypeOf__Group__1__Impl
	rule__SubTypeOf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getSubTypeOfAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubTypeOf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubTypeOf__Group__2__Impl
	rule__SubTypeOf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getAKeyword_2()); }

	'a' 

{ after(grammarAccess.getSubTypeOfAccess().getAKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubTypeOf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubTypeOf__Group__3__Impl
	rule__SubTypeOf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getTypeKeyword_3()); }

	'type' 

{ after(grammarAccess.getSubTypeOfAccess().getTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubTypeOf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubTypeOf__Group__4__Impl
	rule__SubTypeOf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getOfKeyword_4()); }

	'of' 

{ after(grammarAccess.getSubTypeOfAccess().getOfKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubTypeOf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubTypeOf__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getSuperclassAssignment_5()); }
(rule__SubTypeOf__SuperclassAssignment_5)
{ after(grammarAccess.getSubTypeOfAccess().getSuperclassAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExistentialNegation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__0__Impl
	rule__ExistentialNegation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getThereKeyword_0()); }

	'there' 

{ after(grammarAccess.getExistentialNegationAccess().getThereKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialNegation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__1__Impl
	rule__ExistentialNegation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getExistentialNegationAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialNegation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__2__Impl
	rule__ExistentialNegation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getNoKeyword_2()); }

	'no' 

{ after(grammarAccess.getExistentialNegationAccess().getNoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialNegation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__3__Impl
	rule__ExistentialNegation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getVarListAssignment_3()); }
(rule__ExistentialNegation__VarListAssignment_3)
{ after(grammarAccess.getExistentialNegationAccess().getVarListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialNegation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__4__Impl
	rule__ExistentialNegation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getSuchKeyword_4()); }

	'such' 

{ after(grammarAccess.getExistentialNegationAccess().getSuchKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialNegation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__5__Impl
	rule__ExistentialNegation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getThatKeyword_5()); }

	'that' 

{ after(grammarAccess.getExistentialNegationAccess().getThatKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialNegation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistentialNegation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getQuantifiedAssignment_6()); }
(rule__ExistentialNegation__QuantifiedAssignment_6)
{ after(grammarAccess.getExistentialNegationAccess().getQuantifiedAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IntervalValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntervalValue__Group__0__Impl
	rule__IntervalValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalValueAccess().getOpAssignment_0()); }
(rule__IntervalValue__OpAssignment_0)
{ after(grammarAccess.getIntervalValueAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntervalValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntervalValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalValueAccess().getExprAssignment_1()); }
(rule__IntervalValue__ExprAssignment_1)
{ after(grammarAccess.getIntervalValueAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitValue__Group_2__0__Impl
	rule__ExplicitValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getValueListAssignment_2_0()); }
(rule__ExplicitValue__ValueListAssignment_2_0)
{ after(grammarAccess.getExplicitValueAccess().getValueListAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitValue__Group_2__1__Impl
	rule__ExplicitValue__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getRowAssignment_2_1()); }
(rule__ExplicitValue__RowAssignment_2_1)
{ after(grammarAccess.getExplicitValueAccess().getRowAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitValue__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitValue__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getExplicitValueAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValueTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group__0__Impl
	rule__ValueTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group__1__Impl
	rule__ValueTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group__2__Impl
	rule__ValueTable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRowsAssignment_2()); }
(rule__ValueTable__RowsAssignment_2)
{ after(grammarAccess.getValueTableAccess().getRowsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group__3__Impl
	rule__ValueTable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group__4__Impl
	rule__ValueTable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getGroup_4()); }
(rule__ValueTable__Group_4__0)*
{ after(grammarAccess.getValueTableAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ValueTable__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group_4__0__Impl
	rule__ValueTable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getCommaKeyword_4_0()); }
(
	',' 
)?
{ after(grammarAccess.getValueTableAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group_4__1__Impl
	rule__ValueTable__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_4_1()); }

	'[' 

{ after(grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group_4__2__Impl
	rule__ValueTable__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRowsAssignment_4_2()); }
(rule__ValueTable__RowsAssignment_4_2)
{ after(grammarAccess.getValueTableAccess().getRowsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTable__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueTable__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_4_3()); }

	']' 

{ after(grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValueRow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueRow__Group__0__Impl
	rule__ValueRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueRowAccess().getExplicitValuesAssignment_0()); }
(rule__ValueRow__ExplicitValuesAssignment_0)
{ after(grammarAccess.getValueRowAccess().getExplicitValuesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueRow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueRow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueRowAccess().getGroup_1()); }
(rule__ValueRow__Group_1__0)*
{ after(grammarAccess.getValueRowAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueRow__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueRow__Group_1__0__Impl
	rule__ValueRow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRow__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueRowAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getValueRowAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueRow__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueRow__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRow__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueRowAccess().getExplicitValuesAssignment_1_1()); }
(rule__ValueRow__ExplicitValuesAssignment_1_1)
{ after(grammarAccess.getValueRowAccess().getExplicitValuesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group__0__Impl
	rule__NAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getNAMEAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group__1__Impl
	rule__NAME__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getGroup_1()); }
(rule__NAME__Group_1__0)?
{ after(grammarAccess.getNAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getAlternatives_2()); }
(rule__NAME__Alternatives_2)*
{ after(grammarAccess.getNAMEAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_1__0__Impl
	rule__NAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getNAMEAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getNAMEAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NAME__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_2_0__0__Impl
	rule__NAME__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getAlternatives_2_0_0()); }
(rule__NAME__Alternatives_2_0_0)
{ after(grammarAccess.getNAMEAccess().getAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getNAME_FRAGMENTParserRuleCall_2_0_1()); }
(	ruleNAME_FRAGMENT)?
{ after(grammarAccess.getNAMEAccess().getNAME_FRAGMENTParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NAME__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_2_1__0__Impl
	rule__NAME__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getPercentSignKeyword_2_1_0()); }
(
	'%' 
)?
{ after(grammarAccess.getNAMEAccess().getPercentSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getNAME_FRAGMENTParserRuleCall_2_1_1()); }
	ruleNAME_FRAGMENT
{ after(grammarAccess.getNAMEAccess().getNAME_FRAGMENTParserRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NAME_FRAGMENT__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME_FRAGMENT__Group_1__0__Impl
	rule__NAME_FRAGMENT__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME_FRAGMENT__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAME_FRAGMENTAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_0()); }
	RULE_UNSIGNED_NUMBER
{ after(grammarAccess.getNAME_FRAGMENTAccess().getUNSIGNED_NUMBERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME_FRAGMENT__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME_FRAGMENT__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME_FRAGMENT__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAME_FRAGMENTAccess().getID_OR_KEYWORDParserRuleCall_1_1()); }
(	ruleID_OR_KEYWORD)?
{ after(grammarAccess.getNAME_FRAGMENTAccess().getID_OR_KEYWORDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__0__Impl
	rule__NUMBER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getUNSIGNED_NUMBERTerminalRuleCall_1()); }
	RULE_UNSIGNED_NUMBER
{ after(grammarAccess.getNUMBERAccess().getUNSIGNED_NUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ModelNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelNameModelNameParserRuleCall_0_0()); }
	ruleModelName{ after(grammarAccess.getModelAccess().getModelNameModelNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_2_0()); }
	ruleModelElement{ after(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__BaseUriAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getBaseUriSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getModelNameAccess().getBaseUriSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__AliasAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAliasNAMEParserRuleCall_2_1_0()); }
	ruleNAME{ after(grammarAccess.getModelNameAccess().getAliasNAMEParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__VersionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getVersionSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getModelNameAccess().getVersionSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__AnnTypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAnnTypeAlternatives_4_1_0()); }
(rule__ModelName__AnnTypeAlternatives_4_1_0)
{ after(grammarAccess.getModelNameAccess().getAnnTypeAlternatives_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__AnnContentAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNameAccess().getAnnContentContentListParserRuleCall_4_2_0()); }
	ruleContentList{ after(grammarAccess.getModelNameAccess().getAnnContentContentListParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__AliasAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAliasNAMEParserRuleCall_2_1_0()); }
	ruleNAME{ after(grammarAccess.getImportAccess().getAliasNAMEParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getNameNAMEParserRuleCall_0_0()); }
	ruleNAME{ after(grammarAccess.getResourceNameAccess().getNameNAMEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__AnnTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getAnnTypeAlternatives_1_1_0()); }
(rule__ResourceName__AnnTypeAlternatives_1_1_0)
{ after(grammarAccess.getResourceNameAccess().getAnnTypeAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceName__AnnContentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceNameAccess().getAnnContentContentListParserRuleCall_1_2_0()); }
	ruleContentList{ after(grammarAccess.getResourceNameAccess().getAnnContentContentListParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContentList__AnnContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentListAccess().getAnnContentSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getContentListAccess().getAnnContentSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContentList__AnnContentAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentListAccess().getAnnContentSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getContentListAccess().getAnnContentSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__NamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getNamesResourceNameParserRuleCall_1_0()); }
	ruleResourceName{ after(grammarAccess.getResourceListAccess().getNamesResourceNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceList__NamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceListAccess().getNamesResourceNameParserRuleCall_2_1_0()); }
	ruleResourceName{ after(grammarAccess.getResourceListAccess().getNamesResourceNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__LiteralsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLiteralsLiteralValueParserRuleCall_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getLiteralListAccess().getLiteralsLiteralValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralList__LiteralsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralListAccess().getLiteralsLiteralValueParserRuleCall_2_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getLiteralListAccess().getLiteralsLiteralValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByNameAccess().getNameResourceNameCrossReference_0()); }
(
{ before(grammarAccess.getResourceByNameAccess().getNameResourceNameNAMEParserRuleCall_0_1()); }
	ruleNAME{ after(grammarAccess.getResourceByNameAccess().getNameResourceNameNAMEParserRuleCall_0_1()); }
)
{ after(grammarAccess.getResourceByNameAccess().getNameResourceNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__NamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getNamesAlternatives_1_0()); }
(rule__ExistingResourceList__NamesAlternatives_1_0)
{ after(grammarAccess.getExistingResourceListAccess().getNamesAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingResourceList__NamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingResourceListAccess().getNamesAlternatives_2_1_0()); }
(rule__ExistingResourceList__NamesAlternatives_2_1_0)
{ after(grammarAccess.getExistingResourceListAccess().getNamesAlternatives_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__AnnTypeAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeAlternatives_1_1_1_0()); }
(rule__ResourceIdentifier__AnnTypeAlternatives_1_1_1_0)
{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeAlternatives_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__AnnContentAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnContentContentListParserRuleCall_1_1_2_0()); }
	ruleContentList{ after(grammarAccess.getResourceIdentifierAccess().getAnnContentContentListParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__AnnTypeAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnTypeAlternatives_2_1_1_0()); }
(rule__ResourceIdentifier__AnnTypeAlternatives_2_1_1_0)
{ after(grammarAccess.getResourceIdentifierAccess().getAnnTypeAlternatives_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceIdentifier__AnnContentAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceIdentifierAccess().getAnnContentContentListParserRuleCall_2_1_2_0()); }
	ruleContentList{ after(grammarAccess.getResourceIdentifierAccess().getAnnContentContentListParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByRestriction__PropNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getPropNameResourceByNameParserRuleCall_1_0()); }
	ruleResourceByName{ after(grammarAccess.getResourceByRestrictionAccess().getPropNameResourceByNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceByRestriction__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceByRestrictionAccess().getCondConditionParserRuleCall_2_0()); }
	ruleCondition{ after(grammarAccess.getResourceByRestrictionAccess().getCondConditionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__NamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getNamesResourceIdentifierParserRuleCall_1_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getUnionResourceAccess().getNamesResourceIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__OpAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getOpAlternatives_2_0_0()); }
(rule__UnionResource__OpAlternatives_2_0_0)
{ after(grammarAccess.getUnionResourceAccess().getOpAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionResource__NamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionResourceAccess().getNamesResourceIdentifierParserRuleCall_2_1_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getUnionResourceAccess().getNamesResourceIdentifierParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__NamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getNamesResourceIdentifierParserRuleCall_1_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getIntersectionResourceAccess().getNamesResourceIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__OpAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getOpAndKeyword_2_0_0()); }
(
{ before(grammarAccess.getIntersectionResourceAccess().getOpAndKeyword_2_0_0()); }

	'and' 

{ after(grammarAccess.getIntersectionResourceAccess().getOpAndKeyword_2_0_0()); }
)

{ after(grammarAccess.getIntersectionResourceAccess().getOpAndKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionResource__NamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionResourceAccess().getNamesResourceIdentifierParserRuleCall_2_1_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getIntersectionResourceAccess().getNamesResourceIdentifierParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassNameResourceNameParserRuleCall_0_0_0()); }
	ruleResourceName{ after(grammarAccess.getClassDeclarationAccess().getClassNameResourceNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__MustBeOneOfAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getMustBeOneOfEnumeratedInstancesParserRuleCall_0_5_0()); }
	ruleEnumeratedInstances{ after(grammarAccess.getClassDeclarationAccess().getMustBeOneOfEnumeratedInstancesParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__DescribedByAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_0_6_0()); }
	ruleAddlClassInfo{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassListAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassListResourceListParserRuleCall_1_0_0()); }
	ruleResourceList{ after(grammarAccess.getClassDeclarationAccess().getClassListResourceListParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__DescribedByAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_1_4_0()); }
	ruleAddlClassInfo{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassNameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassNameResourceNameParserRuleCall_2_0_0()); }
	ruleResourceName{ after(grammarAccess.getClassDeclarationAccess().getClassNameResourceNameParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassIdentifierAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassIdentifierResourceIdentifierParserRuleCall_2_5_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getClassDeclarationAccess().getClassIdentifierResourceIdentifierParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__MustBeOneOfAssignment_2_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getMustBeOneOfEnumeratedInstancesParserRuleCall_2_6_0()); }
	ruleEnumeratedInstances{ after(grammarAccess.getClassDeclarationAccess().getMustBeOneOfEnumeratedInstancesParserRuleCall_2_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__DescribedByAssignment_2_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_2_7_0()); }
	ruleAddlClassInfo{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassListAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassListResourceListParserRuleCall_3_0_0()); }
	ruleResourceList{ after(grammarAccess.getClassDeclarationAccess().getClassListResourceListParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassIdentifierAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassIdentifierResourceIdentifierParserRuleCall_3_4_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getClassDeclarationAccess().getClassIdentifierResourceIdentifierParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__DescribedByAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_3_5_0()); }
	ruleAddlClassInfo{ after(grammarAccess.getClassDeclarationAccess().getDescribedByAddlClassInfoParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedInstances__InstanceListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedInstancesAccess().getInstanceListResourceListParserRuleCall_5_0()); }
	ruleResourceList{ after(grammarAccess.getEnumeratedInstancesAccess().getInstanceListResourceListParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__PropertyByNameAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getPropertyByNameResourceByNameParserRuleCall_0_3_0_0()); }
	ruleResourceByName{ after(grammarAccess.getAddlClassInfoAccess().getPropertyByNameResourceByNameParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__PropertyNameAssignment_0_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getPropertyNameResourceNameParserRuleCall_0_3_1_0_0()); }
	ruleResourceName{ after(grammarAccess.getAddlClassInfoAccess().getPropertyNameResourceNameParserRuleCall_0_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__RangeAssignment_0_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getRangeRangeParserRuleCall_0_3_1_1_0()); }
	ruleRange{ after(grammarAccess.getAddlClassInfoAccess().getRangeRangeParserRuleCall_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__PropertyByNameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getPropertyByNameResourceByNameParserRuleCall_1_3_0()); }
	ruleResourceByName{ after(grammarAccess.getAddlClassInfoAccess().getPropertyByNameResourceByNameParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddlClassInfo__RestrictionAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddlClassInfoAccess().getRestrictionConditionParserRuleCall_1_4_0()); }
	ruleCondition{ after(grammarAccess.getAddlClassInfoAccess().getRestrictionConditionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__SingleAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getSingleSingleKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getRangeAccess().getSingleSingleKeyword_1_0_1_0()); }

	'single' 

{ after(grammarAccess.getRangeAccess().getSingleSingleKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getRangeAccess().getSingleSingleKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ListAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getListListKeyword_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getRangeAccess().getListListKeyword_1_1_0_0_1_0()); }

	'List' 

{ after(grammarAccess.getRangeAccess().getListListKeyword_1_1_0_0_1_0()); }
)

{ after(grammarAccess.getRangeAccess().getListListKeyword_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ListsAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getListsListsKeyword_1_1_0_1_0()); }
(
{ before(grammarAccess.getRangeAccess().getListsListsKeyword_1_1_0_1_0()); }

	'Lists' 

{ after(grammarAccess.getRangeAccess().getListsListsKeyword_1_1_0_1_0()); }
)

{ after(grammarAccess.getRangeAccess().getListsListsKeyword_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getTypeRangeTypeParserRuleCall_4_0()); }
	ruleRangeType{ after(grammarAccess.getRangeAccess().getTypeRangeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeType__ClassIdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeTypeAccess().getClassIdentifierResourceIdentifierParserRuleCall_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getRangeTypeAccess().getClassIdentifierResourceIdentifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeType__DataTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeTypeAccess().getDataTypeDataTypeEnumRuleCall_1_0()); }
	ruleDataType{ after(grammarAccess.getRangeTypeAccess().getDataTypeDataTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__UserDefinedDataTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getUserDefinedDataTypeResourceNameParserRuleCall_2_0()); }
	ruleResourceName{ after(grammarAccess.getUserDefinedDataTypeAccess().getUserDefinedDataTypeResourceNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserDefinedDataType__RestrictionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserDefinedDataTypeAccess().getRestrictionDataTypeRestrictionParserRuleCall_4_0()); }
	ruleDataTypeRestriction{ after(grammarAccess.getUserDefinedDataTypeAccess().getRestrictionDataTypeRestrictionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__BasetypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getBasetypeDataTypeEnumRuleCall_0_1_0()); }
	ruleDataType{ after(grammarAccess.getDataTypeRestrictionAccess().getBasetypeDataTypeEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__FacetsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getFacetsFacetsParserRuleCall_0_2_0()); }
	ruleFacets{ after(grammarAccess.getDataTypeRestrictionAccess().getFacetsFacetsParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__BasetypesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getBasetypesDataTypeEnumRuleCall_1_1_0()); }
	ruleDataType{ after(grammarAccess.getDataTypeRestrictionAccess().getBasetypesDataTypeEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeRestriction__BasetypesAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeRestrictionAccess().getBasetypesDataTypeEnumRuleCall_1_2_1_0()); }
	ruleDataType{ after(grammarAccess.getDataTypeRestrictionAccess().getBasetypesDataTypeEnumRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MinexinAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinexinAlternatives_0_0_0()); }
(rule__Facets__MinexinAlternatives_0_0_0)
{ after(grammarAccess.getFacetsAccess().getMinexinAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MinAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinNUMBERParserRuleCall_0_1_0()); }
	ruleNUMBER{ after(grammarAccess.getFacetsAccess().getMinNUMBERParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MaxAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxNUMBERParserRuleCall_0_3_0()); }
	ruleNUMBER{ after(grammarAccess.getFacetsAccess().getMaxNUMBERParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MaxexinAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxexinAlternatives_0_4_0()); }
(rule__Facets__MaxexinAlternatives_0_4_0)
{ after(grammarAccess.getFacetsAccess().getMaxexinAlternatives_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__RegexAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getRegexSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFacetsAccess().getRegexSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__LenAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getLenNUMBERParserRuleCall_2_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getFacetsAccess().getLenNUMBERParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MinlenAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMinlenNUMBERParserRuleCall_2_1_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getFacetsAccess().getMinlenNUMBERParserRuleCall_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__MaxlenAssignment_2_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getMaxlenNUMBERParserRuleCall_2_1_1_2_0()); }
	ruleNUMBER{ after(grammarAccess.getFacetsAccess().getMaxlenNUMBERParserRuleCall_2_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getValuesAlternatives_3_1_0()); }
(rule__Facets__ValuesAlternatives_3_1_0)
{ after(grammarAccess.getFacetsAccess().getValuesAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__ValuesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getValuesAlternatives_3_2_1_0()); }
(rule__Facets__ValuesAlternatives_3_2_1_0)
{ after(grammarAccess.getFacetsAccess().getValuesAlternatives_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Class1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getClass1ResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getEquivalentConceptsAccess().getClass1ResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EquivalentConcepts__Class2Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquivalentConceptsAccess().getClass2ResourceIdentifierParserRuleCall_5_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getEquivalentConceptsAccess().getClass2ResourceIdentifierParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Class1Assignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getClass1ResourceByNameParserRuleCall_0_0_0()); }
	ruleResourceByName{ after(grammarAccess.getDisjointClassesAccess().getClass1ResourceByNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__Class2Assignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getClass2ResourceIdentifierParserRuleCall_0_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getDisjointClassesAccess().getClass2ResourceIdentifierParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DisjointClasses__ClassesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjointClassesAccess().getClassesExistingResourceListParserRuleCall_1_0_0()); }
	ruleExistingResourceList{ after(grammarAccess.getDisjointClassesAccess().getClassesExistingResourceListParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Class1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getClass1ResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getComplementOfClassAccess().getClass1ResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementOfClass__Class2Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplementOfClassAccess().getClass2ResourceIdentifierParserRuleCall_6_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getComplementOfClassAccess().getClass2ResourceIdentifierParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__RestrictedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getAllValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__CondAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getCondAllValuesConditionParserRuleCall_0_1_0()); }
	ruleAllValuesCondition{ after(grammarAccess.getAllValuesFromAccess().getCondAllValuesConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__ClassNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getAllValuesFromAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__PropertyNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getAllValuesFromAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesFrom__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesFromAccess().getCondAllValuesConditionParserRuleCall_1_2_0()); }
	ruleAllValuesCondition{ after(grammarAccess.getAllValuesFromAccess().getCondAllValuesConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__RestrictedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getSomeValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__CondAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getCondSomeValuesConditionParserRuleCall_0_1_0()); }
	ruleSomeValuesCondition{ after(grammarAccess.getSomeValuesFromAccess().getCondSomeValuesConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__ClassNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getSomeValuesFromAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__PropertyNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getSomeValuesFromAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesFrom__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesFromAccess().getCondSomeValuesConditionParserRuleCall_1_2_0()); }
	ruleSomeValuesCondition{ after(grammarAccess.getSomeValuesFromAccess().getCondSomeValuesConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__RestrictedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getHasValueAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__CondAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getCondHasValueConditionParserRuleCall_0_1_0()); }
	ruleHasValueCondition{ after(grammarAccess.getHasValueAccess().getCondHasValueConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__ClassNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getHasValueAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__PropertyNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getHasValueAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValue__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueAccess().getCondHasValueConditionParserRuleCall_1_2_0()); }
	ruleHasValueCondition{ after(grammarAccess.getHasValueAccess().getCondHasValueConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__RestrictedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__CondAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getCondCardConditionParserRuleCall_0_1_0()); }
	ruleCardCondition{ after(grammarAccess.getCardinalityAccess().getCondCardConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__ClassNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__PropertyNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getCondCardConditionParserRuleCall_1_2_0()); }
	ruleCardCondition{ after(grammarAccess.getCardinalityAccess().getCondCardConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__RestrictedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getMinCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__CondAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getCondMinCardConditionParserRuleCall_0_1_0()); }
	ruleMinCardCondition{ after(grammarAccess.getMinCardinalityAccess().getCondMinCardConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__ClassNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getMinCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__PropertyNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getMinCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardinality__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardinalityAccess().getCondMinCardConditionParserRuleCall_1_2_0()); }
	ruleMinCardCondition{ after(grammarAccess.getMinCardinalityAccess().getCondMinCardConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__RestrictedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getMaxCardinalityAccess().getRestrictedPropertyOfClassParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__CondAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getCondMaxCardConditionParserRuleCall_0_1_0()); }
	ruleMaxCardCondition{ after(grammarAccess.getMaxCardinalityAccess().getCondMaxCardConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__ClassNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getMaxCardinalityAccess().getClassNameResourceIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__PropertyNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getMaxCardinalityAccess().getPropertyNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardinality__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardinalityAccess().getCondMaxCardConditionParserRuleCall_1_2_0()); }
	ruleMaxCardCondition{ after(grammarAccess.getMaxCardinalityAccess().getCondMaxCardConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyOfClass__PropertyNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyOfClassAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getPropertyOfClassAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyOfClass__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyOfClassAccess().getClassNameResourceIdentifierParserRuleCall_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getPropertyOfClassAccess().getClassNameResourceIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AllValuesCondition__RestrictionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllValuesConditionAccess().getRestrictionResourceIdentifierParserRuleCall_5_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getAllValuesConditionAccess().getRestrictionResourceIdentifierParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__RestrictedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__EnumerationAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationExistingResourceListParserRuleCall_6_0_0()); }
	ruleExistingResourceList{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationExistingResourceListParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllValuesFrom__EnumerationAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationLiteralListParserRuleCall_6_1_0()); }
	ruleLiteralList{ after(grammarAccess.getEnumeratedAllValuesFromAccess().getEnumerationLiteralListParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__RestrictedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getRestrictedPropertyOfClassParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__EnumerationAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationExistingResourceListParserRuleCall_5_0_0()); }
	ruleExistingResourceList{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationExistingResourceListParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedAllAndSomeValuesFrom__EnumerationAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationLiteralListParserRuleCall_5_1_0()); }
	ruleLiteralList{ after(grammarAccess.getEnumeratedAllAndSomeValuesFromAccess().getEnumerationLiteralListParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__DefValueClassAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getDefValueClassPropertyOfClassParserRuleCall_0_0()); }
	rulePropertyOfClass{ after(grammarAccess.getDefaultValueAccess().getDefValueClassPropertyOfClassParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__LevelAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLevelNUMBERParserRuleCall_2_1_0()); }
	ruleNUMBER{ after(grammarAccess.getDefaultValueAccess().getLevelNUMBERParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__DefValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getDefValueExplicitValueParserRuleCall_4_0()); }
	ruleExplicitValue{ after(grammarAccess.getDefaultValueAccess().getDefValueExplicitValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__RestrictionAssignment_5_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getRestrictionResourceIdentifierParserRuleCall_5_0_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getSomeValuesConditionAccess().getRestrictionResourceIdentifierParserRuleCall_5_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeValuesCondition__RestrictionAssignment_5_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeValuesConditionAccess().getRestrictionExistingResourceListParserRuleCall_5_1_3_0()); }
	ruleExistingResourceList{ after(grammarAccess.getSomeValuesConditionAccess().getRestrictionExistingResourceListParserRuleCall_5_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasValueCondition__RestrictionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasValueConditionAccess().getRestrictionExplicitValueParserRuleCall_3_0()); }
	ruleExplicitValue{ after(grammarAccess.getHasValueConditionAccess().getRestrictionExplicitValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__CardAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getCardNUMBERParserRuleCall_3_0()); }
	ruleNUMBER{ after(grammarAccess.getMinCardConditionAccess().getCardNUMBERParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinCardCondition__ClassQualifierAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_5_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getMinCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__CardAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getCardNUMBERParserRuleCall_3_0()); }
	ruleNUMBER{ after(grammarAccess.getMaxCardConditionAccess().getCardNUMBERParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxCardCondition__ClassQualifierAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_5_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getMaxCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__CardAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getCardNUMBERParserRuleCall_2_0()); }
	ruleNUMBER{ after(grammarAccess.getCardConditionAccess().getCardNUMBERParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CardCondition__ClassQualifierAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_4_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getCardConditionAccess().getClassQualifierResourceIdentifierParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__SuperClassAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getSuperClassTypedBNodeParserRuleCall_0_0()); }
	ruleTypedBNode{ after(grammarAccess.getNecessaryAndSufficientAccess().getSuperClassTypedBNodeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__ArticleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getArticleIndefiniteArticleParserRuleCall_2_0()); }
	ruleIndefiniteArticle{ after(grammarAccess.getNecessaryAndSufficientAccess().getArticleIndefiniteArticleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__SubClassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getSubClassResourceNameParserRuleCall_3_0()); }
	ruleResourceName{ after(grammarAccess.getNecessaryAndSufficientAccess().getSubClassResourceNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__PropertyNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameResourceByNameParserRuleCall_6_0()); }
	ruleResourceByName{ after(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameResourceByNameParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__CondAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getCondConditionParserRuleCall_7_0()); }
	ruleCondition{ after(grammarAccess.getNecessaryAndSufficientAccess().getCondConditionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__PropertyNameAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameResourceByNameParserRuleCall_8_1_0()); }
	ruleResourceByName{ after(grammarAccess.getNecessaryAndSufficientAccess().getPropertyNameResourceByNameParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NecessaryAndSufficient__CondAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNecessaryAndSufficientAccess().getCondConditionParserRuleCall_8_2_0()); }
	ruleCondition{ after(grammarAccess.getNecessaryAndSufficientAccess().getCondConditionParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__PropertyNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getPropertyNameResourceNameParserRuleCall_0_0_0()); }
	ruleResourceName{ after(grammarAccess.getPropertyDeclarationAccess().getPropertyNameResourceNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__SuperPropNameAssignment_0_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getSuperPropNameResourceByNameParserRuleCall_0_1_4_0()); }
	ruleResourceByName{ after(grammarAccess.getPropertyDeclarationAccess().getSuperPropNameResourceByNameParserRuleCall_0_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__AddlPropInfoAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAdditionalPropertyInfoParserRuleCall_0_2_0()); }
	ruleAdditionalPropertyInfo{ after(grammarAccess.getPropertyDeclarationAccess().getAddlPropInfoAdditionalPropertyInfoParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__ArticleAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getArticleAnArticleParserRuleCall_1_0_0()); }
	ruleAnArticle{ after(grammarAccess.getPropertyDeclarationAccess().getArticleAnArticleParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__DomainAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getDomainResourceIdentifierParserRuleCall_1_3_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getPropertyDeclarationAccess().getDomainResourceIdentifierParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__RangeResourceAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getRangeResourceResourceIdentifierParserRuleCall_1_5_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getPropertyDeclarationAccess().getRangeResourceResourceIdentifierParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__PropertyNameAssignment_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getPropertyNameResourceNameParserRuleCall_1_7_0()); }
	ruleResourceName{ after(grammarAccess.getPropertyDeclarationAccess().getPropertyNameResourceNameParserRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__AnnotationPropertyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAnnotationPropertyResourceNameParserRuleCall_2_0_0()); }
	ruleResourceName{ after(grammarAccess.getPropertyDeclarationAccess().getAnnotationPropertyResourceNameParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__DomainAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getDomainResourceIdentifierParserRuleCall_0_2_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getAdditionalPropertyInfoAccess().getDomainResourceIdentifierParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__CondAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getCondConditionParserRuleCall_1_1_0()); }
	ruleCondition{ after(grammarAccess.getAdditionalPropertyInfoAccess().getCondConditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__RangeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getRangeRangeParserRuleCall_2_1_0()); }
	ruleRange{ after(grammarAccess.getAdditionalPropertyInfoAccess().getRangeRangeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__IsfuncAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsfuncIsFunctionalParserRuleCall_3_1_0()); }
	ruleIsFunctional{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsfuncIsFunctionalParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__IsinvfuncAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsinvfuncIsInverseFunctionalParserRuleCall_4_1_0()); }
	ruleIsInverseFunctional{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsinvfuncIsInverseFunctionalParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__IsSymAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsSymIsSymmetricalParserRuleCall_5_1_0()); }
	ruleIsSymmetrical{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsSymIsSymmetricalParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__IsTransAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsTransIsTransitiveParserRuleCall_6_1_0()); }
	ruleIsTransitive{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsTransIsTransitiveParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalPropertyInfo__IsInvOfAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionalPropertyInfoAccess().getIsInvOfIsInverseOfParserRuleCall_7_1_0()); }
	ruleIsInverseOf{ after(grammarAccess.getAdditionalPropertyInfoAccess().getIsInvOfIsInverseOfParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalProperty__PropertyNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getFunctionalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InverseFunctionalProperty__PropertyNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInverseFunctionalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getInverseFunctionalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricalProperty__PropertyNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getSymmetricalPropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitiveProperty__PropertyNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitivePropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getTransitivePropertyAccess().getPropertyNameResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InverseProperty__PropertyName1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInversePropertyAccess().getPropertyName1ResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getInversePropertyAccess().getPropertyName1ResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InverseProperty__InvOfAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInversePropertyAccess().getInvOfIsInverseOfParserRuleCall_1_0()); }
	ruleIsInverseOf{ after(grammarAccess.getInversePropertyAccess().getInvOfIsInverseOfParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsInverseOf__PropertyName2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsInverseOfAccess().getPropertyName2ResourceByNameParserRuleCall_4_0()); }
	ruleResourceByName{ after(grammarAccess.getIsInverseOfAccess().getPropertyName2ResourceByNameParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__ArticleAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getArticleIndefiniteArticleParserRuleCall_0_0_0()); }
	ruleIndefiniteArticle{ after(grammarAccess.getTypedBNodeAccess().getArticleIndefiniteArticleParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__ClassIdentifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getClassIdentifierResourceIdentifierParserRuleCall_0_1_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getTypedBNodeAccess().getClassIdentifierResourceIdentifierParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__ArticleAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getArticleAnyKeyword_1_0_0()); }
(
{ before(grammarAccess.getTypedBNodeAccess().getArticleAnyKeyword_1_0_0()); }

	'any' 

{ after(grammarAccess.getTypedBNodeAccess().getArticleAnyKeyword_1_0_0()); }
)

{ after(grammarAccess.getTypedBNodeAccess().getArticleAnyKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBNode__ClassIdentifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBNodeAccess().getClassIdentifierResourceIdentifierParserRuleCall_1_1_0()); }
	ruleResourceIdentifier{ after(grammarAccess.getTypedBNodeAccess().getClassIdentifierResourceIdentifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__TypeDeclAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getTypeDeclTypeDeclarationParserRuleCall_0_0_0()); }
	ruleTypeDeclaration{ after(grammarAccess.getInstanceDeclarationAccess().getTypeDeclTypeDeclarationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__AddlInfoItemsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_0_1_0()); }
	rulePropValPartialTriple{ after(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__ArticleAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getArticleIndefiniteArticleParserRuleCall_1_0_0()); }
	ruleIndefiniteArticle{ after(grammarAccess.getInstanceDeclarationAccess().getArticleIndefiniteArticleParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__ClassNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getClassNameResourceByNameParserRuleCall_1_1_0()); }
	ruleResourceByName{ after(grammarAccess.getInstanceDeclarationAccess().getClassNameResourceByNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__InstanceNameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getInstanceNameResourceNameParserRuleCall_1_2_0()); }
	ruleResourceName{ after(grammarAccess.getInstanceDeclarationAccess().getInstanceNameResourceNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__AddlInfoItemsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_1_3_0()); }
	rulePropValPartialTriple{ after(grammarAccess.getInstanceDeclarationAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__InstNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getInstNameResourceNameParserRuleCall_0_0()); }
	ruleResourceName{ after(grammarAccess.getTypeDeclarationAccess().getInstNameResourceNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeTypedBNodeParserRuleCall_2_0()); }
	ruleTypedBNode{ after(grammarAccess.getTypeDeclarationAccess().getTypeTypedBNodeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__InstName1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getInstName1ResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getInstanceDifferentFromAccess().getInstName1ResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDifferentFrom__InstName2Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDifferentFromAccess().getInstName2ResourceByNameParserRuleCall_6_0()); }
	ruleResourceByName{ after(grammarAccess.getInstanceDifferentFromAccess().getInstName2ResourceByNameParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstancesAllDifferent__InstancesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAllDifferentAccess().getInstancesExistingResourceListParserRuleCall_0_0()); }
	ruleExistingResourceList{ after(grammarAccess.getInstancesAllDifferentAccess().getInstancesExistingResourceListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__SubjAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getSubjResourceByNameParserRuleCall_0_0_0()); }
	ruleResourceByName{ after(grammarAccess.getExistingInstanceAttributionAccess().getSubjResourceByNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__AddlInfoItemsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_0_1_0()); }
	rulePropValPartialTriple{ after(grammarAccess.getExistingInstanceAttributionAccess().getAddlInfoItemsPropValPartialTripleParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__POfSAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getPOfSOfPatternReturningValuesParserRuleCall_1_0_0()); }
	ruleOfPatternReturningValues{ after(grammarAccess.getExistingInstanceAttributionAccess().getPOfSOfPatternReturningValuesParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__ObjAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getObjObjectParserRuleCall_1_2_0()); }
	ruleObject{ after(grammarAccess.getExistingInstanceAttributionAccess().getObjObjectParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__ObjAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getObjExplicitValueParserRuleCall_2_0_0()); }
	ruleExplicitValue{ after(grammarAccess.getExistingInstanceAttributionAccess().getObjExplicitValueParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistingInstanceAttribution__POfSAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistingInstanceAttributionAccess().getPOfSOfPatternReturningValuesParserRuleCall_2_2_0()); }
	ruleOfPatternReturningValues{ after(grammarAccess.getExistingInstanceAttributionAccess().getPOfSOfPatternReturningValuesParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getValAlternatives_0()); }
(rule__Object__ValAlternatives_0)
{ after(grammarAccess.getObjectAccess().getValAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__PropertyNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getPropertyNameResourceByNameParserRuleCall_2_0()); }
	ruleResourceByName{ after(grammarAccess.getPropValPartialTripleAccess().getPropertyNameResourceByNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__ObjectValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getObjectValueExplicitValueParserRuleCall_3_0_0()); }
	ruleExplicitValue{ after(grammarAccess.getPropValPartialTripleAccess().getObjectValueExplicitValueParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropValPartialTriple__ObjectValueBNodeAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropValPartialTripleAccess().getObjectValueBNodeInstanceDeclarationParserRuleCall_3_1_1_0()); }
	ruleInstanceDeclaration{ after(grammarAccess.getPropValPartialTripleAccess().getObjectValueBNodeInstanceDeclarationParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OfPatternReturningValues__OfphrsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsOfPhraseParserRuleCall_0_0_0()); }
	ruleOfPhrase{ after(grammarAccess.getOfPatternReturningValuesAccess().getOfphrsOfPhraseParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OfPatternReturningValues__SubjectAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getSubjectResourceByNameParserRuleCall_0_1_0()); }
	ruleResourceByName{ after(grammarAccess.getOfPatternReturningValuesAccess().getSubjectResourceByNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OfPatternReturningValues__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPatternReturningValuesAccess().getTypeTypedBNodeParserRuleCall_1_0()); }
	ruleTypedBNode{ after(grammarAccess.getOfPatternReturningValuesAccess().getTypeTypedBNodeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithChain__WpsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithChainAccess().getWpsWithPhraseParserRuleCall_0_0()); }
	ruleWithPhrase{ after(grammarAccess.getWithChainAccess().getWpsWithPhraseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithChain__WpsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithChainAccess().getWpsWithPhraseParserRuleCall_1_1_0()); }
	ruleWithPhrase{ after(grammarAccess.getWithChainAccess().getWpsWithPhraseParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__PropertyNameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_0_2_0()); }
	ruleResourceByName{ after(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueExplicitValueParserRuleCall_0_3_0()); }
	ruleExplicitValue{ after(grammarAccess.getWithPhraseAccess().getValueExplicitValueParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__PropertyNameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_1_2_0()); }
	ruleResourceByName{ after(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__ValueAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueIntervalValueParserRuleCall_1_3_0()); }
	ruleIntervalValue{ after(grammarAccess.getWithPhraseAccess().getValueIntervalValueParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__PropertyNameAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_2_2_0()); }
	ruleResourceByName{ after(grammarAccess.getWithPhraseAccess().getPropertyNameResourceByNameParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPhrase__ValueAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPhraseAccess().getValueAlternatives_2_3_0()); }
(rule__WithPhrase__ValueAlternatives_2_3_0)
{ after(grammarAccess.getWithPhraseAccess().getValueAlternatives_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedTriples__OpsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedTriplesAccess().getOpsOfPhraseParserRuleCall_0_0()); }
	ruleOfPhrase{ after(grammarAccess.getMergedTriplesAccess().getOpsOfPhraseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedTriples__PivotAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedTriplesAccess().getPivotTypedBNodeParserRuleCall_1_0()); }
	ruleTypedBNode{ after(grammarAccess.getMergedTriplesAccess().getPivotTypedBNodeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedTriples__WcsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedTriplesAccess().getWcsWithChainParserRuleCall_2_0()); }
	ruleWithChain{ after(grammarAccess.getMergedTriplesAccess().getWcsWithChainParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OfPhrase__ArticleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPhraseAccess().getArticleAnArticleParserRuleCall_0_0()); }
	ruleAnArticle{ after(grammarAccess.getOfPhraseAccess().getArticleAnArticleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OfPhrase__PropertyNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOfPhraseAccess().getPropertyNameResourceByNameParserRuleCall_1_0()); }
	ruleResourceByName{ after(grammarAccess.getOfPhraseAccess().getPropertyNameResourceByNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__NamesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getNamesResourceNameParserRuleCall_0_0()); }
	ruleResourceName{ after(grammarAccess.getVariableListAccess().getNamesResourceNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__NamesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getNamesResourceNameParserRuleCall_1_1_0()); }
	ruleResourceName{ after(grammarAccess.getVariableListAccess().getNamesResourceNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameNAMEParserRuleCall_1_0()); }
	ruleNAME{ after(grammarAccess.getRuleAccess().getNameNAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__GivensAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGivensElementSetParserRuleCall_3_1_0()); }
	ruleElementSet{ after(grammarAccess.getRuleAccess().getGivensElementSetParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__IfsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getIfsElementSetParserRuleCall_4_1_0()); }
	ruleElementSet{ after(grammarAccess.getRuleAccess().getIfsElementSetParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ThensAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThensElementSetParserRuleCall_6_0()); }
	ruleElementSet{ after(grammarAccess.getRuleAccess().getThensElementSetParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Query__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getQueryAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getTestAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getExprAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Display__DisplayStringAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getDisplayStringSTRINGTerminalRuleCall_1_0_0_0()); }
	RULE_STRING{ after(grammarAccess.getDisplayAccess().getDisplayStringSTRINGTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Display__ModelAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getModelDeductionsKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getDisplayAccess().getModelDeductionsKeyword_1_1_0_0()); }

	'Deductions' 

{ after(grammarAccess.getDisplayAccess().getModelDeductionsKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getDisplayAccess().getModelDeductionsKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Display__ModelAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisplayAccess().getModelModelKeyword_1_2_0_0()); }
(
{ before(grammarAccess.getDisplayAccess().getModelModelKeyword_1_2_0_0()); }

	'Model' 

{ after(grammarAccess.getDisplayAccess().getModelModelKeyword_1_2_0_0()); }
)

{ after(grammarAccess.getDisplayAccess().getModelModelKeyword_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__ExprAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getExprInstanceDeclarationParserRuleCall_1_0_0_0()); }
	ruleInstanceDeclaration{ after(grammarAccess.getExplanationAccess().getExprInstanceDeclarationParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getExprExistingInstanceAttributionParserRuleCall_1_1_0()); }
	ruleExistingInstanceAttribution{ after(grammarAccess.getExplanationAccess().getExprExistingInstanceAttributionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__ExprAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getExprExpressionParserRuleCall_1_2_0_0()); }
	ruleExpression{ after(grammarAccess.getExplanationAccess().getExprExpressionParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explanation__RulenameAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplanationAccess().getRulenameNAMEParserRuleCall_1_3_1_0()); }
	ruleNAME{ after(grammarAccess.getExplanationAccess().getRulenameNAMEParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSet__ElementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSetAccess().getElementsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getElementSetAccess().getElementsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSet__ElementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSetAccess().getElementsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getElementSetAccess().getElementsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__DistinctAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_1_0()); }
(
{ before(grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_1_0()); }

	'distinct' 

{ after(grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_1_0()); }
)

{ after(grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__AllVarsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getAllVarsAsteriskKeyword_2_0_0()); }
(
{ before(grammarAccess.getSelectExpressionAccess().getAllVarsAsteriskKeyword_2_0_0()); }

	'*' 

{ after(grammarAccess.getSelectExpressionAccess().getAllVarsAsteriskKeyword_2_0_0()); }
)

{ after(grammarAccess.getSelectExpressionAccess().getAllVarsAsteriskKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__VarListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getVarListVariableListParserRuleCall_2_1_0()); }
	ruleVariableList{ after(grammarAccess.getSelectExpressionAccess().getVarListVariableListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getExprOrExpressionParserRuleCall_4_0()); }
	ruleOrExpression{ after(grammarAccess.getSelectExpressionAccess().getExprOrExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OrderbyAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getOrderbyOrderByKeyword_5_0_0()); }
(
{ before(grammarAccess.getSelectExpressionAccess().getOrderbyOrderByKeyword_5_0_0()); }

	'order by' 

{ after(grammarAccess.getSelectExpressionAccess().getOrderbyOrderByKeyword_5_0_0()); }
)

{ after(grammarAccess.getSelectExpressionAccess().getOrderbyOrderByKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OrderListAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectExpressionAccess().getOrderListOrderListParserRuleCall_5_1_0()); }
	ruleOrderList{ after(grammarAccess.getSelectExpressionAccess().getOrderListOrderListParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__SubjAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getSubjResourceNameParserRuleCall_1_0()); }
	ruleResourceName{ after(grammarAccess.getConstructExpressionAccess().getSubjResourceNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__PredAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getPredResourceNameParserRuleCall_2_0()); }
	ruleResourceName{ after(grammarAccess.getConstructExpressionAccess().getPredResourceNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__ObjAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getObjResourceNameParserRuleCall_3_0()); }
	ruleResourceName{ after(grammarAccess.getConstructExpressionAccess().getObjResourceNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructExpression__ExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructExpressionAccess().getExprOrExpressionParserRuleCall_5_0()); }
	ruleOrExpression{ after(grammarAccess.getConstructExpressionAccess().getExprOrExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AskQueryExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAskQueryExpressionAccess().getExprOrExpressionParserRuleCall_2_0()); }
	ruleOrExpression{ after(grammarAccess.getAskQueryExpressionAccess().getExprOrExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderList__OrderListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderListAccess().getOrderListOrderElementParserRuleCall_0_0()); }
	ruleOrderElement{ after(grammarAccess.getOrderListAccess().getOrderListOrderElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderList__OrderListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderListAccess().getOrderListOrderElementParserRuleCall_1_1_0()); }
	ruleOrderElement{ after(grammarAccess.getOrderListAccess().getOrderListOrderElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderElement__OrderAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderElementAccess().getOrderAlternatives_0_0()); }
(rule__OrderElement__OrderAlternatives_0_0)
{ after(grammarAccess.getOrderElementAccess().getOrderAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderElement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderElementAccess().getNameResourceNameParserRuleCall_1_0()); }
	ruleResourceName{ after(grammarAccess.getOrderElementAccess().getNameResourceNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__OrExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getOrExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__AndExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getAndExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__RelationalExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__AdditiveExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__MultiplicativeExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryOrPrimaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpAlternatives_0_1_0()); }
(rule__UnaryOrPrimaryExpression__OpAlternatives_0_1_0)
{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getOpAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_0_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__FuncAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFuncIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getFuncIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgsAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_0_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgsAssignment_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__GpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGpGraphPatternParserRuleCall_2_0()); }
	ruleGraphPattern{ after(grammarAccess.getPrimaryExpressionAccess().getGpGraphPatternParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IvalueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIvalueIntervalValueParserRuleCall_3_0()); }
	ruleIntervalValue{ after(grammarAccess.getPrimaryExpressionAccess().getIvalueIntervalValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueExplicitValueParserRuleCall_4_0()); }
	ruleExplicitValue{ after(grammarAccess.getPrimaryExpressionAccess().getValueExplicitValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueTableAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_5_0()); }
	ruleValueTable{ after(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__LimitedOrExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getLimitedOrExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedOrExpressionAccess().getRightLimitedAndExpressionParserRuleCall_1_2_0()); }
	ruleLimitedAndExpression{ after(grammarAccess.getLimitedOrExpressionAccess().getRightLimitedAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__LimitedAndExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getLimitedAndExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAndExpressionAccess().getRightLimitedRelationalExpressionParserRuleCall_1_2_0()); }
	ruleLimitedRelationalExpression{ after(grammarAccess.getLimitedAndExpressionAccess().getRightLimitedRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__LimitedRelationalExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getLimitedRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedRelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedRelationalExpressionAccess().getRightLimitedAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleLimitedAdditiveExpression{ after(grammarAccess.getLimitedRelationalExpressionAccess().getRightLimitedAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__LimitedAdditiveExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedAdditiveExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedAdditiveExpressionAccess().getRightLimitedMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleLimitedMultiplicativeExpression{ after(grammarAccess.getLimitedAdditiveExpressionAccess().getRightLimitedMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__LimitedMultiplicativeExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedMultiplicativeExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedMultiplicativeExpressionAccess().getRightLimitedUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); }
	ruleLimitedUnaryOrPrimaryExpression{ after(grammarAccess.getLimitedMultiplicativeExpressionAccess().getRightLimitedUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpAlternatives_0_1_0()); }
(rule__LimitedUnaryOrPrimaryExpression__OpAlternatives_0_1_0)
{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getOpAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedUnaryOrPrimaryExpression__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getExprLimitedPrimaryExpressionParserRuleCall_0_2_0()); }
	ruleLimitedPrimaryExpression{ after(grammarAccess.getLimitedUnaryOrPrimaryExpressionAccess().getExprLimitedPrimaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__FuncAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getFuncIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getFuncIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__ArgsAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_0_0()); }
	ruleExpression{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__ArgsAssignment_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getArgsExpressionParserRuleCall_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__IvalueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getIvalueIntervalValueParserRuleCall_2_0()); }
	ruleIntervalValue{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getIvalueIntervalValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getValueExplicitValueParserRuleCall_3_0()); }
	ruleExplicitValue{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getValueExplicitValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitedPrimaryExpression__ValueTableAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitedPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_4_0()); }
	ruleValueTable{ after(grammarAccess.getLimitedPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropOfSubj__OfPhrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropOfSubjAccess().getOfPhrOfPhraseParserRuleCall_0_0()); }
	ruleOfPhrase{ after(grammarAccess.getPropOfSubjAccess().getOfPhrOfPhraseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropOfSubj__SubjAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropOfSubjAccess().getSubjResourceByNameParserRuleCall_1_0()); }
	ruleResourceByName{ after(grammarAccess.getPropOfSubjAccess().getSubjResourceByNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubjProp__SubjAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubjPropAccess().getSubjResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getSubjPropAccess().getSubjResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubjProp__HwPhrAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubjPropAccess().getHwPhrWithPhraseParserRuleCall_1_0()); }
	ruleWithPhrase{ after(grammarAccess.getSubjPropAccess().getHwPhrWithPhraseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__SubjAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getSubjResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getInstAttrSPVAccess().getSubjResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__PropsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getPropsResourceByNameParserRuleCall_2_0()); }
	ruleResourceByName{ after(grammarAccess.getInstAttrSPVAccess().getPropsResourceByNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__ValsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getValsAdditiveExpressionParserRuleCall_3_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getInstAttrSPVAccess().getValsAdditiveExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__PropsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getPropsResourceByNameParserRuleCall_4_2_0()); }
	ruleResourceByName{ after(grammarAccess.getInstAttrSPVAccess().getPropsResourceByNameParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrSPV__ValsAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrSPVAccess().getValsAdditiveExpressionParserRuleCall_4_3_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getInstAttrSPVAccess().getValsAdditiveExpressionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrPSV__PropAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrPSVAccess().getPropPropOfSubjParserRuleCall_0_0()); }
	rulePropOfSubj{ after(grammarAccess.getInstAttrPSVAccess().getPropPropOfSubjParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstAttrPSV__ValAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstAttrPSVAccess().getValExplicitValueParserRuleCall_2_0()); }
	ruleExplicitValue{ after(grammarAccess.getInstAttrPSVAccess().getValExplicitValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__SubclassAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getSubclassResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getSubTypeOfAccess().getSubclassResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubTypeOf__SuperclassAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubTypeOfAccess().getSuperclassResourceByNameParserRuleCall_5_0()); }
	ruleResourceByName{ after(grammarAccess.getSubTypeOfAccess().getSuperclassResourceByNameParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__VarListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getVarListVariableListParserRuleCall_3_0()); }
	ruleVariableList{ after(grammarAccess.getExistentialNegationAccess().getVarListVariableListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialNegation__QuantifiedAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistentialNegationAccess().getQuantifiedPrimaryExpressionParserRuleCall_6_0()); }
	rulePrimaryExpression{ after(grammarAccess.getExistentialNegationAccess().getQuantifiedPrimaryExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalValue__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalValueAccess().getOpAlternatives_0_0()); }
(rule__IntervalValue__OpAlternatives_0_0)
{ after(grammarAccess.getIntervalValueAccess().getOpAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalValue__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalValueAccess().getExprAdditiveExpressionParserRuleCall_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getIntervalValueAccess().getExprAdditiveExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__InstNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getInstNameResourceByNameParserRuleCall_0_0()); }
	ruleResourceByName{ after(grammarAccess.getExplicitValueAccess().getInstNameResourceByNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__LitValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getLitValueLiteralValueParserRuleCall_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getExplicitValueAccess().getLitValueLiteralValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__ValueListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getValueListLeftSquareBracketKeyword_2_0_0()); }
(
{ before(grammarAccess.getExplicitValueAccess().getValueListLeftSquareBracketKeyword_2_0_0()); }

	'[' 

{ after(grammarAccess.getExplicitValueAccess().getValueListLeftSquareBracketKeyword_2_0_0()); }
)

{ after(grammarAccess.getExplicitValueAccess().getValueListLeftSquareBracketKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__RowAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getRowValueRowParserRuleCall_2_1_0()); }
	ruleValueRow{ after(grammarAccess.getExplicitValueAccess().getRowValueRowParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__TermAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getTermPIKeyword_3_0()); }
(
{ before(grammarAccess.getExplicitValueAccess().getTermPIKeyword_3_0()); }

	'PI' 

{ after(grammarAccess.getExplicitValueAccess().getTermPIKeyword_3_0()); }
)

{ after(grammarAccess.getExplicitValueAccess().getTermPIKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitValue__TermAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitValueAccess().getTermKnownKeyword_4_0()); }
(
{ before(grammarAccess.getExplicitValueAccess().getTermKnownKeyword_4_0()); }

	'known' 

{ after(grammarAccess.getExplicitValueAccess().getTermKnownKeyword_4_0()); }
)

{ after(grammarAccess.getExplicitValueAccess().getTermKnownKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__RowsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_2_0()); }
	ruleValueRow{ after(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTable__RowsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_4_2_0()); }
	ruleValueRow{ after(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralNumberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralNumberNUMBERParserRuleCall_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralValueAccess().getLiteralNumberNUMBERParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralStringAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralStringSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralValueAccess().getLiteralStringSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralBooleanAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralBooleanAlternatives_2_0()); }
(rule__LiteralValue__LiteralBooleanAlternatives_2_0)
{ after(grammarAccess.getLiteralValueAccess().getLiteralBooleanAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRow__ExplicitValuesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueRowAccess().getExplicitValuesExplicitValueParserRuleCall_0_0()); }
	ruleExplicitValue{ after(grammarAccess.getValueRowAccess().getExplicitValuesExplicitValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRow__ExplicitValuesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueRowAccess().getExplicitValuesExplicitValueParserRuleCall_1_1_0()); }
	ruleExplicitValue{ after(grammarAccess.getValueRowAccess().getExplicitValuesExplicitValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_UNSIGNED_NUMBER : (('0'..'9')+|('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('e'|'E') ('+'|'-')? ('0'..'9')+);

RULE_INT : 'this has been disabled';

RULE_EOS : '.' (' '|'\t'|'\r'|'\n'|EOF);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


